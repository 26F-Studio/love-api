return {
    callbacks = {
        {
            description = "If a file called conf.lua is present in your game folder (or .love file), it is run before the LÖVE modules are loaded. You can use this file to overwrite the love.conf function, which is later called by the LÖVE 'boot' script. Using the love.conf function, you can set some configuration options, and change things like the default size of the window, which modules are loaded, and other stuff.",
            descriptiont = {},
            minidescriptiont = {},
            name = "conf",
            variants = {
                {
                    arguments = {
                        {
                            description = "The love.conf function takes one argument: a table filled with all the default values which you can overwrite to your liking. If you want to change the default window size, for instance, do:\n\nfunction love.conf(t)\n    t.window.width = 1024\n    t.window.height = 768\nend\n\nIf you don't need the physics module or joystick module, do the following.\n\nfunction love.conf(t)\n    t.modules.joystick = false\n    t.modules.physics = false\nend\n\nSetting unused modules to false is encouraged when you release your game. It reduces startup time slightly (especially if the joystick module is disabled) and reduces memory usage (slightly).\n\nNote that you can't disable love.filesystem; it's mandatory. The same goes for the love module itself. love.graphics needs love.window to be enabled.",
                            name = "t",
                            table = {
                                {
                                    default = "nil",
                                    description = "This flag determines the name of the save directory for your game. Note that you can only specify the name, not the location where it will be created:\nt.identity = \"gabe_HL3\" -- Correct\n\nt.identity = \"c:/Users/gabe/HL3\" -- Incorrect\nAlternatively love.filesystem.setIdentity can be used to set the save directory outside of the config file.",
                                    name = "identity",
                                    type = "string"
                                },
                                {
                                    default = "\"0.10.2\"",
                                    description = "t.version should be a string, representing the version of LÖVE for which your game was made. It should be formatted as \"X.Y.Z\" where X is the major release number, Y the minor, and Z the patch level. It allows LÖVE to display a warning if it isn't compatible. Its default is the version of LÖVE running.",
                                    name = "version",
                                    type = "string"
                                },
                                {
                                    default = "false",
                                    description = "Determines whether a console should be opened alongside the game window (Windows only) or not. Note: On OSX you can get console output by running LÖVE through the terminal.",
                                    name = "console",
                                    type = "boolean"
                                },
                                {
                                    default = "true",
                                    description = "Sets whether the device accelerometer on iOS and Android should be exposed as a 3-axis Joystick. Disabling the accelerometer when it's not used may reduce CPU usage.",
                                    name = "accelerometerjoystick",
                                    type = "boolean"
                                },
                                {
                                    default = "false",
                                    description = "Sets whether files are saved in external storage (true) or internal storage (false) on Android.",
                                    name = "externalstorage",
                                    type = "boolean"
                                },
                                {
                                    default = "false",
                                    description = "Determines whether gamma-correct rendering is enabled, when the system supports it.",
                                    name = "gammacorrect",
                                    type = "boolean"
                                },
                                {
                                    description = "It is possible to defer window creation until love.window.setMode is first called in your code. To do so, set t.window = nil in love.conf (or t.screen = nil in older versions.) If this is done, LÖVE may crash if any function from love.graphics is called before the first love.window.setMode in your code.\n\nThe t.window table was named t.screen in versions prior to 0.9.0. The t.screen table doesn't exist in love.conf in 0.9.0, and the t.window table doesn't exist in love.conf in 0.8.0. This means love.conf will fail to execute (therefore it will fall back to default values) if care is not taken to use the correct table for the LÖVE version being used.",
                                    name = "window",
                                    table = {
                                        {
                                            default = "\"Untitled\"",
                                            description = "Sets the title of the window the game is in. Alternatively love.window.setTitle can be used to change the window title outside of the config file.",
                                            name = "title",
                                            type = "string"
                                        },
                                        {
                                            default = "nil",
                                            description = "A filepath to an image to use as the window's icon. Not all operating systems support very large icon images. The icon can also be changed with love.window.setIcon.",
                                            name = "icon",
                                            type = "string"
                                        },
                                        {
                                            default = "800",
                                            description = "Sets the window's dimensions. If these flags are set to 0 LÖVE automatically uses the user's desktop dimensions.",
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            default = "600",
                                            description = "Sets the window's dimensions. If these flags are set to 0 LÖVE automatically uses the user's desktop dimensions.",
                                            name = "height",
                                            type = "string"
                                        },
                                        {
                                            default = "false",
                                            description = "Removes all border visuals from the window. Note that the effects may wary between operating systems.",
                                            name = "borderless",
                                            type = "boolean"
                                        },
                                        {
                                            default = "false",
                                            description = "If set to true this allows the user to resize the game's window.",
                                            name = "resizable",
                                            type = "boolean"
                                        },
                                        {
                                            default = "1",
                                            description = "Sets the minimum width and height for the game's window if it can be resized by the user. If you set lower values to window.width and window.height LÖVE will always favor the minimum dimensions set via window.minwidth and window.minheight.",
                                            name = "minwidth",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Sets the minimum width and height for the game's window if it can be resized by the user. If you set lower values to window.width and window.height LÖVE will always favor the minimum dimensions set via window.minwidth and window.minheight.",
                                            name = "minheight",
                                            type = "number"
                                        },
                                        {
                                            default = "false",
                                            description = "Whether to run the game in fullscreen (true) or windowed (false) mode. The fullscreen can also be toggled via love.window.setFullscreen or love.window.setMode.",
                                            name = "fullscreen",
                                            type = "boolean"
                                        },
                                        {
                                            default = "\"desktop\"",
                                            description = "Specifies the type of fullscreen mode to use (normal or desktop). Generally the desktop is recommended, as it is less restrictive than normal mode on some operating systems.",
                                            name = "fullscreentype",
                                            type = "string"
                                        },
                                        {
                                            default = "true",
                                            description = "Enables or deactivates vertical synchronization. Vsync tries to keep the game at a steady framerate and can prevent issues like screen tearing. It is recommended to keep vsync activated if you don't know about the possible implications of turning it off.",
                                            name = "vsync",
                                            type = "boolean"
                                        },
                                        {
                                            default = "0",
                                            description = "The number of samples to use with multi-sampled antialiasing.",
                                            name = "msaa",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "The index of the display to show the window in, if multiple monitors are available.",
                                            name = "display",
                                            type = "number"
                                        },
                                        {
                                            default = "false",
                                            description = "See love.window.getPixelScale, love.window.toPixels, and love.window.fromPixels. It is recommended to keep this option disabled if you can't test your game on a Mac or iOS system with a Retina display, because code will need tweaking to make sure things look correct.",
                                            name = "highdpi",
                                            type = "boolean"
                                        },
                                        {
                                            default = "nil",
                                            description = "Determines the position of the window on the user's screen. Alternatively love.window.setPosition can be used to change the position on the fly.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            default = "nil",
                                            description = "Determines the position of the window on the user's screen. Alternatively love.window.setPosition can be used to change the position on the fly.",
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    description = "Module options.",
                                    name = "modules",
                                    table = {
                                        {
                                            default = "true",
                                            description = "Enable the audio module.",
                                            name = "audio",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the event module.",
                                            name = "event",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the graphics module.",
                                            name = "graphics",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the image module.",
                                            name = "image",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the joystick module.",
                                            name = "joystick",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the keyboard module.",
                                            name = "keyboard",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the math module.",
                                            name = "math",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the mouse module.",
                                            name = "mouse",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the physics module.",
                                            name = "physics",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the sound module.",
                                            name = "sound",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the system module.",
                                            name = "system",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the timer module.",
                                            name = "timer",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the touch module.",
                                            name = "touch",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the video module.",
                                            name = "video",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the window module.",
                                            name = "window",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "Enable the thread module.",
                                            name = "thread",
                                            type = "boolean"
                                        }
                                    },
                                    type = "table"
                                }
                            },
                            type = "table"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a directory is dragged and dropped onto the window.",
            descriptiont = {
                jp = "ディレクトリがウィンドウにドラッグ・アンド・ドロップされる時に発生するコールバック関数です。"
            },
            minidescriptiont = {
                jp = "ディレクトリがウィンドウにドラッグ・アンド・ドロップされる時に発生するコールバック関数です。"
            },
            name = "directorydropped",
            variants = {
                {
                    arguments = {
                        {
                            description = "The full platform-dependent path to the directory. It can be used as an argument to love.filesystem.mount, in order to gain read access to the directory with love.filesystem.",
                            descriptiont = {
                                jp = "ディレクトリのパスは完全にプラットフォームに依存します。それは love.filesystem で読み取りアクセス権を得るために love.filesystem.mount の引数として使用することができます。"
                            },
                            name = "path",
                            type = "string"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function used to draw on the screen every frame.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche in jeden Frame den Bildschirminhalt zeichnet.",
                jp = "フレームごとに画面へ描画するために使用されるコールバック関数です。",
                ko = "매 프레임마다 화면에 그림을 그리는 데 사용되는 콜백 함수입니다.",
                pt = "Função de callback usada para desenhar na tela a cada quadro.",
                ru = "Функция, вызываемая в каждом кадре, используется для рисования на экране."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche in jeden Frame den Bildschirminhalt zeichnet.",
                jp = "フレームごとに画面へ描画するために使用されるコールバック関数です。",
                ko = "매 프레임마다 화면에 그림을 그리는 데 사용되는 콜백 함수입니다.",
                pt = "Função de callback usada para desenhar na tela a cada quadro.",
                ru = "Функция, вызываемая в каждом кадре, используется для рисования на экране."
            },
            name = "draw",
            variants = {
                {}
            }
        },
        {
            description = "The error handler, used to display error messages.",
            descriptiont = {
                de = "Diese Rückruffunktion ist zum Anzeigen von Fehlernachrichten zuständig.",
                jp = "エラーメッセージの表示に使用されるエラーハンドラです。",
                ko = "오류 메시지를 출력하기 위해 사용되는 오류 핸들러입니다."
            },
            minidescriptiont = {
                de = "Diese Rückruffunktion ist zum Anzeigen von Fehlernachrichten zuständig.",
                jp = "エラーメッセージの表示に使用されるエラーハンドラです。",
                ko = "오류 메시지를 출력하기 위해 사용되는 오류 핸들러입니다."
            },
            name = "errhand",
            variants = {
                {
                    arguments = {
                        {
                            description = "The error message.",
                            descriptiont = {
                                ko = "오류 메시지입니다."
                            },
                            name = "msg",
                            type = "string"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a file is dragged and dropped onto the window.",
            descriptiont = {
                jp = "ファイルがウィンドウにドラッグ・アンド・ドロップされる時に発生するコールバック関数です。"
            },
            minidescriptiont = {
                jp = "ファイルがウィンドウにドラッグ・アンド・ドロップされる時に発生するコールバック関数です。"
            },
            name = "filedropped",
            variants = {
                {
                    arguments = {
                        {
                            description = "The unopened File object representing the file that was dropped.",
                            descriptiont = {
                                jp = "ドロップされたファイルを表す未開封の File オブジェクト。"
                            },
                            name = "file",
                            type = "File"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when window receives or loses focus.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, wenn das Fenster den Fokus erhält oder verliert.",
                jp = "ウィンドウのフォーカスを得たときか失ったときに発生するコールバック関数です。",
                ko = "윈도우가 포커스를 잃거나 얻었을 때 호출되는 콜백 함수입니다.",
                pt = "Função de callback executada sempre que a janela recebe ou perde o foco.",
                ru = "Функция вызывается, когда окно получает или теряет фокус."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, wenn das Fenster den Fokus erhält oder verliert.",
                jp = "ウィンドウのフォーカスを得たときか失ったときに発生するコールバック関数です。",
                ko = "윈도우가 포커스를 잃거나 받았을 때 호출되는 콜백 함수입니다.",
                pt = "Função de callback executada sempre que a janela recebe ou perde o foco.",
                ru = "Функция вызывается, когда окно получает или теряет фокус."
            },
            name = "focus",
            variants = {
                {
                    arguments = {
                        {
                            description = "True if the window gains focus, false if it loses focus.",
                            descriptiont = {
                                de = "Ob das Fenster fokussiert ist.",
                                jp = "ウィンドウのフォーカスを得た場合は true であり、失った場合は false です。",
                                ko = "포커스의 상태",
                                pt = "Janela em foco",
                                ru = "Состояние фокуса окна"
                            },
                            name = "focus",
                            type = "boolean"
                        }
                    },
                    descriptiont = {
                        de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.focus( f )\n\n&lt;/source&gt;"
                    }
                }
            }
        },
        {
            description = "Called when a Joystick's virtual gamepad axis is moved.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche aufgerufen wird, wenn eine virtuelle Gamepad-Achse bewegt wird.",
                jp = "ジョイスティックとして割り当てられている仮想ゲームパッドの軸が動かされたときに呼ばれます。",
                ko = "가상 게임패드 호환 조이스틱 축이 움직였을 때 호출됩니다."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche aufgerufen wird, wenn eine virtuelle Gamepad-Achse bewegt wird.",
                jp = "ジョイスティックとして割り当てられている仮想ゲームパッドの軸が動かされたときに呼ばれます。",
                ko = "가상 게임패드 호환 조이스틱 축이 움직였을 때 호출됩니다."
            },
            name = "gamepadaxis",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick object.",
                            descriptiont = {
                                ko = "조이스틱 객체."
                            },
                            name = "joystick",
                            type = "Joystick"
                        },
                        {
                            description = "The virtual gamepad axis.",
                            descriptiont = {
                                ko = "가상 게임패드 호환 조이스틱 축."
                            },
                            name = "axis",
                            type = "GamepadAxis"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a Joystick's virtual gamepad button is pressed.",
            descriptiont = {
                jp = "ジョイスティックとして割り当てられている仮想ゲームパッドのボタンが押されたときに呼ばれます。",
                ko = "가상 게임패드 호환 조이스틱 버튼이 눌리면 호출됩니다."
            },
            minidescriptiont = {
                jp = "ジョイスティックとして割り当てられている仮想ゲームパッドのボタンが押されたときに呼ばれます。",
                ko = "가상 게임패드 호환 조이스틱 버튼이 눌리면 호출됩니다."
            },
            name = "gamepadpressed",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick object.",
                            descriptiont = {
                                jp = "joystick オブジェクト。",
                                ko = "조이스틱 객체."
                            },
                            name = "joystick",
                            type = "Joystick"
                        },
                        {
                            description = "The virtual gamepad button.",
                            descriptiont = {
                                jp = "仮想ゲームパッドのボタン。",
                                ko = "가상 게임패드 호환 조이스틱 버튼."
                            },
                            name = "button",
                            type = "GamepadButton"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a Joystick's virtual gamepad button is released.",
            descriptiont = {
                jp = "ジョイスティックとして割り当てられている仮想ゲームパッドのボタンが離されたときに呼ばれます。",
                ko = "가상 게임패드 호환 조이스틱 버튼이 떼지면 호출됩니다."
            },
            minidescriptiont = {
                jp = "ジョイスティックとして割り当てられている仮想ゲームパッドのボタンが離されたときに呼ばれます。",
                ko = "가상 게임패드 호환 조이스틱 버튼이 떼지면 호출됩니다."
            },
            name = "gamepadreleased",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick object.",
                            descriptiont = {
                                jp = "joystick オブジェクト。",
                                ko = "조이스틱 객체."
                            },
                            name = "joystick",
                            type = "Joystick"
                        },
                        {
                            description = "The virtual gamepad button.",
                            descriptiont = {
                                jp = "仮想ゲームパッドのボタン。",
                                ko = "가상 게임패드 호환 조이스틱 버튼."
                            },
                            name = "button",
                            type = "GamepadButton"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a Joystick is connected.\n\nThis callback is also triggered after love.load for every Joystick which was already connected when the game started up.",
            descriptiont = {
                jp = "Joystick が接続されたときに呼ばれます。",
                ko = "조이스틱이 연결되면 호출됩니다."
            },
            minidescriptiont = {
                jp = "Joystick が接続されたときに呼ばれます。",
                ko = "조이스틱이 연결되면 호출됩니다."
            },
            name = "joystickadded",
            variants = {
                {
                    arguments = {
                        {
                            description = "The newly connected Joystick object.",
                            descriptiont = {
                                jp = "新たに接続された Joystick オブジェクト。",
                                ko = "새롭게 연결된 조이스틱 객체."
                            },
                            name = "joystick",
                            type = "Joystick"
                        }
                    },
                    descriptiont = {
                        ko = "love.load 이후, love.joystickadded는 게임이 시작되기 전에 이미 연결되었던 모든 조이스틱에 대해서도 호출됩니다."
                    }
                }
            }
        },
        {
            description = "Called when a joystick axis moves.",
            descriptiont = {
                jp = "ジョイスティックの軸が動かされたときに呼ばれます。",
                ko = "조이스틱 축이 움직이면 호출됩니다."
            },
            minidescriptiont = {
                jp = "ジョイスティックの軸が動かされたときに呼ばれます。",
                ko = "조이스틱 축이 움직이면 호출됩니다."
            },
            name = "joystickaxis",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick object.",
                            descriptiont = {
                                jp = "Joystick オブジェクト。",
                                ko = "조이스틱 객체."
                            },
                            name = "joystick",
                            type = "Joystick"
                        },
                        {
                            description = "The axis number.",
                            descriptiont = {
                                jp = "軸の番号。",
                                ko = "조이스틱 축 인덱스."
                            },
                            name = "axis",
                            type = "number"
                        },
                        {
                            description = "The new axis value.",
                            descriptiont = {
                                jp = "軸の新しい値。",
                                ko = "새 조이스틱 축 값."
                            },
                            name = "value",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a joystick hat direction changes.",
            descriptiont = {
                jp = "ジョイスティックのハットの方向が変化したときに呼ばれます。",
                ko = "조이스틱 햇이 움직이면 호출됩니다."
            },
            minidescriptiont = {
                jp = "ジョイスティックのハットの方向が変化したときに呼ばれます。",
                ko = "조이스틱 햇이 움직이면 호출됩니다."
            },
            name = "joystickhat",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick object.",
                            descriptiont = {
                                jp = "Joystick オブジェクト。",
                                ko = "조이스틱 객체."
                            },
                            name = "joystick",
                            type = "Joystick"
                        },
                        {
                            description = "The hat number.",
                            descriptiont = {
                                jp = "ハットの番号。",
                                ko = "조이스틱 햇 인덱스."
                            },
                            name = "hat",
                            type = "number"
                        },
                        {
                            description = "The new hat direction.",
                            descriptiont = {
                                jp = "ハットの新しい方向。",
                                ko = "새 조이스틱 햇 위치."
                            },
                            name = "direction",
                            type = "JoystickHat"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a joystick button is pressed.",
            descriptiont = {
                jp = "ジョイスティックのボタンが押されたときに呼ばれます。",
                ko = "조이스틱 버튼이 눌렸을 때 호출됩니다.",
                pt = "Chamada quando um botão no joystick é pressionado.",
                ru = "Вызывается, когда происходит нажатие кнопки на джойстике."
            },
            minidescriptiont = {
                jp = "ジョイスティックのボタンが押されたときに呼ばれます。",
                ko = "조이스틱 버튼이 눌렸을 때 호출됩니다.",
                pt = "Chamada quando um botão no joystick é pressionado.",
                ru = "Вызывается, когда происходит нажатие кнопки на джойстике."
            },
            name = "joystickpressed",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick number.",
                            descriptiont = {
                                pt = "O número do joystick.",
                                ru = "Номер джойстика."
                            },
                            name = "joystick",
                            type = "number"
                        },
                        {
                            description = "The button number.",
                            descriptiont = {
                                pt = "O número do botão.",
                                ru = "Номер кнопки."
                            },
                            name = "button",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a joystick button is released.",
            descriptiont = {
                jp = "ジョイスティックのボタンが離されたときに呼ばれます。",
                ko = "조이스틱 버튼이 떼졌을 때 호출됩니다.",
                pt = "Chamada quando um botão do joystick é liberado.",
                ru = "Вызывается, когда кнопка на джойстике отпускается."
            },
            minidescriptiont = {
                jp = "ジョイスティックのボタンが離されたときに呼ばれます。",
                ko = "조이스틱 버튼이 떼졌을 때 호출됩니다.",
                pt = "Chamada quando um botão do joystick é liberado.",
                ru = "Вызывается, когда кнопка на джойстике отпускается."
            },
            name = "joystickreleased",
            variants = {
                {
                    arguments = {
                        {
                            description = "The joystick number.",
                            descriptiont = {
                                pt = "O númeo do joystick.",
                                ru = "Номер джойстика."
                            },
                            name = "joystick",
                            type = "number"
                        },
                        {
                            description = "The button number.",
                            descriptiont = {
                                pt = "O número do botão.",
                                ru = "Номер кнопки."
                            },
                            name = "button",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Called when a Joystick is disconnected.",
            descriptiont = {
                jp = "Joystick が切断されたときに呼ばれます。",
                ko = "조이스틱이 연결 해제되었을 때 호출됩니다."
            },
            minidescriptiont = {
                jp = "Joystick が切断されたときに呼ばれます。",
                ko = "조이스틱이 연결 해제되었을 때 호출됩니다."
            },
            name = "joystickremoved",
            variants = {
                {
                    arguments = {
                        {
                            description = "The now-disconnected Joystick object.",
                            descriptiont = {
                                jp = "いま切断された Joystick オブジェクト。"
                            },
                            name = "joystick",
                            type = "Joystick"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a key is pressed.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, sobald der Nutzer eine Taste drückt.\n\nZur korrekten Verarbeitung von Unicode-Input muss love.textinput verwendet werden.",
                jp = "キーが押されたときに発生するコールバック関数です。",
                ko = "키를 눌렀을 때 작동하는 콜백 함수입니다.",
                pt = "Função de callback executada sempre que uma tecla é pressionada.",
                ru = "Функция вызывается, когда происходит нажатие клавиши."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, sobald der Nutzer eine Taste drückt.",
                jp = "キーが押されたときに発生するコールバック関数です。",
                ko = "키를 눌렀을 때 작동하는 콜백 함수입니다.",
                pt = "Função de callback executada sempre que uma tecla é pressionada.",
                ru = "Функция вызывается, когда происходит нажатие клавиши."
            },
            name = "keypressed",
            variants = {
                {
                    arguments = {
                        {
                            description = "Character of the pressed key.",
                            descriptiont = {
                                jp = "押されたキーの文字。"
                            },
                            name = "key",
                            type = "KeyConstant"
                        },
                        {
                            description = "The scancode representing the pressed key.",
                            descriptiont = {
                                jp = "押されたキーを表すスキャンコード。"
                            },
                            name = "scancode",
                            type = "Scancode"
                        },
                        {
                            description = "Whether this keypress event is a repeat. The delay between key repeats depends on the user's system settings.",
                            descriptiont = {
                                jp = "このキー押し下げイベントを繰り返すかどうか。キーを繰り返す間の遅延間隔は利用者のシステム設定に依存します。"
                            },
                            name = "isrepeat",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a keyboard key is released.",
            descriptiont = {
                de = "Eine Rückruffunktion, die ausgeführt wird, wenn eine Taste losgelassen wird.\n\nIm Vergleich zu love.keypressed hat love.keyreleased kein Unicode-Argument, da diese Charaktere nur generiert werden, wenn eine Taste gedrückt wird.",
                jp = "キーが離されたときに発生するコールバック関数です。",
                ko = "키를 뗐을 때 작동하는 콜백 함수입니다.",
                pt = "Função de callback executada sempre que uma tecla é liberada.",
                ru = "Функция вызывается, когда происходит отпускание клавиши."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, die ausgeführt wird, wenn eine Taste losgelassen wird.",
                jp = "キーが離されたときに発生するコールバック関数です。",
                ko = "키를 뗐을 때 작동하는 콜백 함수입니다.",
                pt = "Função de callback executada sempre que uma tecla é liberada.",
                ru = "Функция вызывается, когда происходит отпускание клавиши."
            },
            name = "keyreleased",
            variants = {
                {
                    arguments = {
                        {
                            description = "Character of the released key.",
                            descriptiont = {
                                jp = "離されたキーの文字。"
                            },
                            name = "key",
                            type = "KeyConstant"
                        },
                        {
                            description = "The scancode representing the released key.",
                            descriptiont = {
                                jp = "離されたキーを表すスキャンコード。"
                            },
                            name = "scancode",
                            type = "Scancode"
                        }
                    }
                }
            }
        },
        {
            description = "This function is called exactly once at the beginning of the game.",
            descriptiont = {
                de = "Diese Rückruffunktion wird nur einmal beim Starten des Spiels ausgeführt.",
                jp = "ゲームの開始時にきっかりと一度だけ呼ばれます。",
                ko = "게임 시작시 단 한번 호출되는 함수입니다.",
                pt = "Esta função é chamada exatamente uma única vez no início do jogo.",
                ru = "Эта функция вызывается только один раз в начале игры."
            },
            minidescriptiont = {
                de = "Diese Rückruffunktion wird nur einmal beim Starten des Spiels ausgeführt.",
                jp = "ゲームの開始時にきっかりと一度だけ呼ばれます。",
                ko = "게임 시작시 단 한번 호출되는 함수입니다.",
                pt = "Esta função é chamada exatamente uma única vez no início do jogo.",
                ru = "Эта функция вызывается только один раз в начале игры."
            },
            name = "load",
            variants = {
                {
                    arguments = {
                        {
                            description = "Command line arguments given to the game.",
                            descriptiont = {
                                de = "Argumente, welche via Kommandozeile an das Spiel übergeben werden sollen.",
                                jp = "ゲームへ与えるコマンドライン引数。",
                                ko = "커맨드 라인으로 실행됐을 때 전달되는 인자 목록입니다."
                            },
                            name = "arg",
                            type = "table"
                        }
                    },
                    descriptiont = {
                        de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.load( )\n\n&lt;/source&gt;"
                    }
                }
            }
        },
        {
            description = "Callback function triggered when the system is running out of memory on mobile devices.\n\n Mobile operating systems may forcefully kill the game if it uses too much memory, so any non-critical resource should be removed if possible (by setting all variables referencing the resources to nil, and calling collectgarbage()), when this event is triggered. Sounds and images in particular tend to use the most memory.",
            descriptiont = {
                jp = "携帯機器でシステム実行中にメモリ不足になった時に発生するコールバック関数です。\n\n多くのメモリを使用する場合は携帯機器用のオペレーティング・システムはゲームを強制終了してしまうことがあるため、イベントが発生する時に(リソースを参照する全ての変数を nil に設定してから、 collectgarbage() を呼び出します)、可能ならば重要ではない資源は全て削除すべきです。特に音声と映像は最も多くのメモリを使用する傾向があります。"
            },
            minidescriptiont = {
                jp = "携帯機器でシステム実行中にメモリ不足になった時に発生するコールバック関数です。"
            },
            name = "lowmemory",
            variants = {
                {}
            }
        },
        {
            description = "Callback function triggered when window receives or loses mouse focus.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, sobald das Fenster den Mausfokus verliert oder erlangt.",
                jp = "ウィンドウがマウスのフォーカスを受け取るか失ったときに発生するコールバック関数です。",
                ko = "윈도우가 포커스를 받거나 잃었을 때 호출되는 콜백 함수입니다."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, sobald das Fenster den Mausfokus verliert oder erlangt.",
                jp = "ウィンドウがマウスのフォーカスを受け取るか失ったときに発生するコールバック関数です。",
                ko = "윈도우가 포커스를 받거나 잃었을 때 호출되는 콜백 함수입니다."
            },
            name = "mousefocus",
            variants = {
                {
                    arguments = {
                        {
                            description = "Whether the window has mouse focus or not.",
                            descriptiont = {
                                de = "Wahr wenn die Maus auf das Fenster fokussiert ist. Falsch, wenn nicht.",
                                ko = "윈도우 포커스"
                            },
                            name = "focus",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when the mouse is moved.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche ausgelöst wird sobald der Mauszeiger bewegt wird.",
                jp = "マウスが移動されたときに発生するコールバック関数です。"
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche ausgelöst wird sobald der Mauszeiger bewegt wird.",
                jp = "マウスが移動されたときに発生するコールバック関数です。"
            },
            name = "mousemoved",
            variants = {
                {
                    arguments = {
                        {
                            description = "The mouse position on the x-axis.",
                            descriptiont = {
                                jp = "マウスの x 座標。"
                            },
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "The mouse position on the y-axis.",
                            descriptiont = {
                                jp = "マウスの y 座標。"
                            },
                            name = "y",
                            type = "number"
                        },
                        {
                            description = "The amount moved along the x-axis since the last time love.mousemoved was called.",
                            descriptiont = {
                                jp = "前回の時に love.mousemoved が呼ばれてからの x-軸の移動量。"
                            },
                            name = "dx",
                            type = "number"
                        },
                        {
                            description = "The amount moved along the y-axis since the last time love.mousemoved was called.",
                            descriptiont = {
                                jp = "前回の時に love.mousemoved が呼ばれてからの y-軸の移動量。"
                            },
                            name = "dy",
                            type = "number"
                        },
                        {
                            description = "True if the mouse button press originated from a touchscreen touch-press.",
                            descriptiont = {
                                jp = "true の場合はマウスボタンの押下によりタッチ画面のタッチ打鍵を発生させます。"
                            },
                            name = "istouch",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a mouse button is pressed.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, wenn eine Maustaste gedrückt wird.",
                jp = "マウスのボタンが押されたときに発生するコールバック関数です。",
                ko = "마우스 버튼을 눌렀을 때 호출되는 함수입니다.",
                pt = "Função de callback executada sempre que um botão do mouse é pressionado.",
                ru = "Функция срабатывает, когда происходит нажатие кнопки мыши."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, wenn eine Maustaste gedrückt wird.",
                jp = "マウスのボタンが押されたときに発生するコールバック関数です。",
                ko = "마우스 버튼을 눌렀을 때 호출되는 함수입니다.",
                pt = "Função de callback executada sempre que um botão do mouse é pressionado.",
                ru = "Функция срабатывает, когда происходит нажатие кнопки мыши."
            },
            name = "mousepressed",
            variants = {
                {
                    arguments = {
                        {
                            description = "Mouse x position, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位による、マウスの x 座標。"
                            },
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "Mouse y position, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位による、マウスの y 座標。"
                            },
                            name = "y",
                            type = "number"
                        },
                        {
                            description = "The button index that was pressed. 1 is the primary mouse button, 2 is the secondary mouse button and 3 is the middle button. Further buttons are mouse dependent",
                            descriptiont = {
                                jp = "押されたボタンの索引。 1 は第一マウスボタンであり、 2 は第二マウスボタンおよび 3 は中央のボタンです。追加的なボタンはマウスの機種に依存します。"
                            },
                            name = "button",
                            type = "number"
                        },
                        {
                            description = "True if the mouse button press originated from a touchscreen touch-press.",
                            descriptiont = {
                                jp = "true の場合はマウスボタンの押し下げをタッチ画面のタッチ打鍵から発生させます。"
                            },
                            name = "isTouch",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a mouse button is released.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, wenn eine Maustaste losgelassen wird.",
                jp = "マウスのボタンが離されたときに発生するコールバック関数です。",
                ko = "마우스 버튼을 뗐을 때 호출되는 함수입니다.",
                pt = "Função de callback executada sempre que um botão do mouse é liberado.",
                ru = "Функция срабатывает, когда происходит отпускание кнопки мыши."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche ausgeführt wird, wenn eine Maustaste losgelassen wird.",
                jp = "マウスのボタンが離されたときに発生するコールバック関数です。",
                ko = "마우스 버튼을 뗐을 때 호출되는 함수입니다.",
                pt = "Função de callback executada sempre que um botão do mouse é liberado.",
                ru = "Функция срабатывает, когда происходит отпускание кнопки мыши."
            },
            name = "mousereleased",
            variants = {
                {
                    arguments = {
                        {
                            description = "Mouse x position, in pixels.",
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "Mouse y position, in pixels.",
                            name = "y",
                            type = "number"
                        },
                        {
                            description = "The button index that was released. 1 is the primary mouse button, 2 is the secondary mouse button and 3 is the middle button. Further buttons are mouse dependent.",
                            name = "button",
                            type = "number"
                        },
                        {
                            description = "True if the mouse button press originated from a touchscreen touch-release.",
                            name = "isTouch",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when the game is closed.",
            descriptiont = {
                de = "Eine Rückruffunktion, die ausgeführt wird, wenn das Spiel beendet wird.",
                jp = "ゲームが閉じられようとしたときに発生するコールバック関数です。",
                ko = "게임이 종료되었을 때 호출되는 콜백 함수입니다.",
                pt = "Função callback executada sempre que um jogo é fechado.",
                ru = "Функция вызывается перед закрытием игры."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, die ausgeführt wird, wenn das Spiel beendet wird.",
                jp = "ゲームが閉じられようとしたときに発生するコールバック関数です。",
                ko = "게임이 종료되었을 때 호출되는 콜백 함수입니다.",
                pt = "Função callback executada sempre que um jogo é fechado.",
                ru = "Функция вызывается перед закрытием игры."
            },
            name = "quit",
            variants = {
                {
                    descriptiont = {
                        de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nr = love.quit()\n\n&lt;/source&gt;"
                    },
                    returns = {
                        {
                            description = "Abort quitting. If true, do not close the game.",
                            descriptiont = {
                                de = "Falsch wenn das Spiel beendet werden soll. Wahr wenn das Spiel nicht beendet werden soll.",
                                jp = "true ならば終了処理を中止しますが、それ以外はゲームを閉じます。",
                                ko = "true면 종료를 유보합니다.",
                                pt = "Aborta a saída. Se true, não fecha o jogo.",
                                ru = "Отмена выхода. Если true, то выхода из игры не происходит."
                            },
                            name = "r",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Called when the window is resized, for example if the user resizes the window, or if love.window.setMode is called with an unsupported width or height in fullscreen and the window chooses the closest appropriate size.\n\nCalls to love.window.setMode will only trigger this event if the width or height of the window after the call doesn't match the requested width and height. This can happen if a fullscreen mode is requested which doesn't match any supported mode, or if the fullscreen type is 'desktop' and the requested width or height don't match the desktop resolution.",
            descriptiont = {
                jp = "ウィンドウの大きさが変更されたときに呼ばれますが、例えば、利用者がウィンドウの大きさを変更した、または love.window.setMode が呼ばれたときに非対応の幅または高さである場合は最も近い適切な大きさを選択します。",
                ko = "윈도우의 크기가 변경되면 호출됩니다.\n\n사용자가 윈도우의 크기를 변경하거나, love.window.setMode를 이용해 전체 화면에서 지원되지 않는 가로 세로로 화면 크기를 결정했을 경우 윈도우가 가장 적절한 크기를 선택할 때 호출됩니다.\n\nlove.window.setMode에서 요구한 크기가 실제 윈도우 크기에 반영되지 못했을 때에도 이 이벤트를 발생시킵입니다. 전체 화면 모드와 관련된 자세한 내용은 FullscreenType을 참조하세요."
            },
            minidescriptiont = {
                jp = "ウィンドウの大きさが変更されたときに呼ばれます。",
                ko = "윈도우의 크기가 변경되면 호출됩니다."
            },
            name = "resize",
            variants = {
                {
                    arguments = {
                        {
                            description = "The new width.",
                            descriptiont = {
                                jp = "ピクセル単位での、新規の幅。",
                                ko = "새로 설정된 너비."
                            },
                            name = "w",
                            type = "number"
                        },
                        {
                            description = "The new height.",
                            descriptiont = {
                                jp = "ピクセル単位での、新規の高さ。",
                                ko = "새로 설정된 높이."
                            },
                            name = "h",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "The main function, containing the main loop. A sensible default is used when left out.",
            descriptiont = {
                de = "Die Hauptfunktion, welche die Hauptereignisschleife enthält. Standardmäßig wird eine sinnvolle Voreinstellung genutzt.",
                jp = "メイン・ループを包括するメイン関数。省略時は認識可能な物を標準使用します。",
                ko = "메인 루프를 돌리는 함수입니다. 기본적으로 잘 동작하게 정의되어 있으므로 특별한 경우가 아닌 이상 재정의하지 마세요.",
                pt = "A função principal, que contém o loop principal.",
                ru = "Основная функция, содержащая главный цикл. Если упущена, то используется стандартная реализация этой функции."
            },
            minidescriptiont = {
                de = "Die Hauptfunktion, welche die Hauptereignisschleife enthält. Standardmäßig wird eine sinnvolle Voreinstellung genutzt.",
                jp = "メイン・ループを包括するメイン関数。省略時は認識可能な物を標準使用します。",
                ko = "메인 루프를 돌리는 함수입니다.",
                pt = "A função principal, que contém o loop principal.",
                ru = "Основная функция, содержащая главный цикл."
            },
            name = "run",
            variants = {
                {}
            }
        },
        {
            description = "Called when the candidate text for an IME (Input Method Editor) has changed.\n\nThe candidate text is not the final text that the user will eventually choose. Use love.textinput for that.",
            descriptiont = {
                jp = "IME (Input Method Editor) で候補テキストが変更された時に呼ばれます。\n\n候補テキストは利用者が最終的に選択するであろう確定テキストではありません。それを行うには love.textinput を使用してください。"
            },
            minidescriptiont = {
                jp = "IME (Input Method Editor) で候補テキストが変更された時に呼ばれます。"
            },
            name = "textedited",
            variants = {
                {
                    arguments = {
                        {
                            description = "The UTF-8 encoded unicode candidate text.",
                            descriptiont = {
                                jp = "UTF-8 で符号化された Unicode 候補テキスト。"
                            },
                            name = "text",
                            type = "string"
                        },
                        {
                            description = "The start cursor of the selected candidate text.",
                            descriptiont = {
                                jp = "選択された候補テキストのカーソル始点。"
                            },
                            name = "start",
                            type = "number"
                        },
                        {
                            description = "The length of the selected candidate text. May be 0.",
                            descriptiont = {
                                jp = "選択された候補テキストの長さ。 0 である場合があります。"
                            },
                            name = "length",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Called when text has been entered by the user. For example if shift-2 is pressed on an American keyboard layout, the text \"@\" will be generated.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche durch Texteingaben aufgerufen wird. Hierdurch können Zeichen eingegeben werden, die sonst nur durch Tastenkombinationen erreichbar sind (z.B. würde shift-4 bei einem deutschen Tastenlayout $ generieren).",
                jp = "利用者によりテキストが入力されたときに呼ばれます。例えば、米国英語配列のキーボードで [Shift]+[2] が押されたときに、\"@\" のテキストが生成されます。",
                ko = "사용자가 텍스트를 입력했을 때 호출됩니다. 예를 들어 사용자가 시프트 2를 눌렀을 때 텍스트 \"@\"이 만들어집니다."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche durch Texteingaben aufgerufen wird.",
                jp = "利用者によりテキストが入力されたときに呼ばれます。",
                ko = "사용자가 텍스트를 입력했을 때 호출됩니다."
            },
            name = "textinput",
            variants = {
                {
                    arguments = {
                        {
                            description = "The UTF-8 encoded unicode text.",
                            descriptiont = {
                                de = "Der mit UTF-8 enkodierte Text.",
                                ko = "UTF-8로 인코딩된 텍스트."
                            },
                            name = "text",
                            type = "string"
                        }
                    },
                    descriptiont = {
                        de = "Obwohl Lua-Strings mit UTF-8 enkodierten Text ohne Probleme speichern können, werden sie von der String-Library nicht so behandelt wie es vielleicht zu erwarten ist.\n\nZum Beispiel werden #text (und string.len(text)) die Anzahl an ''bytes'' im String zurückgeben, anstatt der Anzahl an Unicode-Zeichen.\n\nWeitere Informationen und Tips sind auf dem Lua-Wiki und in der Präsentation eines Lua-Entwicklers zu finden.\n\n== Beispiele ==\n\nEingegebenen Text aufzeichnen und ausgeben.\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n    text = \"Tippen Sie los! -- \"\n\nend\n\nfunction love.textinput(t)\n\n    text = text .. t\n\nend\n\nfunction love.draw()\n\n    love.graphics.printf(text, 0, 0, love.graphics.getWidth())\n\nend\n\n&lt;/source&gt;",
                        ko = "Lua에서는 문자열을 UTF-8로 처리할 수 있긴 합니다만 대부분의 문자열 관련 함수들은 여러분이 예상한 대로 동작하진 않을 겁니다. 한 가지 예를 들자면, #text나 string.len(text)처럼 문자열의 길이를 조사할 경우 유니코드 글자수가 아니라 그 문자열의 '''바이트'''수가 조사됩니다. Lua 위키나Lua 창시자의 프리젠테이션에 방문하시면 여러가지 팁과 함께 자세한 설명을 얻으실 수 있습니다.\n\n== 예제 ==\n\n사용자가 입력한 텍스트를 기록하고 출력합니다.\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n    text = \"Type away! -- \"\n\nend\n\nfunction love.textinput(t)\n\n    text = text .. t\n\nend\n\nfunction love.draw()\n\n    love.graphics.printf(text, 0, 0, love.graphics.getWidth())\n\nend\n\n&lt;/source&gt;"
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a Thread encounters an error.",
            descriptiont = {
                jp = "Thread でエラーに遭遇したときに発生するコールバック関数です。",
                ko = "스레드에서 에러가 발생했을 때 호출되는 콜백 함수입니다."
            },
            minidescriptiont = {
                jp = "Thread でエラーに遭遇したときに発生するコールバック関数です。",
                ko = "스레드에서 에러가 발생했을 때 호출되는 콜백 함수입니다."
            },
            name = "threaderror",
            variants = {
                {
                    arguments = {
                        {
                            description = "The thread which produced the error.",
                            descriptiont = {
                                jp = "エラーが発生したスレッド。",
                                ko = "에러가 발생한 스레드."
                            },
                            name = "thread",
                            type = "Thread"
                        },
                        {
                            description = "The error message.",
                            descriptiont = {
                                jp = "エラーメッセージ。",
                                ko = "에러 메시지."
                            },
                            name = "errorstr",
                            type = "string"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when a touch press moves inside the touch screen.",
            descriptiont = {
                jp = "タッチ画面の内側でタッチ打鍵を移動した時に発生するコールバック関数です。"
            },
            minidescriptiont = {
                jp = "タッチ画面の内側でタッチ打鍵を移動した時に発生するコールバック関数です。"
            },
            name = "touchmoved",
            variants = {
                {
                    arguments = {
                        {
                            description = "The identifier for the touch press.",
                            descriptiont = {
                                jp = "タッチ打鍵の識別子"
                            },
                            name = "id",
                            type = "light userdata"
                        },
                        {
                            description = "The x-axis position of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける x-軸の位置。"
                            },
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "The y-axis position of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける y-軸の位置。"
                            },
                            name = "y",
                            type = "number"
                        },
                        {
                            description = "The x-axis movement of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける x-軸の移動。"
                            },
                            name = "dx",
                            type = "number"
                        },
                        {
                            description = "The y-axis movement of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける y-軸の移動。"
                            },
                            name = "dy",
                            type = "number"
                        },
                        {
                            description = "The amount of pressure being applied. Most touch screens aren't pressure sensitive, in which case the pressure will be 1.",
                            descriptiont = {
                                jp = "かかっている筆圧量。ほとんどのタッチ画面では筆圧検知には対応していません。非対応の場合の筆圧は 1 になります。"
                            },
                            name = "pressure",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when the touch screen is touched.",
            descriptiont = {
                jp = "タッチ画面がタッチされた時に発生するコールバック関数です。"
            },
            minidescriptiont = {
                jp = "タッチ画面がタッチされた時に発生するコールバック関数です。"
            },
            name = "touchpressed",
            variants = {
                {
                    arguments = {
                        {
                            description = "The identifier for the touch press.",
                            descriptiont = {
                                jp = "タッチ打鍵の識別子"
                            },
                            name = "id",
                            type = "light userdata"
                        },
                        {
                            description = "The x-axis position of the touch press inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチ打鍵における x-軸の位置。"
                            },
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "The y-axis position of the touch press inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチ打鍵における y-軸の位置。"
                            },
                            name = "y",
                            type = "number"
                        },
                        {
                            description = "The x-axis movement of the touch press inside the window, in pixels. This should always be zero.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチ打鍵における x-軸の移動。これは常に 0 にすべきです。"
                            },
                            name = "dx",
                            type = "number"
                        },
                        {
                            description = "The y-axis movement of the touch press inside the window, in pixels. This should always be zero.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチ打鍵における y-軸の移動。これは常に 0 にすべきです。"
                            },
                            name = "dy",
                            type = "number"
                        },
                        {
                            description = "The amount of pressure being applied. Most touch screens aren't pressure sensitive, in which case the pressure will be 1.",
                            descriptiont = {
                                jp = "かかっている筆圧量。ほとんどのタッチ画面では筆圧検知には対応していません。非対応の場合の筆圧は 1 になります。"
                            },
                            name = "pressure",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when the touch screen stops being touched.",
            descriptiont = {
                jp = "タッチ画面からタッチが離れた時に発生するコールバック関数です。"
            },
            minidescriptiont = {
                jp = "タッチ画面からタッチが離れた時に発生するコールバック関数です。"
            },
            name = "touchreleased",
            variants = {
                {
                    arguments = {
                        {
                            description = "The identifier for the touch press.",
                            descriptiont = {
                                jp = "タッチ打鍵の識別子"
                            },
                            name = "id",
                            type = "light userdata"
                        },
                        {
                            description = "The x-axis position of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける x-軸の位置。"
                            },
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "The y-axis position of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける y-軸の位置。"
                            },
                            name = "y",
                            type = "number"
                        },
                        {
                            description = "The x-axis movement of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける x-軸の移動。"
                            },
                            name = "dx",
                            type = "number"
                        },
                        {
                            description = "The y-axis movement of the touch inside the window, in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で、ウィンドウの内側のタッチにおける y-軸の移動。"
                            },
                            name = "dy",
                            type = "number"
                        },
                        {
                            description = "The amount of pressure being applied. Most touch screens aren't pressure sensitive, in which case the pressure will be 1.",
                            descriptiont = {
                                jp = "かかっている筆圧量。ほとんどのタッチ画面では筆圧検知には対応していません。非対応の場合の筆圧は 1 になります。"
                            },
                            name = "pressure",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function used to update the state of the game every frame.",
            descriptiont = {
                de = "Eine Rückruffunktion, welche den Zustand des gesamtes Spiels zwischen jedem Frame aktualisiert.",
                jp = "ゲームの各フレームの状態を更新する時に使用されるコールバック関数です。",
                ko = "매 프레임마다 게임의 상태를 갱신할 때 쓰이는 콜백 함수입니다.",
                pt = "Função de callback usada para atualizar o estado do jogo a cada quadro.",
                ru = "Функция используется для обновления состояния игры в каждом кадре."
            },
            minidescriptiont = {
                de = "Eine Rückruffunktion, welche den Zustand des gesamtes Spiels zwischen jedem Frame aktualisiert.",
                jp = "ゲームの各フレームの状態を更新する時に使用されるコールバック関数です。",
                ko = "매 프레임마다 게임의 상태를 갱신할 때 쓰이는 콜백 함수입니다.",
                pt = "Função de callback usada para atualizar o estado do jogo a cada quadro.",
                ru = "Функция используется для обновления состояния игры в каждом кадре."
            },
            name = "update",
            variants = {
                {
                    arguments = {
                        {
                            description = "Time since the last update in seconds.",
                            descriptiont = {
                                de = "Die Zeit in Sekunden welche seit dem letzten Update vergangen ist. Falls das Timer-Modul deaktiviert ist, ist dt immer 0.",
                                jp = "秒単位による最終更新からの時間。",
                                pt = "Tempo desde a última atualização, em segundos.",
                                ru = "Время, пошедшее с момента последнего вызова этой функции в секундах."
                            },
                            name = "dt",
                            type = "number"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when window is minimized/hidden or unminimized by the user.",
            descriptiont = {
                de = "Diese Rückruffunktion wird ausgelöst sobald das Fenster minimiert, versteckt oder wieder angezeigt wird.",
                jp = "利用者によりウィンドウが最小化・最大化または最小化解除されたときに発生するコールバック関数です。",
                ko = "최소화 등에 의해 윈도우가 완전히 숨겨졌을 때 호출되는 콜백 함수입니다. 최소화한 상태에서 다시 창을 띄울 때에도 호출됩니다."
            },
            minidescriptiont = {
                de = "Diese Rückruffunktion wird ausgelöst, wenn sich die Sichtbarkeit des Fensters ändert.",
                jp = "利用者によりウィンドウが表示・非表示にされたときに発生するコールバック関数です。",
                ko = "최소화 등에 의해 윈도우가 완전히 숨겨졌을 때 호출되는 콜백 함수입니다."
            },
            name = "visible",
            variants = {
                {
                    arguments = {
                        {
                            description = "True if the window is visible, false if it isn't.",
                            descriptiont = {
                                de = "Die Sichtbarkeit des Fensters.",
                                jp = "true ならばウィンドウを表示、 false ならば非表示にします。",
                                ko = "윈도우 가시성."
                            },
                            name = "visible",
                            type = "boolean"
                        }
                    }
                }
            }
        },
        {
            description = "Callback function triggered when the mouse wheel is moved.",
            descriptiont = {
                jp = "マウスホィールが動かされる時に発生するコールバック関数です。"
            },
            minidescriptiont = {
                jp = "マウスホィールが動かされる時に発生するコールバック関数です。"
            },
            name = "wheelmoved",
            variants = {
                {
                    arguments = {
                        {
                            description = "Amount of horizontal mouse wheel movement. Positive values indicate movement to the right.",
                            descriptiont = {
                                jp = "マウスホイールの横方向への移動量。正値は右側への移動を意味します。"
                            },
                            name = "x",
                            type = "number"
                        },
                        {
                            description = "Amount of vertical mouse wheel movement. Positive values indicate upward movement.",
                            descriptiont = {
                                jp = "マウスホイールの縦方向への移動量。正値は上側への移動を意味します。"
                            },
                            name = "y",
                            type = "number"
                        }
                    }
                }
            }
        }
    },
    functions = {
        {
            description = "Gets the current running version of LÖVE.",
            descriptiont = {
                de = "Gibt die aktuelle Version von LÖVE zurück.",
                jp = "現在実行中の LÖVE のバーションを取得します。",
                ko = "현재 실행되고 있는 LÖVE의 버전을 구합니다."
            },
            minidescriptiont = {
                de = "Gibt die aktuelle Version von LÖVE zurück.",
                jp = "現在実行中の LÖVE のバーションを取得します。",
                ko = "현재 실행되고 있는 LÖVE의 버전을 구합니다."
            },
            name = "getVersion",
            variants = {
                {
                    descriptiont = {
                        de = "Bei LÖVE Versionen unter 0.9.1 können die folgenden Variablen benutzt werden:\n\n&lt;source lang=\"lua\"&gt;\n\nlove._version_major\n\nlove._version_minor\n\nlove._version_revision\n\n&lt;/source&gt;\n\n== Beispiele ==\n\n=== Anzeige der aktuellen Version ===\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.draw()\n\n    local major, minor, revision, codename = love.getVersion();\n\n    local str = string.format(\"Version %d.%d.%d - %s\", major, minor, revision, codename);\n\n    love.graphics.print(str, 20, 20);\n\nend\n\n&lt;/source&gt;"
                    },
                    returns = {
                        {
                            description = "The major version of LÖVE, i.e. 0 for version 0.9.1.",
                            descriptiont = {
                                de = "Die Hauptversion von LÖVE.",
                                jp = "LÖVE の上位バージョン番号。つまり version 0.9.1 では 0 です。",
                                ko = "LÖVE의 메이저 버전. 0.9.1에서 0을 뜻함."
                            },
                            name = "major",
                            type = "number"
                        },
                        {
                            description = "The minor version of LÖVE, i.e. 9 for version 0.9.1.",
                            descriptiont = {
                                de = "Die Unterversion von LÖVE.",
                                jp = "LÖVE の下位バージョン番号。つまり version 0.9.1 では 9 です。",
                                ko = "LÖVE의 마이너 버전. 0.9.1에서 9를 뜻함."
                            },
                            name = "minor",
                            type = "number"
                        },
                        {
                            description = "The revision version of LÖVE, i.e. 1 for version 0.9.1.",
                            descriptiont = {
                                de = "Die Revisionsversion von LÖVE.",
                                jp = "LÖVE の修正バージョン番号。つまり version 0.9.1 では 1 です。",
                                ko = "LÖVE의 리비전 버전. 0.9.1에서 1을 뜻함."
                            },
                            name = "revision",
                            type = "number"
                        },
                        {
                            description = "The codename of the current version, i.e. \"Baby Inspector\" for version 0.9.1.",
                            descriptiont = {
                                de = "Der Codename der aktuellen Version.",
                                jp = "現在のバージョンの開発コード名。つまり version 0.9.1 では  \"Baby Inspector\" です。",
                                ko = "현재 버전의 코드네임."
                            },
                            name = "codename",
                            type = "string"
                        }
                    }
                }
            }
        }
    },
    modules = {
        {
            description = "Provides an interface to create noise with the user's speakers.",
            enums = {
                {
                    constants = {
                        {
                            description = "Sources do not get attenuated.",
                            descriptiont = {
                                jp = "Source の減衰を行いません。 ",
                                ko = "감쇠 안 함.",
                                pt = "Sources não são atenuados.",
                                ru = "Источник не ослабляется."
                            },
                            name = "none"
                        },
                        {
                            description = "Inverse distance attenuation.",
                            descriptiont = {
                                jp = "逆の減衰距離。 ",
                                ko = "역감쇠.",
                                pt = "Atenuação de distância inversa.",
                                ru = "Инвертированное расстояние ослабления."
                            },
                            name = "inverse"
                        },
                        {
                            description = "Inverse distance attenuation. Gain is clamped. In version 0.9.2 and older this is named inverse clamped.",
                            descriptiont = {
                                jp = "逆の減衰距離。利得は一定範囲内に抑えられます。これは version 0.9.2 およびそれ以前では '''inverse clamped''' と命名されていました。",
                                ru = "Инвентированное расстояние ослабления. Усиление фиксированно. В версии 0.9.2 и позже это именовалось '''inverse clamped'''."
                            },
                            name = "inverseclamped"
                        },
                        {
                            description = "Linear attenuation.",
                            descriptiont = {
                                jp = "線形減衰。",
                                ko = "선형 감쇠.",
                                pt = "Atenuação linear.",
                                ru = "Линейное ослабление."
                            },
                            name = "linear"
                        },
                        {
                            description = "Linear attenuation. Gain is clamped. In version 0.9.2 and older this is named linear clamped.",
                            descriptiont = {
                                jp = "線形減衰。利得は一定範囲内に抑えられます。これは version 0.9.2 およびそれ以前では '''linear clamped''' と命名されていました。",
                                ru = "Линейное ослабление. Усиление фиксированно. В версии 0.9.2 и позже это именовалось '''linear clamped'''."
                            },
                            name = "linearclamped"
                        },
                        {
                            description = "Exponential attenuation.",
                            descriptiont = {
                                jp = "指数減衰。",
                                ko = "지수형 감쇠.",
                                pt = "Atenuação exponencial.",
                                ru = "Экспоненциальное ослабление."
                            },
                            name = "exponent"
                        },
                        {
                            description = "Exponential attenuation. Gain is clamped. In version 0.9.2 and older this is named exponent clamped.",
                            descriptiont = {
                                jp = "指数減衰。利得は一定範囲内に抑えられます。これは version 0.9.2 およびそれ以前では '''exponent clamped''' と命名されていました。",
                                ru = "Экспоненциальное ослабление. Усиление фиксированно. В версии 0.9.2 и позже это именовалось '''exponent clamped'''."
                            },
                            name = "exponentclamped"
                        }
                    },
                    description = "The different distance models.\n\nExtended information can be found in the chapter \"3.4. Attenuation By Distance\" of the OpenAL 1.1 specification.",
                    descriptiont = {
                        jp = "様々な減衰距離モデル。\n\n拡張情報は OpenAL 1.1 仕様書の \"3.4. 距離による減衰\" の章にあります。",
                        ko = "거리 감쇠 방식을 표현합니다. 이를 통해 소리가 사용자에게 멀어져 감에 따라 점점 작아지는 방법을 설정할 수 있습니다.",
                        pt = "Os diferentes modelos de distância.\n\nInformações extendidas podem ser encontradas na documentação do Creative Labs.",
                        ru = "Различные модели расстояний.\n\nБольше информации можно найти Creative documentation."
                    },
                    minidescriptiont = {
                        jp = "様々な減衰距離モデル。",
                        ko = "거리 감쇠 방식을 표현합니다.",
                        pt = "Os diferentes modelos de distância.",
                        ru = "Различные модели расстояний."
                    },
                    name = "DistanceModel"
                },
                {
                    constants = {
                        {
                            description = "Decode the entire sound at once.",
                            descriptiont = {
                                de = "Die komplette Quelle wird auf einmal dekodiert.",
                                jp = "音声を一括で完全復号化します。",
                                ko = "처음부터 끝까지 전부 디코딩해 둡니다.",
                                pt = "Decodifica todo o som de uma vez.",
                                ru = "Декодировать весь звук одновременно. Подходит для звуковых эффектов."
                            },
                            name = "static"
                        },
                        {
                            description = "Stream the sound; decode it gradually.",
                            descriptiont = {
                                de = "Die Quelle wird schrittweise während des Abspielens dekodiert.",
                                jp = "音声を連続で段階復号化します。",
                                ko = "재생되고 있는 부분에 맞추어 점진적으로 디코딩합니다.",
                                pt = "Transmite o áudio; decodifica gradualmente.",
                                ru = "Потоковый звук; декодировать постепенно. Подходит для музыки."
                            },
                            name = "stream"
                        }
                    },
                    description = "Types of audio sources.\n\nA good rule of thumb is to use stream for music files and static for all short sound effects. Basically, you want to avoid loading large files into memory at once.",
                    descriptiont = {
                        de = "Verschiedene Arten von Geräuschquellen.\n\nGrundsätzlich sollte bei langen Quellen der SourceType stream verwendet werden. Dies verhindert, dass die Datei auf einmal in den RAM-Speicher geladen wird und dort zuviel Platz einnimmt. \n\nEine gute Faustregel ist daher, static für kurze Soundeffekte und stream für Musikstücke zu verwenden.",
                        jp = "音声 Source の種別。\n\n良い経験法則として stream は楽曲ファイルに、 static は全て短い効果音に使用することです。基本的に、大規模ファイルを一括でメモリへ読み込むことは回避してください。",
                        ko = "오디오 소스가 가진 음원의 메모리 등재 방식을 표현합니다. ",
                        pt = "Tipos de Sources de áudio.",
                        ru = "Типы источников звука."
                    },
                    minidescriptiont = {
                        de = "Verschiedene Arten von Geräuschquellen.",
                        jp = "音声 Source の種別。",
                        ko = "오디오 소스가 가진 음원의 메모리 등재 방식을 표현합니다.",
                        pt = "Tipos de Sources de áudio.",
                        ru = "Типы источников звука."
                    },
                    name = "SourceType"
                },
                {
                    constants = {
                        {
                            description = "Regular seconds.",
                            descriptiont = {
                                de = "Reguläre Sekunden.",
                                jp = "通常の秒数。",
                                ko = "초 단위.",
                                pt = "Segundos normais."
                            },
                            name = "seconds"
                        },
                        {
                            description = "Audio samples.",
                            descriptiont = {
                                de = "Audio Samples.",
                                jp = "オーディオ・サンプル。",
                                ko = "오디오 샘플 기준.",
                                pt = "Amostras de áudio."
                            },
                            name = "samples"
                        }
                    },
                    description = "Units that represent time.",
                    descriptiont = {
                        de = "Verschiedene Arten von Zeiteinheiten.",
                        jp = "時間の単位表現。",
                        ko = "시간 표현 단위입니다.",
                        pt = "Unidades que representam o tempo."
                    },
                    minidescriptiont = {
                        de = "Verschiedene Arten von Zeiteinheiten.",
                        jp = "時間の単位表現。",
                        ko = "시간 표현 단위입니다.",
                        pt = "Unidades que representam o tempo."
                    },
                    name = "TimeUnit"
                }
            },
            functions = {
                {
                    description = "Returns the distance attenuation model.",
                    descriptiont = {
                        jp = "減衰距離モデルを返します。 ",
                        ko = "거리 감쇠 방식을 결정합니다.",
                        pt = "Retorna o modelo de atenuação por distância.",
                        ru = "Возвращает модель ослабления расстояние."
                    },
                    minidescriptiont = {
                        jp = "減衰距離モデルを返します。",
                        ko = "거리 감쇠 방식을 결정합니다.",
                        pt = "Retorna o modelo de atenuação por distância.",
                        ru = "Возвращает модель ослабления расстояния."
                    },
                    name = "getDistanceModel",
                    variants = {
                        {
                            descriptiont = {
                                ru = "=== Синтаксис ===\n\n&lt;source lang=\"lua\"&gt;\n\nmodel = love.audio.getDistanceModel( )\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The current distance model. The default is 'inverseclamped'.",
                                    descriptiont = {
                                        jp = "現在の距離モデル。デフォルト値は 'inverseclamped' です。 ",
                                        ko = "거리 감쇠 방식.",
                                        pt = "O modelo de distância atual.",
                                        ru = "Текущая модель ослабления расстояния. По умолчанию 'обратная фиксация'."
                                    },
                                    name = "model",
                                    type = "DistanceModel"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current global scale factor for velocity-based doppler effects.",
                    descriptiont = {
                        jp = "速度に基づいたドップラー効果に対する現在の大域基準化係数を取得します。 ",
                        ru = "Получает текущий коэффициент глобального масштаба для эффектов основанных на скорости эффектов Доплера"
                    },
                    minidescriptiont = {
                        jp = "ドップラー効果に対する大域基準化係数を取得します。",
                        ru = "Получает текущий коэффициент глобального масштаба для эффекта Доплера."
                    },
                    name = "getDopplerScale",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current doppler scale factor.",
                                    descriptiont = {
                                        jp = "現在のドップラー基準化係数。"
                                    },
                                    name = "scale",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the number of sources which are currently playing or paused.",
                    descriptiont = {
                        de = "Gibt die Anzahl der aktuell abgespielten Quellen zurück.",
                        jp = "現在同時再生中の Source の本数を取得します。 ",
                        ko = "동시에 재생되고 있는 오디오 소스의 개수를 받아옵니다.",
                        pt = "Obtém o número de fontes tocando atualmente.",
                        ru = "Получить текущее количество одновременно играющих источников."
                    },
                    minidescriptiont = {
                        de = "Gibt die Anzahl der aktuell abgespielten Quellen zurück.",
                        jp = "現在同時再生中の Source の本数を取得します。",
                        ko = "동시에 재생되고 있는 오디오 소스의 개수를 받아옵니다.",
                        pt = "Obtém o número de fontes tocando atualmente.",
                        ru = "Возвращает количество источников, проигрываемых в данный момент."
                    },
                    name = "getSourceCount",
                    variants = {
                        {
                            descriptiont = {
                                ru = "=== Синтаксис ===\n\n&lt;source lang=\"lua\"&gt;\n\nnumSources = love.audio.getSourceCount( )\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The number of sources which are currently playing or paused.",
                                    descriptiont = {
                                        de = "Die Anzahl der aktuell abgespielten Quellen.",
                                        jp = "現在同時再生中の Source の本数。",
                                        ko = "동시에 재생되고 있는 오디오 소스의 개수.",
                                        pt = "O número de fontes tocando atualmente.",
                                        ru = "Число источников, проигрываемых в данный момент."
                                    },
                                    name = "numSources",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the orientation of the listener.",
                    descriptiont = {
                        jp = "リスナーの方向を返します。 ",
                        ko = "듣는이의 머리 방향을 조사합니다.",
                        pt = "Retorna a orientação do ouvinte.",
                        ru = "Возвращает ориентацию слушателя."
                    },
                    minidescriptiont = {
                        jp = "リスナーの方向を返します。",
                        ko = "듣는이의 머리 방향을 조사합니다.",
                        pt = "Retorna a orientação do ouvinte.",
                        ru = "Возвращает ориентацию слушателя."
                    },
                    name = "getOrientation",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The X component of the forward vector of the listener orientation.",
                                    name = "fx",
                                    type = "number"
                                },
                                {
                                    description = "The Y component of the forward vector of the listener orientation.",
                                    name = "fy",
                                    type = "number"
                                },
                                {
                                    description = "The Z component of the forward vector of the listener orientation.",
                                    name = "fz",
                                    type = "number"
                                },
                                {
                                    description = "The X component of the up vector of the listener orientation.",
                                    name = "ux",
                                    type = "number"
                                },
                                {
                                    description = "The Y component of the up vector of the listener orientation.",
                                    name = "uy",
                                    type = "number"
                                },
                                {
                                    description = "The Z component of the up vector of the listener orientation.",
                                    name = "uz",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the position of the listener.",
                    descriptiont = {
                        de = "Gibt die Position vom Zuhörer zurück.",
                        jp = "リスナーの座標を返します。注意として音声の座標は モノラル (つまり、非・ステレオ) 音源のみ動作します。 ",
                        ko = "듣는이의 위치를 조사합니다.",
                        pt = "Retorna a posição do ouvinte.",
                        ru = "Получает позицию слушателя."
                    },
                    minidescriptiont = {
                        de = "Gibt die Position vom Zuhörer zurück.",
                        jp = "リスナーの座標を返します。",
                        ko = "듣는이의 위치를 조사합니다.",
                        pt = "Retorna a posição do ouvinte.",
                        ru = "Получает позицию слушателя."
                    },
                    name = "getPosition",
                    variants = {
                        {
                            descriptiont = {
                                ru = "=== Синтаксис ===\n\n&lt;source lang=\"lua\"&gt;\n\nx, y, z = love.audio.getPosition( )\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The X position of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの X 座標。",
                                        ko = "듣는이의 x축 위치.",
                                        pt = "A posição em X do ouvinte.",
                                        ru = "Позиция слушателя по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The Y position of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの Y 座標。",
                                        ko = "듣는이의 y축 위치.",
                                        pt = "A posição em Y do ouvinte.",
                                        ru = "Позиция слушателя по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The Z position of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの Z 座標。",
                                        ko = "듣는이의 z축 위치.",
                                        pt = "A posição em Z do ouvinte.",
                                        ru = "Позиция слушателя по оси Z."
                                    },
                                    name = "z",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the velocity of the listener.",
                    descriptiont = {
                        jp = "リスナーの速度を返します。 ",
                        ko = "듣는이의 속도를 받아옵니다.",
                        pt = "Retorna a velocidade do ouvinte.",
                        ru = "Возвращает скорость слушателя."
                    },
                    minidescriptiont = {
                        jp = "リスナーの速度を返します。",
                        ko = "듣는이의 속도를 받아옵니다.",
                        pt = "Retorna a velocidade do ouvinte.",
                        ru = "Возвращает скорость слушателя."
                    },
                    name = "getVelocity",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The X velocity of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの速度 X",
                                        ko = "듣는이의 x축 속도.",
                                        pt = "A velocidade em X do ouvinte.",
                                        ru = "Скорость слушателя по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The Y velocity of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの速度 Y",
                                        ko = "듣는이의 y축 속도.",
                                        pt = "A velocidade em Y do ouvinte.",
                                        ru = "Скорость слушателя по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The Z velocity of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの速度 Z",
                                        ko = "듣는이의 z축 속도.",
                                        pt = "A velocidade em Z do ouvinte.",
                                        ru = "Скорость слушателя по оси Z."
                                    },
                                    name = "z",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the master volume.",
                    descriptiont = {
                        jp = "主音量を取得します。 ",
                        ko = "마스터 볼륨을 조사합니다. 마스터 볼륨은 모든 볼륨을 올리거나 내립니다.",
                        pt = "Retorna o volume mestre.",
                        ru = "Получает громкость."
                    },
                    minidescriptiont = {
                        jp = "主音量を取得します。",
                        ko = "마스터 볼륨을 조사합니다.",
                        pt = "Retorna o volume mestre.",
                        ru = "Получает громкость."
                    },
                    name = "getVolume",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current master volume.",
                                    descriptiont = {
                                        jp = "現在の主音量",
                                        ko = "1이면 최대 볼륨. 0이면 음소거.",
                                        pt = "O volume mestre atual.",
                                        ru = "Текущая громкость."
                                    },
                                    name = "volume",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Source from a file or SoundData. Sources created from SoundData are always static.",
                    descriptiont = {
                        de = "Erstellt aus einer Datei eine neue Source, entweder SoundData oder Decoder. Quellen die mittels SoundData erstellt wurden, sind immer statisch.",
                        jp = "ファイルパス, File, Decoder または SoundData から Source を新規作成します。\n\nSoundData から作成された Source は 常に static になります。",
                        ko = "파일, 디코더, SoundData로부터 새로운 오디오 소스를 생성합니다.\n\nSoundData를 통해 만들어진 오디오 소스의 메모리 등재 방식은 그 특성상 \"static\"으로 강제됩니다.",
                        pt = "Cria uma nova Fonte a partir de um caminho de arquivo, Arquivo, Decodificador ou DadoDeSom.\n\nFontes criadas a partir de DadosDeSom são sempre estáticas.",
                        ru = "Создает новый источник из файла.\n\nИсточники созданные из SoundData всегда статичны."
                    },
                    minidescriptiont = {
                        de = "Erstellt aus einer Datei eine neue Source, entweder SoundData oder Decoder.",
                        jp = "ファイル, SoundData または  Decoder から Source を新規作成します。",
                        ko = "파일, 디코더, SoundData로부터 새로운 오디오 소스를 생성합니다.",
                        pt = "Cria uma nova Fonte a partir de um arquivo, DadoDeSom, ou Decodificador.",
                        ru = "Создает новый источник из файла."
                    },
                    name = "newSource",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filepath to create a Source from.",
                                    descriptiont = {
                                        jp = "音声ファイルのファイルパス。 ",
                                        ko = "오디오 파일의 이름.",
                                        pt = "O caminho do arquivo de áudio.",
                                        ru = "Файл, из которого надо создать источник."
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    default = "\"stream\"",
                                    description = "Streaming or static source.",
                                    descriptiont = {
                                        jp = "ストリーミングまたはスタティックソースの指定。",
                                        ko = "메모리 등재 방식.",
                                        pt = "Fonte em fluxo ou estática.",
                                        ru = "Потоковый или статичный источник."
                                    },
                                    name = "type",
                                    type = "SourceType"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Source that can play the specified audio.",
                                    descriptiont = {
                                        jp = "指定された音声は再生可能な新しい Source として返されます。",
                                        ko = "새 오디오 소스.",
                                        pt = "Uma nova Fonte que pode tocar o áudio especificado.",
                                        ru = "Новый источник, который может быть использован для проигрывания звука."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A File pointing to an audio file.",
                                    descriptiont = {
                                        jp = "File には音声ファイルを指定します。",
                                        ko = "오디오 파일을 가리키는 File.",
                                        pt = "Um Arquivo apontando para um arquivo de áudio."
                                    },
                                    name = "file",
                                    type = "File"
                                },
                                {
                                    default = "\"stream\"",
                                    description = "Streaming or static source.",
                                    descriptiont = {
                                        jp = "ストリーミングまたはスタティックソースの指定。",
                                        ko = "메모리 등재 방식.",
                                        pt = "Fonte em fluxo ou estática."
                                    },
                                    name = "type",
                                    type = "SourceType"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Source that can play the specified audio.",
                                    descriptiont = {
                                        jp = "指定された音声は再生可能な新しい Source として返されます。",
                                        ko = "새 오디오 소스.",
                                        pt = "Uma nova Fonte que pode tocar o áudio especificado."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The Decoder to create a Source from.",
                                    descriptiont = {
                                        jp = "Source を作成するための Decoder を指定します。",
                                        ko = "오디오 소스에 사용할 디코더 객체.",
                                        pt = "O Decodificador a partir do qual se deve criar uma Fonte.",
                                        ru = "Decoder для создания источника."
                                    },
                                    name = "decoder",
                                    type = "Decoder"
                                },
                                {
                                    default = "\"stream\"",
                                    description = "Streaming or static source.",
                                    descriptiont = {
                                        jp = "ストリーミングまたはスタティックソースの指定。",
                                        ko = "메모리 등재 방식.",
                                        pt = "Fonte em fluxo ou estática.",
                                        ru = "Потоковый или статичный источник."
                                    },
                                    name = "type",
                                    type = "SourceType"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Source that can play the specified audio.",
                                    descriptiont = {
                                        jp = "指定された音声は再生可能な新しい Source として返されます。",
                                        ko = "새 오디오 소스.",
                                        pt = "Uma nova Fonte que pode tocar o áudio especificado.",
                                        ru = "Новый источник, который может быть использован для проигрывания звука."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The SoundData to create a Source from.",
                                    descriptiont = {
                                        jp = "Source を作成するための SoundData を指定します。",
                                        ko = "오디오 소스에 사용할 SoundData 객체.",
                                        pt = "O DadoDeSom a partir do qual se deve criar uma Fonte.",
                                        ru = "SoundData для создания источника."
                                    },
                                    name = "soundData",
                                    type = "SoundData"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Source that can play the specified audio. The SourceType of the returned audio is \"static\".",
                                    descriptiont = {
                                        jp = "指定された音声は再生可能な新しい Source として返されます。返された音声の SourceType は \"static\" です。",
                                        ko = "새 오디오 소스. 메모리 등재 방식은 강제로 \"static\"으로 지정.",
                                        pt = "Uma nova Fonte que pode tocar o áudio especificado. O TipoDeFonte do áudio retornado é \"static\".",
                                        ru = "Новый источник, который может быть использован для проигрывания звука. Его тип будет \"static\"."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The FileData to create a Source from.",
                                    descriptiont = {
                                        jp = "Source を作成するための FileData を指定します。"
                                    },
                                    name = "fileData",
                                    type = "FileData"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Source that can play the specified audio.",
                                    descriptiont = {
                                        jp = "指定された音声は再生可能な新しい Source として返されます。"
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Pauses currently played Sources.",
                    descriptiont = {
                        de = "Pausiert abgespielte Quellen.",
                        jp = "指定または全ての Source を一時停止します。",
                        ko = "모든 오디오를 일시정지합니다.",
                        pt = "Pauses all audio.",
                        ru = "Ставит на паузу все аудио."
                    },
                    minidescriptiont = {
                        de = "Pausiert abgespielte Quellen.",
                        jp = "指定または全ての Source を一時停止します。",
                        ko = "모든 오디오를 일시정지합니다.",
                        pt = "Pauses all audio.",
                        ru = "Ставит на паузу все аудио."
                    },
                    name = "pause",
                    variants = {
                        {
                            description = "This function will pause all currently active Sources.",
                            descriptiont = {
                                de = "Pausiert alle aktive Quellen.\n\n=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.pause( )\n\n&lt;/source&gt;",
                                jp = "現在再生中の全ての Source を一時停止します。"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The source on which to pause the playback.",
                                    descriptiont = {
                                        de = "Die Quelle, welche pausiert werden soll.",
                                        jp = "再生を一時停止する Source を指定します。",
                                        ko = "일시정지할 오디오 소스.",
                                        pt = "A fonte que se deseja pausar.",
                                        ru = "Источник, который надо поставить на паузу."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            },
                            description = "This function will only pause the specified Source.",
                            descriptiont = {
                                de = "Pausiert eine bestimmte Quelle.\n\n=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.pause( source )\n\n&lt;/source&gt;",
                                jp = "指定された Source のみ一時停止します。"
                            }
                        }
                    }
                },
                {
                    description = "Plays the specified Source.",
                    descriptiont = {
                        de = "Spielt eine Quelle ab.",
                        jp = "指定された Source を再生します。",
                        ko = "특정 오디오 소스를 재생합니다.",
                        pt = "Toca a Fonte especificada.",
                        ru = "Начинает проигрывать указанный источник."
                    },
                    minidescriptiont = {
                        de = "Spielt eine Quelle ab.",
                        jp = "指定された Source を再生します。",
                        ko = "특정 오디오 소스를 재생합니다.",
                        pt = "Toca a Fonte especificada.",
                        ru = "Начинает проигрывать указанный источник."
                    },
                    name = "play",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The Source to play.",
                                    descriptiont = {
                                        de = "Die Quelle, welche abgespielt werden soll.",
                                        jp = "再生する Source を指定します。",
                                        ko = "재생할 오디오 소스.",
                                        pt = "A fonte a ser tocada.",
                                        ru = "Источник для проигрывания."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            },
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.play( source )\n\n&lt;/source&gt;"
                            }
                        }
                    }
                },
                {
                    description = "Resumes all audio",
                    descriptiont = {
                        de = "Setzt alle Audiodaten fort.",
                        jp = "音声の再生を全て再開します。",
                        ko = "모든 오디오를 다시 재생합니다.",
                        pt = "Despausa todo o áudio.",
                        ru = "Продолжает проигрывать все аудио."
                    },
                    minidescriptiont = {
                        de = "Setzt alle Audiodaten fort.",
                        jp = "音声の再生を全て再開します。",
                        ko = "모든 오디오를 다시 재생합니다.",
                        pt = "Despausa todo o áudio.",
                        ru = "Продолжает проигрывать все аудио."
                    },
                    name = "resume",
                    variants = {
                        {
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.resume( )\n\n&lt;/source&gt;"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The source on which to resume the playback.",
                                    descriptiont = {
                                        de = "Die Quelle, die fortgesetzt werden soll.",
                                        jp = "再生を再開する Source を指定します。",
                                        ko = "다시 재생할 오디오 소스.",
                                        pt = "A fonte que se deseja despausar.",
                                        ru = "Источник, воспроизведение которого надо продолжить."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            },
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.resume( source )\n\n&lt;/source&gt;"
                            }
                        }
                    }
                },
                {
                    description = "Rewinds all playing audio.",
                    descriptiont = {
                        de = "Spult alle Audiodaten zurück.",
                        jp = "再生中の音声を全てを巻き戻します。",
                        ko = "모든 오디오를 되감습니다.",
                        pt = "Rebobina todo o áudio que estiver tocando.",
                        ru = "Перемотка всего аудио."
                    },
                    minidescriptiont = {
                        de = "Spult alle Audiodaten zurück.",
                        jp = "再生中の音声を全てを巻き戻します。",
                        ko = "모든 오디오를 되감습니다.",
                        pt = "Rebobina todo o áudio que estiver tocando.",
                        ru = "Перемотка всего аудио."
                    },
                    name = "rewind",
                    variants = {
                        {
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.rewind( )\n\n&lt;/source&gt;"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The source to rewind.",
                                    descriptiont = {
                                        de = "Die Quelle, die zurückgespult werden soll.",
                                        jp = "巻き戻す Source を指定します。",
                                        ko = "되감을 오디오 소스.",
                                        pt = "A fonte a ser rebobinada.",
                                        ru = "Источник для перемотки."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            },
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nlove.audio.rewind( source )\n\n&lt;/source&gt;"
                            }
                        }
                    }
                },
                {
                    description = "Sets the distance attenuation model.",
                    descriptiont = {
                        jp = "減衰距離モデルを設定します。",
                        ko = "거리 감쇠 방식을 결정합니다.",
                        pt = "Define o modelo de atenuação por distância.",
                        ru = "Устанавливает модель ослабления расстояния."
                    },
                    minidescriptiont = {
                        jp = "減衰距離モデルを設定します。",
                        ko = "거리 감쇠 방식을 결정합니다.",
                        pt = "Define o modelo de atenuação por distância.",
                        ru = "Устанавливает модель ослабления расстояния."
                    },
                    name = "setDistanceModel",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new distance model.",
                                    descriptiont = {
                                        jp = "新しい距離モデル。",
                                        ko = "거리 감쇠 방식.",
                                        pt = "O novo modelo de distância.",
                                        ru = "Новая модель расстояния."
                                    },
                                    name = "model",
                                    type = "DistanceModel"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets a global scale factor for velocity-based doppler effects. The default scale value is 1.",
                    descriptiont = {
                        jp = "速度に基づいたドップラー効果に対する大域基準化係数を設定します。標準基準値は 1 です。 ",
                        ru = "Устанавливает глобальный коэффициент масштаба для скоростей основанных на эффектах Доплера. По умолчанию значение масштаба 1."
                    },
                    minidescriptiont = {
                        jp = "ドップラー効果に対する大域基準化係数を設定します。",
                        ru = "Устанавливает глобальный коэффициент для эффектов Доплера."
                    },
                    name = "setDopplerScale",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new doppler scale factor. The scale must be greater than 0.",
                                    descriptiont = {
                                        jp = "新規のドップラー基準化係数。基準は 0 以上にする必要があります。 ",
                                        ru = "Новый доплеровский коэффициент масштабирования. Масштаб должен быть больше 0."
                                    },
                                    name = "scale",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the orientation of the listener.",
                    descriptiont = {
                        jp = "リスナーの方向を設定します。",
                        ko = "듣는이의 머리 방향을 설정합니다.",
                        pt = "Configura a orientação do ouvinte.",
                        ru = "Устанавливает положение слушателя."
                    },
                    minidescriptiont = {
                        jp = "リスナーの方向を設定します。",
                        ko = "듣는이의 머리 방향을 설정합니다.",
                        pt = "Configura a orientação do ouvinte.",
                        ru = "Устанавливает положение слушателя."
                    },
                    name = "setOrientation",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The X component of the forward vector of the listener orientation.",
                                    name = "fx",
                                    type = "number"
                                },
                                {
                                    description = "The Y component of the forward vector of the listener orientation.",
                                    name = "fy",
                                    type = "number"
                                },
                                {
                                    description = "The Z component of the forward vector of the listener orientation.",
                                    name = "fz",
                                    type = "number"
                                },
                                {
                                    description = "The X component of the up vector of the listener orientation.",
                                    name = "ux",
                                    type = "number"
                                },
                                {
                                    description = "The Y component of the up vector of the listener orientation.",
                                    name = "uy",
                                    type = "number"
                                },
                                {
                                    description = "The Z component of the up vector of the listener orientation.",
                                    name = "uz",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the position of the listener, which determines how sounds play.",
                    descriptiont = {
                        jp = "どの様に音声を再生するか決定するために、リスナーの座標を設定します。",
                        ko = "듣는이의 위치를 설정합니다.",
                        pt = "Configura a posição do ouvinte, o que determina como os sons irão tocar.",
                        ru = "Устанавливает позицию слушателя."
                    },
                    minidescriptiont = {
                        jp = "リスナーの座標を設定します。",
                        ko = "듣는이의 위치를 설정합니다.",
                        pt = "Define a posição do ouvinte.",
                        ru = "Устанавливает позицию слушателя."
                    },
                    name = "setPosition",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The X position of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの x 座標。",
                                        ko = "듣는이의 x축 위치.",
                                        pt = "A posição em x do ouvinte.",
                                        ru = "X позиция слушателя."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The Y position of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの y 座標。",
                                        ko = "듣는이의 y축 위치.",
                                        pt = "A posição em y do ouvinte.",
                                        ru = "Y позиция слушателя."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The Z position of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの z 座標。",
                                        ko = "듣는이의 z축 위치.",
                                        pt = "A posição em z do ouvinte.",
                                        ru = "Z позиция слушателя."
                                    },
                                    name = "z",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                ko = "위치 설정은 모노 사운드에서만 동작합니다.\n\nOGG 소스를 이용한 위치 설정은 가능하지만, WAV는 항상 스테레오로 동작하기 때문에 불가능합니다."
                            }
                        }
                    }
                },
                {
                    description = "Sets the velocity of the listener.",
                    descriptiont = {
                        jp = "リスナーの速度を設定します。",
                        ko = "듣는이의 속도를 설정합니다.",
                        pt = "Define a velocidade do ouvinte.",
                        ru = "Устанавливает скорость слушателя."
                    },
                    minidescriptiont = {
                        jp = "リスナーの速度を設定します。",
                        ko = "듣는이의 속도를 설정합니다.",
                        pt = "Define a velocidade do ouvinte.",
                        ru = "Устанавливает скорость слушателя."
                    },
                    name = "setVelocity",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The X velocity of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの速度 X",
                                        ko = "듣는이의 x축 속도.",
                                        pt = "A velocidade em X do ouvinte.",
                                        ru = "Скорость слушателя по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The Y velocity of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの速度 Y",
                                        ko = "듣는이의 y축 속도.",
                                        pt = "A velocidade em Y do ouvinte.",
                                        ru = "Скорость слушателя по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The Z velocity of the listener.",
                                    descriptiont = {
                                        jp = "リスナーの速度 Z",
                                        ko = "듣는이의 z축 속도.",
                                        pt = "A velocidade em Z do ouvinte.",
                                        ru = "Скорость слушателя по оси Z."
                                    },
                                    name = "z",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the master volume.",
                    descriptiont = {
                        de = "Bestimmt die Gesamtlautstärke.",
                        jp = "主音量を設定します。",
                        ko = "마스터 볼륨을 설정합니다. 마스터 볼륨은 모든 볼륨을 올리거나 내립니다.",
                        pt = "Define o volume mestre.",
                        ru = "Устанавливает громкость."
                    },
                    minidescriptiont = {
                        de = "Bestimmt die Gesamtlautstärke.",
                        jp = "主音量を設定します。",
                        ko = "마스터 볼륨을 설정합니다.",
                        pt = "Define o volume mestre.",
                        ru = "Устанавливает громкость."
                    },
                    name = "setVolume",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "1.0f is max and 0.0f is off.",
                                    descriptiont = {
                                        de = "1.0 ist der Maximal- und 0.0 der Minimalwert.",
                                        jp = "1.0 は最大であり 0.0 は消音です。",
                                        ko = "1이면 최대 볼륨. 0이면 음소거.",
                                        pt = "1.0f é o máximo e 0.0f é o desligado.",
                                        ru = "1.0f - максимальная громкость, 0.0f - минимальная."
                                    },
                                    name = "volume",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Stops currently played sources.",
                    descriptiont = {
                        de = "Stoppt abgespielte Quellen.",
                        jp = "現在再生中の Source を停止します。",
                        ko = "재생중인 모든 오디오를 정지합니다.",
                        pt = "Para todo o áudio que estiver tocando.",
                        ru = "Останавливает все проигрываемое аудио."
                    },
                    minidescriptiont = {
                        de = "Stoppt abgespielte Quellen.",
                        jp = "現在再生中の Source を停止します。",
                        ko = "재생중인 모든 오디오를 정지합니다.",
                        pt = "Para todo o áudio que estiver tocando.",
                        ru = "Останавливает все проигрываемое аудио."
                    },
                    name = "stop",
                    variants = {
                        {
                            description = "This function will stop all currently active sources.",
                            descriptiont = {
                                de = "Diese Funktion stoppt alle aktiven Quellen.",
                                jp = "この関数は現在再生中の Source を全て停止します。 "
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The source on which to stop the playback.",
                                    descriptiont = {
                                        de = "Die Quelle, welche gestoppt werden soll.",
                                        jp = "再生を停止する Source を指定します。 ",
                                        ko = "정지할 오디오 소스.",
                                        pt = "A fonte que deve parar de tocar",
                                        ru = "Источник, проигрывание которого надо остановить."
                                    },
                                    name = "source",
                                    type = "Source"
                                }
                            },
                            description = "This function will only stop the specified source.",
                            descriptiont = {
                                de = "Diese Funktion stoppt eine bestimmte Quelle.",
                                jp = "この関数は指定された Source のみ停止します。 "
                            }
                        }
                    }
                }
            },
            name = "audio",
            types = {
                {
                    constructors = {
                        "newSource"
                    },
                    description = "A Source represents audio you can play back. You can do interesting things with Sources, like set the volume, pitch, and its position relative to the listener.",
                    descriptiont = {
                        de = "Eine Geräuschquelle (engl.: Source) stellt einen Ton dar, welcher abgespielt und bearbeitet werden kann.\n\nEs lassen sich interessante Dinge mit Geräuschquellen anstellen. So kann zum Beispiel die Lautstärke, die Tonhöhe oder die Position des Tons in der Spielewelt verändert werden.\n\nDer Zustand einer Quelle kann wie folgt kontrolliert werden.",
                        jp = "Source は音声の再生を提供します。 \n\nSource は音量、音程、及びリスナーの相対的座標の設定といったような面白いことができます。 注意として音声の座標は モノラル (つまり、非・ステレオ) 音源のみ動作します。\n\nSource の制御 (再生/一時停止/その他) は下記の状態一覧表にある動作と合致します。",
                        ko = "오디오를 표현합니다. 이 객체를 이용해 실제로 소리를 재생할 수 있습니다.\n\n재생 외에도 볼륨, 피치 변경과 같은 여러가지 동작을 지원합니다.\n\n재생 상태에 관한 자세한 동작은 아래에 제시된 표를 따릅니다.",
                        pt = "Um Source representa áudio que pode ser tocado.\n\nVocê pode fazer coisas interessantes com Sources, como ajustar o volume, o tom e sua posição em relação ao ouvinte.\n\nOs controles do Source (play/pause/etc) agem de acordo com a seguinte tabela de estados.",
                        ru = "Источник представляет аудио данные, которые вы можете воспроизвести.\n\nВы можете сделать интересные вещи с источниками, например устанавливать громкость, шаг, и позицию по отношению к слушателю.\n\nИсточник управляется (воспроизведение/пауза/и т.д.) действуют в соответствии со следующей таблицей состояний."
                    },
                    functions = {
                        {
                            description = "Creates an identical copy of the Source in the stopped state.\n\nStatic Sources will use significantly less memory and take much less time to be created if Source:clone is used to create them instead of love.audio.newSource, so this method should be preferred when making multiple Sources which play the same sound.\n\nCloned Sources inherit all the set-able state of the original Source, but they are initialized stopped.",
                            descriptiont = {
                                de = "Erstellt eine identische Kopie einer Geräuschquelle.",
                                jp = "Source と同一の複製を停止状態に設定して作成します。\n\nStatic な Source を  love.audio.newSource ではなく Source:clone を使用した場合は著しくメモリ使用量は少なくなり非常に少ない時間で作成できるため、同じ音を再生する複数の Source を作成するならば、この方法は好ましいです。",
                                ko = "정지 상태로 복제본을 생성합니다.\n\nStatic 소스의 경우 love.audio.newSource보다 Source:clone으로 생성하는 게 성능상의 이점도 있고 여러모로 좋습니다. 같은 음향 파일을 여러 개 사용해야 할 경우 이 함수를 사용해보세요."
                            },
                            minidescriptiont = {
                                de = "Erstellt eine identische Kopie einer Geräuschquelle.",
                                jp = "Source と同一の複製を停止状態に設定して作成します。",
                                ko = "정지 상태로 복제본을 생성합니다."
                            },
                            name = "clone",
                            variants = {
                                {
                                    descriptiont = {
                                        jp = "複製された Source は元の Source の設定可能な状態を全て継承しますが、初期設定は停止状態になります。\n\n== 関連 ==\n\n* parent::Source (日本語)\n\nCategory:Functions\n\n{{#set:Description=Source と同一の複製を停止状態に設定して作成します。}}\n\n{{#set:Since=091}}\n\n{{#set:PrettySince=0.9.1}}\n\n== そのほかの言語 ==",
                                        ko = "복제된 소스는 정지 상태가 된다는 것을 제외하고는 원본 소스의 모든 설정 상태를 물려받습니다."
                                    },
                                    returns = {
                                        {
                                            description = "The new identical copy of this Source.",
                                            descriptiont = {
                                                jp = "この Source の新規同一複製物。",
                                                ko = "복제된 소스."
                                            },
                                            name = "source",
                                            type = "Source"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the reference and maximum distance of the source.",
                            descriptiont = {
                                jp = "Source の基準及び最大減衰距離を取得します。値は、現在の DistanceModel との組み合わせにより、リスナーからの距離を基準とした Source 音量の減衰方法に影響します。",
                                ko = "오디오 소스의 최대 감쇠 거리와 참조 감쇠 거리를 구합니다. 이 값은 현재 DistanceModel과 함께, 듣는이로부터의 거리를 기반으로 하여 소리 감쇠에 영향을 끼칩니다.",
                                pt = "Obtém as distâncias de atenuação referencial e máxima do Source. Os valores, combinados com o DistanceModel atual, afetam a maneira como o volume do Source é atenuado, baseado na distância do ouvinte."
                            },
                            minidescriptiont = {
                                jp = "Source の基準及び最大減衰距離を取得します。",
                                ko = "오디오 소스의 최대 감쇠 거리와 참조 감쇠 거리를 구합니다.",
                                pt = "Obtém as distâncias de atenuação referencial e máxima do Source."
                            },
                            name = "getAttenuationDistances",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The reference distance.",
                                            descriptiont = {
                                                jp = "現在の基準減衰距離。現在の DistanceModel が clamped ならば、これは Source の減衰が無くなる前に最小の距離になります。",
                                                ko = "현재 참조 감쇠 거리. 현재 DistanceModel이 고정이면, 소리가 더이상 감쇠되지 않을 때 최소 감쇠 거리로 동작합니다.",
                                                pt = "A distância de atenuação referencial atual. Se o DistanceModel atual estiver limitado, esta é a distância mínima antes da qual o Source não é mais atenuado."
                                            },
                                            name = "ref",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum distance.",
                                            descriptiont = {
                                                jp = "現在の最大減衰距離。",
                                                ko = "현재 최대 감쇠 거리.",
                                                pt = "A distância de atenuação máxima atual."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the number of channels in the Source. Only 1-channel (mono) Sources can use directional and positional effects.",
                            descriptiont = {
                                jp = "Source のチャンネル数を取得します。1-チャンネル (モノラル) Source のみ方向および座標エフェクトを使用できます。",
                                ko = "채널 수를 구합니다. 1채널(모노) 오디오 소스만이 음향 위치/방향 효과 설정을 할 수 있습니다.",
                                pt = "Obtém o número de canais de um Source. Apenas Sources de 1 canal (mono) podem usar efeitos direcionais e posicionais."
                            },
                            minidescriptiont = {
                                jp = "Source のチャンネル数を取得します。",
                                ko = "채널 수를 구합니다.",
                                pt = "Obtém o número de canais de um Source."
                            },
                            name = "getChannels",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "1 for mono, 2 for stereo.",
                                            descriptiont = {
                                                jp = "1 はモノラル、 2 はステレオ です。",
                                                ko = "모노는 1, 스테레오는 2.",
                                                pt = "1 é mono, 2 é estéreo."
                                            },
                                            name = "channels",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the Source's directional volume cones. Together with Source:setDirection, the cone angles allow for the Source's volume to vary depending on its direction.",
                            descriptiont = {
                                jp = "Source の方向にある音量錐を取得します。 Source:setDirection と一緒に、錐角は Source の音量の方向により変化できるようにします。",
                                ko = "오디오 소스의 볼륨 원뿔을 얻어옵니다. 원뿔 각도는 오디오 소스의 방향을 기반으로 하여 볼륨에 영향을 줍니다.",
                                pt = "Obtém os cones de volume direcional do Source. Usados com Source:setDirection, os ângulos dos cones permitem que o volume do Source varie de acordo com sua direção."
                            },
                            minidescriptiont = {
                                jp = "Source の方向にある音量錐を取得します。",
                                ko = "오디오 소스의 볼륨 원뿔을 얻어옵니다.",
                                pt = "Obtém os cones de volume direcional do Source."
                            },
                            name = "getCone",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The inner angle from the Source's direction, in radians. The Source will play at normal volume if the listener is inside the cone defined by this angle.",
                                            descriptiont = {
                                                jp = "ラジアン単位での Source の方向からの内角。この角度により定義された錐の内側にリスナーが存在する場合は Source は通常音量で再生されます。",
                                                ko = "오디오 소스의 방향으로부터의 내부 각도(라디안). 듣는이가 이 각도로 정의된 원뿔의 내부에 들어오면 정상적인 볼륨으로 재생됨.",
                                                pt = "O ângulo interno da direção do Source, em radianos. O Source irá tocar no volume normal se o ouvinte estiver dentro do cone definido por este ângulo."
                                            },
                                            name = "innerAngle",
                                            type = "number"
                                        },
                                        {
                                            description = "The outer angle from the Source's direction, in radians. The Source will play at a volume between the normal and outer volumes, if the listener is in between the cones defined by the inner and outer angles.",
                                            descriptiont = {
                                                jp = "ラジアン単位での Source の方向からの外角。内角および外角により定義された錐の間にリスナーが存在する場合は Source は通常及び外部音量の間で再生されます。",
                                                ko = "오디오 소스의 방향으로부터의 외부 각도(라디안). 듣는이가 내부 각도와 외부 각도 사이에 들어오면 기본 볼륨과 외부 볼륨 사이의 값으로 재생됨.",
                                                pt = "O ângulo externo da direção do Source, em radianos. O Source irá num volume entre o normal e o externo, caso o ouvinte esteja entre os cones definidos pelos ângulos interno e externo."
                                            },
                                            name = "outerAngle",
                                            type = "number"
                                        },
                                        {
                                            description = "The Source's volume when the listener is outside both the inner and outer cone angles.",
                                            descriptiont = {
                                                jp = "リスナーが内角及び外角の錐の両方から外れて外側に存在する場合の Source の音量になります。",
                                                ko = "외부 볼륨. 듣는이가 외부 각도 원뿔과 내부 각도 원뿔을 모두 빠져나갔을 경우 들리는 볼륨의 크기.",
                                                pt = "O volume do Source quando o ouvinte estiver fora dos cones de ambos os ângulos, interno e externo."
                                            },
                                            name = "outerVolume",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the direction of the Source.",
                            descriptiont = {
                                de = "Gibt die Richtung der Quelle zurück.",
                                jp = "Source の方向を取得します。",
                                ko = "오디오 소스의 방향을 얻어옵니다.",
                                pt = "Obtém a direção de um Source."
                            },
                            minidescriptiont = {
                                de = "Gibt die Richtung der Quelle zurück.",
                                jp = "Source の方向を取得します。",
                                ko = "오디오 소스의 방향을 얻어옵니다.",
                                pt = "Obtém a direção de um Source."
                            },
                            name = "getDirection",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The X part of the direction vector.",
                                            descriptiont = {
                                                de = "Der X-Wer des Richtungsvektors.",
                                                jp = "X 側の方向ベクトル。",
                                                ko = "오디오 소스의 x축 방향 벡터.",
                                                pt = "A parte X do vetor direcional."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The Y part of the direction vector.",
                                            descriptiont = {
                                                de = "Der Y-Wer des Richtungsvektors.",
                                                jp = "Y 側の方向ベクトル。",
                                                ko = "오디오 소스의 y축 방향 벡터.",
                                                pt = "A parte Y do vetor direcional."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The Z part of the direction vector.",
                                            descriptiont = {
                                                de = "Der Z-Wer des Richtungsvektors.",
                                                jp = "Z 側の方向ベクトル。",
                                                ko = "오디오 소스의 z축 방향 벡터.",
                                                pt = "A parte Z do vetor direcional."
                                            },
                                            name = "z",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the duration of the Source. For streaming Sources it may not always be sample-accurate, and may return -1 if the duration cannot be determined at all.",
                            descriptiont = {
                                jp = "Source の継続時間を取得します。 ストリーミング型の Source において常にサンプルは不正確であるため、持続時間を全く測定できない場合は -1 を返します。"
                            },
                            minidescriptiont = {
                                jp = "Source の継続時間を取得します。"
                            },
                            name = "getDuration",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "\"seconds\"",
                                            description = "The time unit for the return value.",
                                            descriptiont = {
                                                jp = "返値における単位の種類を指定します。"
                                            },
                                            name = "unit",
                                            type = "TimeUnit"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The duration of the Source, or -1 if it cannot be determined.",
                                            descriptiont = {
                                                jp = "Source の継続時間、または -1 ならば測定不能です。"
                                            },
                                            name = "duration",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the current pitch of the Source.",
                            descriptiont = {
                                de = "Gibt die aktuelle Tonhöhe der Quelle zurück.",
                                jp = "Source における現在の音程を取得します。",
                                ko = "피치를 구합니다.",
                                pt = "Obtém o tom atual do Source."
                            },
                            minidescriptiont = {
                                de = "Gibt die aktuelle Tonhöhe der Quelle zurück.",
                                jp = "Source における現在の音程を取得します。",
                                ko = "피치를 구합니다.",
                                pt = "Obtém o tom atual do Source."
                            },
                            name = "getPitch",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The pitch, where 1.0 is normal.",
                                            descriptiont = {
                                                de = "Die Tonhöhe, wobei 1.0 normal ist.",
                                                jp = "音程を返します。なお、 1.0 で通常の音程になります。",
                                                ko = "현재 피치. 1.0이 기본 피치.",
                                                pt = "O tom, onde 1.0 é o tom normal."
                                            },
                                            name = "pitch",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the position of the Source.",
                            descriptiont = {
                                jp = "Source の座標を取得します。",
                                ko = "오디오 소스의 위치를 얻어옵니다.",
                                pt = "Obtém a posição do Source."
                            },
                            minidescriptiont = {
                                jp = "Source の座標を取得します。",
                                ko = "오디오 소스의 위치를 얻어옵니다.",
                                pt = "Obtém a posição do Source."
                            },
                            name = "getPosition",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The X position of the Source.",
                                            descriptiont = {
                                                jp = "Source の X 座標。",
                                                ko = "오디오 소스의 x축 위치.",
                                                pt = "A posição em X do Source."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The Y position of the Source.",
                                            descriptiont = {
                                                jp = "Source の Y 座標。",
                                                ko = "오디오 소스의 y축 위치.",
                                                pt = "A posição em Y do Source."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The Z position of the Source.",
                                            descriptiont = {
                                                jp = "Source の Z 座標。",
                                                ko = "오디오 소스의 z축 위치.",
                                                pt = "A posição em Z do Source."
                                            },
                                            name = "z",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the rolloff factor of the source.",
                            descriptiont = {
                                jp = "Source のロールオフ係数を返します。",
                                ko = "롤 오프 율을 얻어옵니다.",
                                pt = "Retorna o valor de decaimento do Source."
                            },
                            minidescriptiont = {
                                jp = "Source のロールオフ係数を返します。",
                                ko = "롤 오프 율을 얻어옵니다.",
                                pt = "Retorna o valor de decaimento do Source."
                            },
                            name = "getRolloff",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The rolloff factor.",
                                            descriptiont = {
                                                jp = "ロールオフ係数。",
                                                ko = "롤 오프 율.",
                                                pt = "O fator de decaimento."
                                            },
                                            name = "rolloff",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the type (static or stream) of the Source.",
                            descriptiont = {
                                jp = "Source (static または stream) の種類を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Source (static または stream) の種類を取得します。"
                            },
                            name = "getType",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The type of the source.",
                                            descriptiont = {
                                                jp = "Source の種類。"
                                            },
                                            name = "sourcetype",
                                            type = "SourceType"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the velocity of the Source.",
                            descriptiont = {
                                jp = "Source の速度を取得します。",
                                ko = "오디오 소스의 속도를 받아옵니다.\n\n도플러 효과를 줄 때 사용합니다.",
                                pt = "Obtém a velocidade do Source."
                            },
                            minidescriptiont = {
                                jp = "Source の速度を取得します。",
                                ko = "오디오 소스의 속도를 받아옵니다.",
                                pt = "Obtém a velocidade do Source."
                            },
                            name = "getVelocity",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The X part of the velocity vector.",
                                            descriptiont = {
                                                jp = "X 側の速度ベクトル。",
                                                ko = "x축 속도 벡터.",
                                                pt = "A parte X do vetor de velocidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The Y part of the velocity vector.",
                                            descriptiont = {
                                                jp = "Y 側の速度ベクトル。",
                                                ko = "y축 속도 벡터.",
                                                pt = "A parte Y do vetor de velocidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The Z part of the velocity vector.",
                                            descriptiont = {
                                                jp = "Z 側の速度ベクトル。",
                                                ko = "z축 속도 벡터.",
                                                pt = "A parte Z do vetor de velocidade."
                                            },
                                            name = "z",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the current volume of the Source.",
                            descriptiont = {
                                jp = "Source の現在の音量を取得します。",
                                ko = "볼륨을 조사합니다.",
                                pt = "Obtém o volume atual do Source."
                            },
                            minidescriptiont = {
                                jp = "Source の現在の音量を取得します。",
                                ko = "볼륨을 조사합니다.",
                                pt = "Obtém o volume atual do Source."
                            },
                            name = "getVolume",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The volume of the Source, where 1.0 is normal volume.",
                                            descriptiont = {
                                                jp = "Source の音量を返します。1.0 は標準音量です。",
                                                ko = "오디오 볼륨. 1.0이 기본값(이자 최댓값).",
                                                pt = "O volume do Source, onde 1.0 é o volume normal."
                                            },
                                            name = "volume",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the volume limits of the source.",
                            descriptiont = {
                                jp = "Source の音量制限を取得します。",
                                ko = "볼륨 한계를 조사합니다.",
                                pt = "Retorna os limites de volume do Source."
                            },
                            minidescriptiont = {
                                jp = "Source の音量制限を取得します。",
                                ko = "볼륨 한계를 조사합니다.",
                                pt = "Retorna os limites de volume do Source."
                            },
                            name = "getVolumeLimits",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum volume.",
                                            descriptiont = {
                                                jp = "最小音量。",
                                                ko = "최소 볼륨.",
                                                pt = "O volume mínimo."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum volume.",
                                            descriptiont = {
                                                jp = "最大音量。",
                                                ko = "최대 볼륨.",
                                                pt = "O volume máximo."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the Source will loop.",
                            descriptiont = {
                                de = "Gibt zurück, ob die Quelle sich wiederholt.",
                                jp = "Source がループ再生されているかどうか返します。",
                                ko = "재생시 무한 반복이 설정되어 있는지 조사합니다.",
                                pt = "Retorna se o Source vai se repetir ciclicamente ou não."
                            },
                            minidescriptiont = {
                                de = "Gibt zurück, ob die Quelle sich wiederholt.",
                                jp = "Source がループ再生されているかどうか返します。",
                                ko = "재생시 무한 반복이 설정되어 있는지 조사합니다.",
                                pt = "Retorna se o Source vai se repetir ciclicamente ou não."
                            },
                            name = "isLooping",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the Source will loop, false otherwise.",
                                            descriptiont = {
                                                ko = "재생시 무한 반복이 설정되어 있으면 true.",
                                                pt = "Verdadeiro se o Source for se repetir ciclicamente; se não, falso."
                                            },
                                            name = "loop",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the Source is paused.",
                            descriptiont = {
                                de = "Gibt zurück, ob die Quelle pausiert ist.",
                                jp = "Source が一時停止中かどうか返します。",
                                ko = "일시 정지되어 있는지 조사합니다.",
                                pt = "Retorna se o Source está pausado ou não."
                            },
                            minidescriptiont = {
                                de = "Wahr, wenn die Quelle pausiert ist.",
                                jp = "Source が一時停止中かどうか返します。",
                                ko = "일시 정지되어 있는지 조사합니다.",
                                pt = "Retorna se o Source está pausado ou não."
                            },
                            name = "isPaused",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the Source is paused, false otherwise.",
                                            descriptiont = {
                                                jp = "True ならば Source は一時停止中であり、それ以外ならば False です。",
                                                ko = "일시 정지되어 있으면 true.",
                                                pt = "Verdadeiro se o Source estiver pausado; se não, falso."
                                            },
                                            name = "paused",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the Source is playing.",
                            descriptiont = {
                                jp = "Source が再生中かどうか返します。",
                                ko = "재생중인지 조사합니다.",
                                pt = "Retorna se o Source está tocando ou não."
                            },
                            minidescriptiont = {
                                jp = "Source が再生中かどうか返します。",
                                ko = "재생중인지 조사합니다.",
                                pt = "Retorna se o Source está tocando ou não."
                            },
                            name = "isPlaying",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the Source is playing, false otherwise.",
                                            descriptiont = {
                                                jp = "True ならば Source は再生中であり、それ以外ならば False です。",
                                                ko = "재생중이면 true.",
                                                pt = "Verdadeiro se o Source estiver tocando; se não, falso."
                                            },
                                            name = "playing",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the Source is stopped.",
                            descriptiont = {
                                de = "Gibt zurück, ob die Quelle gestoppt ist.",
                                jp = "Source が停止中かどうか返します。",
                                ko = "정지되어 있는지 조사합니다.",
                                pt = "Retorna se o Source está parado ou não."
                            },
                            minidescriptiont = {
                                de = "Gibt zurück, ob die Quelle gestoppt ist.",
                                jp = "Source が停止中かどうか返します。",
                                ko = "정지되어 있는지 조사합니다.",
                                pt = "Retorna se o Source está parado ou não."
                            },
                            name = "isStopped",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the Source is stopped, false otherwise.",
                                            descriptiont = {
                                                de = "Wahr, wenn die Quelle gestoppt ist.",
                                                jp = "True ならば Source は停止中であり、それ以外ならば False です。",
                                                ko = "정지되어 있으면 true.",
                                                pt = "Verdadeiro se o Source estiver parado; se não, falso."
                                            },
                                            name = "stopped",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Pauses the Source.",
                            descriptiont = {
                                jp = "Source を一時停止します。",
                                ko = "일시정지합니다.",
                                pt = "Pausa um Source."
                            },
                            minidescriptiont = {
                                jp = "Source を一時停止します。",
                                ko = "일시정지합니다.",
                                pt = "Pausa um Source."
                            },
                            name = "pause",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Starts playing the Source.",
                            descriptiont = {
                                de = "Spielt eine Quelle ab.",
                                jp = "Source の再生を開始します。",
                                ko = "재생합니다.",
                                pt = "Começa a tocar um Source."
                            },
                            minidescriptiont = {
                                de = "Spielt eine Quelle ab.",
                                jp = " Source を再生します。",
                                ko = "재생합니다.",
                                pt = "Toca um Source."
                            },
                            name = "play",
                            variants = {
                                {
                                    descriptiont = {
                                        de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nsuccess = Source:play()\n\n&lt;/source&gt;"
                                    },
                                    returns = {
                                        {
                                            description = "True if the Source started playing successfully, false otherwise.",
                                            descriptiont = {
                                                de = "Wahr wenn die Quelle erfolgreich abgespielt werden konnte.",
                                                jp = "Source の再生を正常に開始できたかどうか。"
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Resumes a paused Source.",
                            descriptiont = {
                                jp = "一時停止を行った Source の再生を再開します。",
                                ko = "일시정지한 오디오 소스를 재개합니다.",
                                pt = "Retorna a tocar um Source."
                            },
                            minidescriptiont = {
                                jp = "一時停止を行った Source の再生を再開します。",
                                ko = "일시정지한 오디오 소스를 재개합니다.",
                                pt = "Retorna a tocar um Source."
                            },
                            name = "resume",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Rewinds a Source.",
                            descriptiont = {
                                jp = "Source を巻き戻します。",
                                ko = "되감습니다.",
                                pt = "Rebobina um Source."
                            },
                            minidescriptiont = {
                                jp = "Source を巻き戻します。",
                                ko = "되감습니다.",
                                pt = "Rebobina um Source."
                            },
                            name = "rewind",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Sets the playing position of the Source.",
                            descriptiont = {
                                jp = "現在再生中の Source へ再生位置を設定します。",
                                ko = "재생중인 위치를 임의로 설정합니다.",
                                pt = "Define a posição atual do fluxo de áudio do Source."
                            },
                            minidescriptiont = {
                                jp = "現在再生中の Source へ再生位置を設定します。",
                                ko = "재생중인 위치를 임의로 설정합니다.",
                                pt = "Define a posição atual do fluxo de áudio do Source."
                            },
                            name = "seek",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The position to seek to.",
                                            descriptiont = {
                                                jp = "再生位置を指定します。",
                                                ko = "임의 위치.",
                                                pt = "A posição a ser buscada."
                                            },
                                            name = "position",
                                            type = "number"
                                        },
                                        {
                                            default = "\"seconds\"",
                                            description = "The unit of the position value.",
                                            descriptiont = {
                                                jp = "位置における値の単位の種類を指定します。",
                                                ko = "시간 표현 단위.",
                                                pt = "A unidade do valor posicional."
                                            },
                                            name = "unit",
                                            type = "TimeUnit"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the direction vector of the Source. A zero vector makes the source non-directional.",
                            descriptiont = {
                                jp = "Source の方向を設定します。ベクトル 0 は Source を無方向にします",
                                ko = "오디오 소스의 방향을 정합니다. 영벡터는 방향이 없음을 의미합니다.",
                                pt = "Configura o vetor direcional do Source. Um vetor zero torna o Source não direcional."
                            },
                            minidescriptiont = {
                                jp = "Source の方向を設定します。",
                                ko = "오디오 소스의 방향을 정합니다.",
                                pt = "Configura a direção do Source."
                            },
                            name = "setDirection",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The X part of the direction vector.",
                                            descriptiont = {
                                                jp = "X 側の方向ベクトル。",
                                                ko = "오디오 소스의 x축 방향 벡터.",
                                                pt = "A parte X do vetor direcional."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The Y part of the direction vector.",
                                            descriptiont = {
                                                jp = "Y 側の方向ベクトル。",
                                                ko = "오디오 소스의 y축 방향 벡터.",
                                                pt = "A parte Y do vetor direcional."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The Z part of the direction vector.",
                                            descriptiont = {
                                                jp = "Z 側の方向ベクトル。",
                                                ko = "오디오 소스의 z축 방향 벡터.",
                                                pt = "A parte Z do vetor direcional."
                                            },
                                            name = "z",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the reference and maximum distance of the source.",
                            descriptiont = {
                                jp = "Source の基準及び最大減衰距離を設定します。引数は、現在の DistanceModel との組み合わせにより、距離を基準とした Source 音量の減衰方法に影響します。\n\n減衰距離はモノラル(ステレオではない)の音声のみ適用できます。",
                                ko = "오디오 소스의 최대 감쇠 거리와 참조 감쇠 거리를 설정합니다. 이 값은 현재 DistanceModel과 함께, 듣는이로부터의 거리를 기반으로 하여 소리 감쇠에 영향을 끼칩니다.",
                                pt = "Define as distâncias de atenuação referencial e máxima do Source. Os parâmetros, combinados com o DistanceModel atual, afetam a maneira como o volume do Source é atenuado, baseado na distância."
                            },
                            minidescriptiont = {
                                jp = "Source の基準及び最大減衰距離を設定します。",
                                ko = "오디오 소스의 최대 감쇠 거리와 참조 감쇠 거리를 설정합니다.",
                                pt = "Define as distâncias de atenuação referencial e máxima do Source."
                            },
                            name = "setAttenuationDistances",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new reference distance.",
                                            descriptiont = {
                                                jp = "新規の基準減衰距離。現在の DistanceModel が clamped ならば、これは最小の減衰距離になります。",
                                                ko = "현재 참조 감쇠 거리. 현재 DistanceModel이 고정이면, 소리가 더이상 감쇠되지 않을 때 최소 감쇠 거리로 동작합니다.",
                                                pt = "A nova distância de atenuação referencial. Se o DistanceModel atual estiver limitado, esta é a distância mínima."
                                            },
                                            name = "ref",
                                            type = "number"
                                        },
                                        {
                                            description = "The new maximum distance.",
                                            descriptiont = {
                                                jp = "新規の最大減衰距離。",
                                                ko = "현재 최대 감쇠 거리.",
                                                pt = "A nova distância de atenuação máxima."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the Source's directional volume cones. Together with Source:setDirection, the cone angles allow for the Source's volume to vary depending on its direction.",
                            descriptiont = {
                                jp = "Source の方向にある音量錐を設定します。 Source:setDirection と一緒に、錐角は Source の音量の方向により変化できるようにします。",
                                ko = "오디오 소스의 볼륨 원뿔을 설정합니다. 원뿔 각도는 오디오 소스의 방향을 기반으로 하여 볼륨에 영향을 줍니다.",
                                pt = "Configura os cones de volume direcional do Source. Usados com Source:setDirection, os ângulos dos cones permitem que o volume do Source varie de acordo com sua direção."
                            },
                            minidescriptiont = {
                                jp = "Source の方向にある音量錐を設定します。",
                                ko = "오디오 소스의 볼륨 원뿔을 설정합니다.",
                                pt = "Configura os cones de volume direcional do Source."
                            },
                            name = "setCone",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The inner angle from the Source's direction, in radians. The Source will play at normal volume if the listener is inside the cone defined by this angle.",
                                            descriptiont = {
                                                jp = "ラジアン単位での Source の方向からの内角。この角度により定義された錐の内側にリスナーが存在する場合は Source は通常音量で再生されます。",
                                                ko = "오디오 소스의 방향으로부터의 내부 각도(라디안). 듣는이가 이 각도로 정의된 원뿔의 내부에 들어오면 기본 볼륨으로 재생됨.",
                                                pt = "O ângulo interno da direção do Source, em radianos. O Source irá tocar no volume normal se o ouvinte estiver dentro do cone definido por este ângulo."
                                            },
                                            name = "innerAngle",
                                            type = "number"
                                        },
                                        {
                                            description = "The outer angle from the Source's direction, in radians. The Source will play at a volume between the normal and outer volumes, if the listener is in between the cones defined by the inner and outer angles.",
                                            descriptiont = {
                                                jp = "ラジアン単位での Source の方向からの外角。内角および外角により定義された錐の間にリスナーが存在する場合は Source は通常及び外部音量の間で再生されます。",
                                                ko = "오디오 소스의 방향으로부터의 외부 각도(라디안). 듣는이가 내부 각도와 외부 각도 사이에 들어오면 기본 볼륨과 외부 볼륨 사이의 값으로 재생됨.",
                                                pt = "O ângulo externo da direção do Source, em radianos. O Source irá num volume entre o normal e o externo, caso o ouvinte esteja entre os cones definidos pelos ângulos interno e externo."
                                            },
                                            name = "outerAngle",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The Source's volume when the listener is outside both the inner and outer cone angles.",
                                            descriptiont = {
                                                jp = "リスナーが内角及び外角の錐の両方から外れて外側に存在する場合の Source の音量になります。",
                                                ko = "외부 볼륨. 듣는이가 외부 각도 원뿔과 내부 각도 원뿔을 모두 빠져나갔을 경우 들리는 볼륨의 크기.",
                                                pt = "O volume do Source quando o ouvinte estiver fora dos cones de ambos os ângulos, interno e externo."
                                            },
                                            name = "outerVolume",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets whether the Source should loop.",
                            descriptiont = {
                                de = "Bestimmt ob sich die Quelle wiederholen soll.",
                                jp = "Source をループ再生するかどうか設定します。",
                                ko = "재생시 무한 반복을 할 것인지 설정합니다.",
                                pt = "Configura se um Source deverá repetir."
                            },
                            minidescriptiont = {
                                de = "Sets whether the Source should loop.",
                                jp = "Source をループ再生するかどうか設定します。",
                                ko = "재생시 무한 반복을 할 것인지 설정합니다.",
                                pt = "Configura se um Source deverá repetir."
                            },
                            name = "setLooping",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True if the source should loop, false otherwise.",
                                            descriptiont = {
                                                de = "True wenn sich die Quelle wiederholen soll, false wenn nicht.",
                                                jp = "True ならば Source をループ再生しますが、 false ならばループ再生を解除します。",
                                                ko = "재생시 무한 반복을 원하면 true.",
                                                pt = "Verdadeiro para que o Source se repita ciclicamente, falso para o contrário."
                                            },
                                            name = "loop",
                                            type = "boolean"
                                        }
                                    },
                                    descriptiont = {
                                        de = "=== Synopse ===\n\n&lt;source lang=\"lua\"&gt;\n\nQuelle:setLooping( loop )\n\n&lt;/source&gt;"
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the pitch of the Source.",
                            descriptiont = {
                                jp = "Source における現在の音程を設定します。",
                                ko = "피치를 설정합니다.",
                                pt = "Configura o tom do Source."
                            },
                            minidescriptiont = {
                                jp = "Source における現在の音程を設定します。",
                                ko = "피치를 설정합니다.",
                                pt = "Configura o tom do Source."
                            },
                            name = "setPitch",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Calculated with regard to 1 being the base pitch. Each reduction by 50 percent equals a pitch shift of -12 semitones (one octave reduction). Each doubling equals a pitch shift of 12 semitones (one octave increase). Zero is not a legal value.",
                                            descriptiont = {
                                                jp = "1 を基準音程として見なして計算をします。 50 パーセントずつ下げることは半音で -12 (1 オクターブ下げる)の音程をずらすことと等価です。 2 倍ずつ上げること半音で 12 (1 オクターブ上げる)の音程をずらすことと等価です。 0 は有効な値ではありません。",
                                                ko = "1.0을 기준으로 하여, 12면 1옥타브 위로, -12면 1옥타브 아래로. 0은 유효하지 않은 값.",
                                                pt = "Calculado a partir do tom base (valor 1). Cada redução de 50 por cento equivale a abaixar o tom em 12 semitons (redução de uma oitava). Dobrar equivale a aumentar o tom em 12 semitons (aumentar uma oitava). Zero não é válido."
                                            },
                                            name = "pitch",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the position of the Source.",
                            descriptiont = {
                                jp = "Source の座標を設定します。注意として、これは モノラル (つまり、非・ステレオ) の音声ファイルのみ動作します！",
                                ko = "오디오 소스의 위치를 설정합니다.",
                                pt = "Define a posição do Source."
                            },
                            minidescriptiont = {
                                jp = "Source の座標を設定します。",
                                ko = "오디오 소스의 위치를 설정합니다.",
                                pt = "Define a posição do Source."
                            },
                            name = "setPosition",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The X position of the Source.",
                                            descriptiont = {
                                                jp = "Source の X 座標。",
                                                ko = "오디오 소스의 x축 위치.",
                                                pt = "A posição em X do Source."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The Y position of the Source.",
                                            descriptiont = {
                                                jp = "Source の Y 座標。",
                                                ko = "오디오 소스의 y축 위치.",
                                                pt = "A posição em Y do Source."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The Z position of the Source.",
                                            descriptiont = {
                                                jp = "Source の Z 座標。",
                                                ko = "오디오 소스의 z축 위치.",
                                                pt = "A posição em Z do Source."
                                            },
                                            name = "z",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the rolloff factor which affects the strength of the used distance attenuation.\n\nExtended information and detailed formulas can be found in the chapter \"3.4. Attenuation By Distance\" of OpenAL 1.1 specification.",
                            descriptiont = {
                                jp = "使用された減衰距離の強度に影響するロールオフ係数を設定します。\n\n拡張情報および詳細な公式は OpenAL 1.1 仕様書の \"3.4. 距離による減衰\" の章にあります。",
                                ko = "롤 오프 율을 설정합니다.",
                                pt = "Configura o fator de decaimento."
                            },
                            minidescriptiont = {
                                jp = "ロールオフ係数を設定します。",
                                ko = "롤 오프 율을 설정합니다.",
                                pt = "Configura o fator de decaimento."
                            },
                            name = "setRolloff",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new rolloff factor.",
                                            descriptiont = {
                                                jp = "新規ロールオフ係数。",
                                                ko = "롤 오프 율.",
                                                pt = "O novo fator de decaimento."
                                            },
                                            name = "rolloff",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the velocity of the Source.\n\nThis does not change the position of the Source, but is used to calculate the doppler effect.",
                            descriptiont = {
                                jp = "Source の速度を設定します。\n\nこれは Source の座標を'''変更しません'''が、アプリケーションへドップラー効果の計算方法を知らせます。",
                                ko = "오디오 소스의 속도를 설정합니다.\n\n도플러 효과를 줄 때 사용합니다.",
                                pt = "Configura a velocidade do Source.\n\nIsto '''não''' muda a posição do Source, mas permite ao programa saber como calcular o efeito doppler."
                            },
                            minidescriptiont = {
                                jp = "Source の速度を設定します。",
                                ko = "오디오 소스의 속도를 설정합니다.",
                                pt = "Configura a velocidade do Source."
                            },
                            name = "setVelocity",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The X part of the velocity vector.",
                                            descriptiont = {
                                                jp = "X 側の速度ベクトル。",
                                                ko = "x축 속도 벡터.",
                                                pt = "A parte X do vetor de velocidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The Y part of the velocity vector.",
                                            descriptiont = {
                                                jp = "Y 側の速度ベクトル。",
                                                ko = "y축 속도 벡터.",
                                                pt = "A parte Y do vetor de velocidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The Z part of the velocity vector.",
                                            descriptiont = {
                                                jp = "Z 側の速度ベクトル。",
                                                ko = "z축 속도 벡터.",
                                                pt = "A parte Z do vetor de velocidade."
                                            },
                                            name = "z",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the volume of the Source.",
                            descriptiont = {
                                de = "Stellt die Lautstärke der Quelle ein.",
                                jp = "Source の現在の音量を設定します。",
                                ko = "볼륨을 설정합니다.",
                                pt = "Define o volume atual do Source."
                            },
                            minidescriptiont = {
                                de = "Sets the current volume of the Source.",
                                jp = "Source の現在の音量を設定します。",
                                ko = "볼륨을 설정합니다.",
                                pt = "Define o volume atual do Source."
                            },
                            name = "setVolume",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The volume of the Source, where 1.0 is normal volume.",
                                            descriptiont = {
                                                de = "Die Lautstärke der Quelle, wobei 1.0 die standart Lautstärke ist.",
                                                jp = "Source の設定を指定します。1.0 は標準音量です。音量は 1.0 までであり、それ以上の値は指定できません。",
                                                ko = "오디오 볼륨. 1.0이 기본값(이자 최댓값).",
                                                pt = "O volume do Source, onde 1.0 é o volume normal. O volume não pode ser maior que 1.0."
                                            },
                                            name = "volume",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        de = "=== Sypnose ===\n\n&lt;source lang=\"lua\"&gt;\n\nQuelle:setVolume( volume )\n\n&lt;/source&gt;"
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the volume limits of the source. The limits have to be numbers from 0 to 1.",
                            descriptiont = {
                                jp = "音量制限を Source へ設定します。指定できる数値の範囲は 0.0 から 1.0 以内です。",
                                ko = "볼륨 한계를 설정합니다. 한계는 0과 1 사이의 값이어야 합니다.",
                                pt = "Define os limites de volume do Source. Os limites devem ser números de 0 a 1."
                            },
                            minidescriptiont = {
                                jp = "音量制限を Source へ設定します。",
                                ko = "볼륨 한계를 설정합니다. 한계는 0과 1 사이의 값이어야 합니다.",
                                pt = "Define os limites de volume do Source."
                            },
                            name = "setVolumeLimits",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum volume.",
                                            descriptiont = {
                                                jp = "最小音量。",
                                                ko = "최소 볼륨.",
                                                pt = "O volume mínimo."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum volume.",
                                            descriptiont = {
                                                jp = "最大音量。",
                                                ko = "최대 볼륨.",
                                                pt = "O volume máximo."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Stops a Source.",
                            descriptiont = {
                                jp = "Source の再生を停止します。",
                                ko = "정지합니다.",
                                pt = "Para um Source."
                            },
                            minidescriptiont = {
                                jp = "Source の再生を停止します。",
                                ko = "정지합니다.",
                                pt = "Para um Source."
                            },
                            name = "stop",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Gets the currently playing position of the Source.",
                            descriptiont = {
                                jp = "現在再生中の Source の再生位置を取得します。",
                                ko = "현재 재생하고 있는 지점을 구합니다.",
                                pt = "Obtém a posição atual do fluxo de áudio do Source."
                            },
                            minidescriptiont = {
                                jp = "現在再生中の Source の再生位置を取得します。",
                                ko = "현재 재생하고 있는 지점을 구합니다.",
                                pt = "Obtém a posição atual do fluxo de áudio do Source."
                            },
                            name = "tell",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "\"seconds\"",
                                            description = "The type of unit for the return value.",
                                            descriptiont = {
                                                ko = "시간 표현 단위.",
                                                pt = "O tipo da unidade do valor de retorno."
                                            },
                                            name = "unit",
                                            type = "TimeUnit"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The currently playing position of the Source.",
                                            descriptiont = {
                                                ko = "현재 재생하고 있는 위치.",
                                                pt = "A posição atual do fluxo de áudio do Source."
                                            },
                                            name = "position",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Um Source representa áudio que pode ser tocado."
                    },
                    name = "Source",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "Manages events, like keypresses.",
            enums = {
                {
                    constants = {
                        {
                            description = "Window focus gained or lost",
                            descriptiont = {
                                jp = "ウィンドウ・フォーカスを得たか失った。",
                                ko = "윈도우가 포커스를 얻거나 잃었을 때"
                            },
                            name = "focus"
                        },
                        {
                            description = "Joystick axis motion",
                            descriptiont = {
                                jp = "ジョイスティックの軸が動いた。",
                                ko = "조이스틱 축의 위치 변화 시"
                            },
                            name = "joystickaxis"
                        },
                        {
                            description = "Joystick hat pressed",
                            descriptiont = {
                                jp = "ジョイスティックのハットが押された。",
                                ko = "조이스틱 햇의 위치 변화 시"
                            },
                            name = "joystickhat"
                        },
                        {
                            description = "Joystick pressed",
                            descriptiont = {
                                jp = "ジョイスティックが押された。",
                                ko = "조이스틱을 눌렀을 때"
                            },
                            name = "joystickpressed"
                        },
                        {
                            description = "Joystick released",
                            descriptiont = {
                                jp = "ジョイスティックが離された。",
                                ko = "조이스틱을 뗐을 때"
                            },
                            name = "joystickreleased"
                        },
                        {
                            description = "Key pressed",
                            descriptiont = {
                                jp = "キーが押された。 ",
                                ko = "키를 눌렀을 때"
                            },
                            name = "keypressed"
                        },
                        {
                            description = "Key released",
                            descriptiont = {
                                jp = "キーが離された。",
                                ko = "키를 뗐을 때"
                            },
                            name = "keyreleased"
                        },
                        {
                            description = "Window mouse focus gained or lost",
                            descriptiont = {
                                jp = "ウィンドウがマウス・フォーカスを得たか失った。",
                                ko = "윈도우가 마우스 포커스를 잃거나 얻었을 때"
                            },
                            name = "mousefocus"
                        },
                        {
                            description = "Mouse pressed",
                            descriptiont = {
                                jp = "マウスが押された。",
                                ko = "마우스를 눌렀을 때"
                            },
                            name = "mousepressed"
                        },
                        {
                            description = "Mouse released",
                            descriptiont = {
                                jp = "マウスが離された。",
                                ko = "마우스를 뗐을 때"
                            },
                            name = "mousereleased"
                        },
                        {
                            description = "Window size changed by the user",
                            descriptiont = {
                                jp = "利用者によりウィンドウの大きさが変更された。 ",
                                ko = "사용자에 의해 윈도우의 크기가 변경되었을 때"
                            },
                            name = "resize"
                        },
                        {
                            description = "A Lua error has occurred in a thread.",
                            descriptiont = {
                                jp = "スレッドで Lua のエラーが発生した。",
                                ko = "스레드로 인한 루아 오류 발생 시"
                            },
                            name = "threaderror"
                        },
                        {
                            description = "Quit",
                            descriptiont = {
                                jp = "終了。",
                                ko = "종료"
                            },
                            name = "quit"
                        },
                        {
                            description = "Window is minimized or un-minimized by the user",
                            descriptiont = {
                                jp = "利用者によりウィンドウが最小化または非最小化された。 ",
                                ko = "사용자에 의해 윈도우가 최소화되거나 복귀되었을 때"
                            },
                            name = "visible"
                        }
                    },
                    description = "Arguments to love.event.push() and the like.",
                    descriptiont = {
                        de = "Mögliche Argumente für love.event.push und dergleichen.",
                        jp = "love.event.push() および類似のものへの引数。\n\n0.8.0 より、イベント名に略記を使用できなくなりました。 ",
                        ko = "시스템에 의해 정의된 이벤트들의 이름을 나타냅니다.\n\n0.8.0부터 이벤트 이름은 더이상 줄여쓰지 않습니다.",
                        pt = "Argumentos para love.event.push() e similares.",
                        ru = "Аргументы для love.event.push() и подобных."
                    },
                    minidescriptiont = {
                        de = "Mögliche Argumente für love.event.push und dergleichen.",
                        jp = "love.event.push() および類似のものへの引数。",
                        ko = "시스템에 의해 정의된 이벤트들의 이름을 나타냅니다.",
                        pt = "Argumentos para love.event.push() e similares.",
                        ru = "Аргументы для love.event.push() и подобных."
                    },
                    name = "Event"
                }
            },
            functions = {
                {
                    description = "Clears the event queue.",
                    descriptiont = {
                        de = "Leert die Ereigniswarteschleife.",
                        jp = "イベントキューを消去します。",
                        ko = "이벤트 큐를 비웁니다.",
                        pt = "Limpa a fila de eventos.",
                        ru = "Очистка очереди событий.\n\n&lt;source lang=\"lua\"&gt;\n\nlove.event.clear()\n\n&lt;/source&gt;"
                    },
                    minidescriptiont = {
                        de = "Leert die Ereigniswarteschleife.",
                        jp = "イベントキューを消去します。 ",
                        ko = "이벤트 큐를 비웁니다.",
                        pt = "Limpa a fila de eventos.",
                        ru = "Очищает очередь событий."
                    },
                    name = "clear",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Returns an iterator for messages in the event queue.",
                    descriptiont = {
                        de = "Gibt einen Iterator für Nachrichten in der Ereigniswarteschleife wider.",
                        jp = "イベントキューにあるメッセージに対してイテレーターを返します。 ",
                        ko = "이벤트 큐의 메시지들을 순회할 반복자를 리턴합니다.",
                        pt = "Retorna um iterador para mensagens na fila de eventos.",
                        ru = "Возвращает итератор для сообщений в очереди событий."
                    },
                    minidescriptiont = {
                        de = "Gibt einen Iterator für Nachrichten in der Ereignis-Warteschleife zurück.",
                        jp = "イベントキューにあるメッセージに対してイテレーターを返します。",
                        ko = "이벤트 큐의 메시지들을 순회할 반복자를 리턴합니다.",
                        pt = "Retorna um iterador para mensagens na fila de eventos.",
                        ru = "Возвращает итератор для сообщений в очереди событий."
                    },
                    name = "poll",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Iterator function usable in a for loop.",
                                    descriptiont = {
                                        de = "Iteratorfunktion, welche in einer Schleife benutzt werden kann.",
                                        jp = "for ループで利用できるイテレーター関数。",
                                        pt = "Função iteradora que pode ser usada num laço for.",
                                        ru = "Функция для использования в качестве итератора в цикле for."
                                    },
                                    name = "i",
                                    type = "function"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Pump events into the event queue. This is a low-level function, and is usually not called by the user, but by love.run. Note that this does need to be called for any OS to think you're still running, and if you want to handle OS-generated events at all (think callbacks). love.event.pump can only be called from the main thread, but afterwards, the rest of love.event can be used from any other thread.",
                    descriptiont = {
                        de = "Fügt Events in die Ereigniswarteschleife ein. \n\nlove.event.pump ist eine \"lowlevel\"-Funktion und wird normalerweise nicht explizit durch den Nutzer, sondern von love.run aufgerufen.",
                        jp = "イベントキューへイベントを汲み出します。\n\nこれは低レベル関数であり、通常は利用者が呼ぶことはありませんが、 love.run からは呼ばれます。\n\nなにかを OS が実行中であると考えられる場合、\n\nおよび OS により生成されたイベント(コールバックを想定)を全て扱いたい場合に呼び出す必要があることに注意してください。 ",
                        ko = "이벤트 큐 내의 모든 이벤트를 실행하는 저수준 함수입니다. 때문에 사용자 수준에서 호출될 일은 많지 않고, 대부분 love.run을 재정의하는 데 사용됩니다.",
                        pt = "Adiciona eventos à fila de eventos.\n\nEsta é uma função de baixo nível, e normalmente não é chama pelo usuário, e sim por love.run.\n\nRepare que ela precisa ser chamada para o sistema operacional saber que o programa está rodando,\n\ne é necessária para lidar com eventos gerados pelo sistema operacional (isso é, callbacks).",
                        ru = "Убирает событие из очереди событий. Это низкоуровневая функция и она обычно не вызывается явно, но используется функциями love.event.poll() или love.event.wait()."
                    },
                    minidescriptiont = {
                        de = "Fügt Events in die Ereigniswarteschleife ein.",
                        jp = "イベントキューへイベントを汲み出します。",
                        ko = "이벤트 큐 내의 모든 이벤트를 실행하는 저수준 함수입니다.",
                        pt = "Adiciona eventos à fila de eventos.",
                        ru = "Убирает событие из очереди событий."
                    },
                    name = "pump",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Adds an event to the event queue.",
                    descriptiont = {
                        de = "Fügt ein Ereignis der Ereignis-Warteschleife hinzu.",
                        jp = "イベントキューへイベントを追加します。\n\n0.10.0 以降では、デフォルトのコールバックにおいて、これまでは第六引数以降は未使用でしたが、この関数への引数として任意個数の引数を渡してもかまいません。",
                        ko = "이벤트 큐에 이벤트를 추가합니다.",
                        pt = "Adiciona um evento à fila de eventos.",
                        ru = "Добавляет событие в очередь событий."
                    },
                    minidescriptiont = {
                        de = "Fügt ein Event der Ereignis-Warteschleife hinzu.",
                        jp = "イベントキューへイベントを追加します。",
                        ko = "이벤트 큐에 이벤트를 추가합니다.",
                        pt = "Adiciona um evento à fila de eventos.",
                        ru = "Добавляет событие в очередь событий."
                    },
                    name = "push",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name of the event.",
                                    name = "e",
                                    type = "Event"
                                },
                                {
                                    default = "nil",
                                    description = "First event argument.",
                                    name = "a",
                                    type = "Variant"
                                },
                                {
                                    default = "nil",
                                    description = "Second event argument.",
                                    name = "b",
                                    type = "Variant"
                                },
                                {
                                    default = "nil",
                                    description = "Third event argument.",
                                    name = "c",
                                    type = "Variant"
                                },
                                {
                                    default = "nil",
                                    description = "Fourth event argument.",
                                    name = "d",
                                    type = "Variant"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Adds the quit event to the queue.\n\nThe quit event is a signal for the event handler to close LÖVE. It's possible to abort the exit process with the love.quit callback.",
                    descriptiont = {
                        jp = "キューへ quit イベントを追加します。 \n\nquit イベントはイベントハンドラで LÖVE を終了するためのシグナルです。 love.quit コールバックにより終了処理を中止することもできます。",
                        ko = "LÖVE 프로그램을 종료합니다.\n\n종료 이벤트를 이벤트 큐에 추가합니다. 종료 이벤트는 이벤트 핸들러에게 LÖVE를 종료하겠다고 보내는 신호입니다. 종료를 진행 도중 love.quit 콜백 함수에서 종료를 유보할 수도 있습니다.",
                        pt = "Adiciona o evento quit à fila.\n\nO evento quit é um sinal para o manipulador de eventos fechar o LÖVE. É possível abortar o processo de saída com o callback love.quit.",
                        ru = "Добавляет событие выхода в основной поток. love.auit коллбак позволяет предотвратить выход с помощью данной функции."
                    },
                    minidescriptiont = {
                        jp = "LÖVE プログラムを終了します。",
                        ko = "LÖVE 프로그램을 종료합니다.",
                        pt = "Sai do programa LÖVE."
                    },
                    name = "quit",
                    variants = {
                        {},
                        {
                            arguments = {
                                {
                                    default = "0",
                                    description = "The program exit status to use when closing the application.",
                                    descriptiont = {
                                        jp = "アプリケーション終了時に使用するためのプログラム終了状態。"
                                    },
                                    name = "exitstatus",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Restarts the game without relaunching the executable. This cleanly shuts down the main Lua state instance and creates a brand new one.",
                                    descriptiont = {
                                        jp = "ゲームの終了および実行可能ファイルを再実行せずに再起動を行うために標準の love.run を示します。これはメインの Lua における状態インスタンスを綺麗に停止してから新品のインスタンスを作成します。"
                                    },
                                    name = "\"restart\"",
                                    type = "string"
                                }
                            },
                            descriptiont = {
                                jp = "実行可能ファイルを再実行せずにゲームを再起動します。"
                            }
                        }
                    }
                },
                {
                    description = "Like love.event.poll but blocks until there is an event in the queue.",
                    descriptiont = {
                        de = "Wie love.event.poll, blockiert allerdings alles, bis ein Element in der Ereigniswarteschleife ist.",
                        jp = "love.event.poll() と似ていますが、イベントキューにイベントがあるまで阻止します。 ",
                        ko = "이벤트를 하나 얻어오되, 큐에 이벤트가 없다면 하나라도 추가될 때까지 무한정 대기합니다.",
                        pt = "Como love.event.poll(), mas bloqueia a execução até existir um evento na fila.",
                        ru = "Похожа на love.event.poll(), но ждет, пока не появится событие в очереди."
                    },
                    minidescriptiont = {
                        de = "Wie love.event.poll, blockiert allerdings alles, bis ein Element in der Ereigniswarteschleife ist.",
                        jp = "love.event.poll() と似ていますが、イベントキューにイベントがあるまで阻止します。 ",
                        ko = "이벤트를 하나 얻어오되, 큐에 이벤트가 없다면 하나라도 추가될 때까지 무한정 대기합니다.",
                        pt = "Como love.event.poll(), mas bloqueia a execução até existir um evento na fila.",
                        ru = "Похожа на love.event.poll(), но ждет, пока не появится событие в очереди."
                    },
                    name = "wait",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The type of event.",
                                    descriptiont = {
                                        jp = "イベントの種類。"
                                    },
                                    name = "e",
                                    type = "Event"
                                },
                                {
                                    description = "First event argument.",
                                    descriptiont = {
                                        jp = "イベントの第一引数。"
                                    },
                                    name = "a",
                                    type = "Variant"
                                },
                                {
                                    description = "Second event argument.",
                                    descriptiont = {
                                        jp = "イベントの第二引数。"
                                    },
                                    name = "b",
                                    type = "Variant"
                                },
                                {
                                    description = "Third event argument.",
                                    descriptiont = {
                                        jp = "イベントの第三引数。"
                                    },
                                    name = "c",
                                    type = "Variant"
                                },
                                {
                                    description = "Fourth event argument.",
                                    descriptiont = {
                                        jp = "イベントの第四引数。 "
                                    },
                                    name = "d",
                                    type = "Variant"
                                }
                            }
                        }
                    }
                }
            },
            name = "event"
        },
        {
            description = "Provides an interface to the user's filesystem.",
            enums = {
                {
                    constants = {
                        {
                            description = "No buffering. The result of write and append operations appears immediately.",
                            descriptiont = {
                                jp = "バッファリングなし。書き込みおよび追記の操作を行った結果は直ちに反映されます。",
                                ko = "버퍼링하지 않습니다. 쓰기 동작과 추가 동작의 결과가 바로 나타납니다.",
                                pt = "Sem buffer. O resultado de escritas e acréscimos aparecerá imediatamente.",
                                ru = "Нет буферизации.Результат записи и добавление операций  порвется сразу."
                            },
                            name = "none"
                        },
                        {
                            description = "Line buffering. Write and append operations are buffered until a newline is output or the buffer size limit is reached.",
                            descriptiont = {
                                jp = "行バッファリング。書き込みおよび追記の操作を行った結果は改行が出力されるかバッファの大きさが限界に達するまでバッファへ蓄積されます。",
                                ko = "한 줄씩 버퍼링합니다. 새 줄이 등장하거나 버퍼의 크기가 꽉 찰 때까지 쓰기 동작와 추가 동작을 버퍼링합니다.",
                                pt = "Buffer por linha. Operações de escrita e de acréscimo vão pro buffer até que uma nova linha seja enviada ou o tamanho limite do buffer seja atingido.",
                                ru = "Линия буферизации. Запись и добавление операций буферизуются до вывода новой строки или ограничение на размер буфера будет достигнуто."
                            },
                            name = "line"
                        },
                        {
                            description = "Full buffering. Write and append operations are always buffered until the buffer size limit is reached.",
                            descriptiont = {
                                jp = "完全なバッファリング。書き込みおよび追記の操作を行った結果はバッファの大きさが限界に達するまで常にバッファへ蓄積されます。",
                                ko = "끝까지 버퍼링합니다. 버퍼의 크기가 꽉 찰 때까지 쓰기 동작과 추가 동작을 버퍼링합니다.",
                                pt = "Buffer completo. Operações de escrita e de acréscimo vão pro buffer até que o tamanho limite do buffer seja atingido.",
                                ru = "Полная буферизация. Запись и добавление операций всегда буферизуются до того как лимит размера буфера будет достигнут."
                            },
                            name = "full"
                        }
                    },
                    description = "Buffer modes for File objects.",
                    descriptiont = {
                        jp = "File オブジェクトに対してバッファモードを指定します。",
                        ko = "파일로부터 데이터를 출력할 때 어떻게 버퍼링할 것인지에 대한 방법입니다.",
                        pt = "Modos de buffer para objetos File.",
                        ru = "Режимы буфер для объектов File (Русский)."
                    },
                    minidescriptiont = {
                        jp = "File オブジェクトに対してバッファモードを指定します。",
                        ko = "파일로부터 데이터를 출력할 때 어떻게 버퍼링할 것인지에 대한 방법입니다.",
                        pt = "Modos de buffer para objetos File.",
                        ru = "Режимы буфер для объектов File (Русский)."
                    },
                    name = "BufferMode"
                },
                {
                    constants = {
                        {
                            description = "The data is unencoded.",
                            descriptiont = {
                                jp = "データは符号化されていない。",
                                pt = "Os dados estão decodificados.",
                                ru = "Данные не закодированы."
                            },
                            name = "file"
                        },
                        {
                            description = "The data is base64-encoded.",
                            descriptiont = {
                                jp = "データは base64で符号化されている。",
                                pt = "Os dados estão codificados (base64).",
                                ru = "Данные кодируются в base64."
                            },
                            name = "base64"
                        }
                    },
                    description = "How to decode a given FileData.",
                    descriptiont = {
                        jp = "FileData の復号化方法を指定します。",
                        pt = "Como decodificar um dado FileData (Português).",
                        ru = "Как декодировать FileData."
                    },
                    minidescriptiont = {
                        jp = "FileData の復号化方法を指定します。",
                        pt = "Como decodificar um dado FileData (Português).",
                        ru = "Как декодировать FileData."
                    },
                    name = "FileDecoder"
                },
                {
                    constants = {
                        {
                            description = "Open a file for read.",
                            descriptiont = {
                                de = "Öffnet eine Datei zum Lesen.",
                                jp = "読み込むためにファイルを開きます。",
                                ko = "읽기 전용 모드.",
                                pt = "Abre um arquivo para leitura.",
                                ru = "Открыть файл для чения."
                            },
                            name = "r"
                        },
                        {
                            description = "Open a file for write.",
                            descriptiont = {
                                de = "Öffnet eine Datei zum Schreiben.",
                                jp = "書き込むためにファイルを開きます。",
                                ko = "쓰기 전용 모드.",
                                pt = "Abre um arquivo para escrita.",
                                ru = "Открыть файл для записи."
                            },
                            name = "w"
                        },
                        {
                            description = "Open a file for append.",
                            descriptiont = {
                                de = "Öffnet eine Datei zum Anhängen von Daten.",
                                jp = "追記するためにファイルを開きます。",
                                ko = "추가 전용 모드.",
                                pt = "Abre um arquivo para acréscimo.",
                                ru = "Открыть файл для добавления."
                            },
                            name = "a"
                        },
                        {
                            description = "Do not open a file (represents a closed file.)",
                            descriptiont = {
                                de = "Öffnet die Datei nicht. Repräsentiert eine geschlossene Datei.",
                                jp = "ファイルを開きません (ファイルを閉じるという意味です)。",
                                ko = "파일을 열지 않음(파일이 닫혀 있음을 나타냄).",
                                pt = "Não abre um arquivo (representa um arquivo fechado)."
                            },
                            name = "c"
                        }
                    },
                    description = "The different modes you can open a file in.",
                    descriptiont = {
                        de = "Die verschiedenen Modi mit welchen eine Datei geöffnet werden kann.",
                        jp = "様々なモードでファイルを開くことができるようにします。",
                        ko = "파일을 열 때 사용하는 여러 가지 모드입니다.",
                        pt = "Os diferentes modos em que um File pode ser aberto.",
                        ru = "Различные режимы открытия файла."
                    },
                    minidescriptiont = {
                        de = "Die verschiedenen Modi mit welchen eine Datei geöffnet werden kann.",
                        jp = "様々なモードでファイルを開くことができるようにします。",
                        ko = "파일을 열 때 사용하는 여러 가지 모드입니다.",
                        pt = "Os diferentes modos em que um File pode ser aberto.",
                        ru = "Различные режимы открытия файла."
                    },
                    name = "FileMode"
                }
            },
            functions = {
                {
                    description = "Append data to an existing file.",
                    descriptiont = {
                        de = "Hängt ein Datum an eine bereits existierende Datei an.",
                        jp = "既存ファイルへデータを追記します。",
                        ko = "이미 존재하는 파일에 데이터를 추가합니다.",
                        pt = "Acrescentar dados a um arquivo existente."
                    },
                    minidescriptiont = {
                        de = "Hängt ein Datum an eine bereits existierende Datei an.",
                        jp = "既存ファイルへデータを追記します。",
                        ko = "이미 존재하는 파일에 데이터를 추가합니다.",
                        pt = "Acrescentar dados a um arquivo existente."
                    },
                    name = "append",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name (and path) of the file.",
                                    descriptiont = {
                                        de = "Der Name (und Pfad) der Datei.",
                                        jp = "ファイルの名称(およびパス)。",
                                        ko = "파일의 경로와 이름.",
                                        pt = "O nome (e caminho) do arquivo."
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    description = "The data that should be written to the file",
                                    descriptiont = {
                                        de = "Das Datum in Form eines String welches an die Datei angehängt werden soll.",
                                        jp = "ファイルへ追記する文字列データ。",
                                        ko = "파일에 추가할 문자열.",
                                        pt = "O string de dado a acrescentar ao arquivo."
                                    },
                                    name = "data",
                                    type = "string"
                                },
                                {
                                    default = "all",
                                    description = "How many bytes to write.",
                                    descriptiont = {
                                        de = "Wieviele Bytes geschrieben werden sollen.",
                                        jp = "書き込む量をバイト数で指定します。",
                                        ko = "쓸 총 바이트 수.",
                                        pt = "Quantidade de bytes a ser escrita."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the operation was successful, or nil if there was an error.",
                                    descriptiont = {
                                        de = "Wahr, wenn die Operation erfolgreich war. Falsch, wenn nicht.",
                                        jp = "true ならば操作は成功しており、あるいは nil ならばエラーが発生しています。",
                                        ko = "성공하면 true, 실패하면 nil.",
                                        pt = "Verdadeiro se a operação for um sucesso, ou nil se houver um erro."
                                    },
                                    name = "success",
                                    type = "boolean"
                                },
                                {
                                    description = "The error message on failure.",
                                    descriptiont = {
                                        de = "Eine Fehlernachricht, falls ein Fehler aufgetreten ist.",
                                        jp = "失敗時のエラーメッセージ。",
                                        ko = "실패시 에러 메시지.",
                                        pt = "A mensagem de erro em caso de falha."
                                    },
                                    name = "errormsg",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether love.filesystem follows symbolic links.",
                    descriptiont = {
                        jp = "love.filesystem がシンボリック・リンクを辿るかどうかを取得します。"
                    },
                    minidescriptiont = {
                        jp = "love.filesystem がシンボリック・リンクを辿るかどうかを取得します。"
                    },
                    name = "areSymlinksEnabled",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Whether love.filesystem follows symbolic links.",
                                    descriptiont = {
                                        jp = "love.filesystem がシンボリック・リンクを辿るかどうか。"
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a directory.",
                    descriptiont = {
                        de = "Erstellt einen neuen Ordner.\n\nWenn ein Pfad an die Funktion übergeben wird (z.B.: \"ordner1/ordner2\"), werden beide Ordner erstellt falls sie noch nicht existieren.",
                        jp = "再帰的にディレクトリを作成します。\n\n未だ存在しないときに、 \"a/b\" が呼ばれると \"a\" と \"a/b\" の両方が作成されます。",
                        ko = "디렉토리를 생성합니다.\n\n이 함수는 재귀적으로 디렉토리를 생성하는데, 만약 \"foo/bar\"를 만들라는 요청이 들어왔을 경우 먼저 \"foo\"를 만든 후 \"foo/bar\"를 만듭니다.\n\n만약 디렉토리가 이미 존재할 경우 만들지 않습니다.",
                        pt = "Cria um diretório recursivamente.\n\nQuando invocado com \"a/b\", cria tanto \"a\" quanto \"a/b\", se eles não existirem."
                    },
                    minidescriptiont = {
                        de = "Erstellt einen neuen Ordner.",
                        jp = "ディレクトリを作成します。",
                        ko = "디렉토리를 생성합니다.",
                        pt = "Cria um diretório."
                    },
                    name = "createDirectory",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The directory to create.",
                                    descriptiont = {
                                        de = "Der Ordner welcher erstellt werden soll.",
                                        jp = "作成するディレクトリ。",
                                        ko = "생성할 디렉토리의 이름.",
                                        pt = "O diretório a ser criado."
                                    },
                                    name = "name",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the directory was created, false if not.",
                                    descriptiont = {
                                        de = "Wahr, wenn der Ordner erstellt wurde. Falsch, wenn nicht.",
                                        jp = "true ならばディレクトリは作成され、それ以外は false です。",
                                        ko = "디렉토리가 생성되었으면 true.",
                                        pt = "Verdadeiro se o diretório for criado, senão, falso."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Check whether a file or directory exists.",
                    descriptiont = {
                        de = "Überprüft ob eine Datei oder ein Verzeichnis existiert.",
                        jp = "ファイルまたはディレクトリが存在するか確認します。",
                        ko = "파일이나 디렉토리가 존재하는지 확인합니다.",
                        pt = "Verifica se um arquivo ou diretório existe.",
                        ru = "Проверяет, существует ли такой файл или директория."
                    },
                    minidescriptiont = {
                        de = "Überprüft ob eine Datei oder ein Verzeichnis existiert.",
                        jp = "ファイルまたはディレクトリが存在するか確認します。",
                        ko = "파일이나 디렉토리가 존재하는지 확인합니다.",
                        pt = "Verifica se um arquivo ou diretório existe.",
                        ru = "Проверяет, существует ли такой файл или директория."
                    },
                    name = "exists",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The path to a potential file or directory.",
                                    descriptiont = {
                                        de = "Der Pfad der Datei welche, bzw. des Ordners welcher überprüft werden soll.",
                                        jp = "ファイルまたはディレクトリが存在する可能性のあるパス。",
                                        ko = "파일이나 디렉토리의 경로.",
                                        pt = "O caminho do possível arquivo ou diretório.",
                                        ru = "Путь к файлу или директории."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if there is a file or directory with the specified name. False otherwise.",
                                    descriptiont = {
                                        de = "Wahr wenn die Datei oder der Ordner existiert.",
                                        jp = "true ならば指定されたファイルまたはディレクトリは存在しています。それ以外は false です。",
                                        ko = "존재하면 true.",
                                        pt = "Verdadeiro se existir um arquivo ou diretório com o nome especificado, senão, falso.",
                                        ru = "True, если файл или директория с таким именем существует, иначе False."
                                    },
                                    name = "exists",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the application data directory (could be the same as getUserDirectory)",
                    descriptiont = {
                        jp = "アプリケーションのデータディレクトリを返します (getUserDirectory と同じ場合があります)",
                        ko = "앱데이터 디렉토리를 받아옵니다. (getUserDirectory와 같을 수도 있음)",
                        pt = "Retorna o diretório de dados do aplicativo (pode ser o mesmo de getUserDirectory).",
                        ru = "Возвращает директорию приложения (может быть такой же, как и getUserDirectory)."
                    },
                    minidescriptiont = {
                        jp = "アプリケーションのデータディレクトリを返します (getUserDirectory と同じ場合があります)",
                        ko = "앱데이터 디렉토리를 받아옵니다.",
                        pt = "Retorna diretório de dados do aplicativo (pode ser igual getUserDirectory).",
                        ru = "Возвращает директорию приложения."
                    },
                    name = "getAppdataDirectory",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The path of the application data directory.",
                                    descriptiont = {
                                        jp = "アプリケーションのデータディレクトリのパス。",
                                        ko = "앱데이터 디렉토리 경로.",
                                        pt = "O caminho do diretório de dados do aplicativo.",
                                        ru = "Путь к директории приложения."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns a table with the names of files and subdirectories in the specified path. The table is not sorted in any way; the order is undefined.\n\nIf the path passed to the function exists in the game and the save directory, it will list the files and directories from both places.",
                    descriptiont = {
                        jp = "指定されたパスのファイルおよびサブディレクトリの名前をテーブルで返します。テーブルに対しては一切の並べ換えを行いません。順列はバラバラです。\n\nパスとしてゲームおよびセーブ・ディレクトリとして存在するものが関数に渡された場合は、双方のファイルおよびディレクトリの場所の一覧を返します。",
                        ko = "특정 디렉토리 내에 있는 모든 파일과 하위 디렉토리를 나열한 테이블을 리턴합니다.\n\n테이블은 정렬되어 있지 않습니다.\n\n.love 압축 파일과 세이브 디렉토리 둘다 파일이 존재할 경우 두 군데에서 전부 다 가져옵니다.",
                        pt = "Retorna uma tabela com os nomes de arquivos e subdiretórios do caminho especificado. A tabela não é organizada de modo nenhum; a ordem é indefinida.\n\nSe o caminho dado à função existir nos diretórios de jogo e de escrita, serão listados arquivos e diretórios de ambos lugares."
                    },
                    minidescriptiont = {
                        jp = "ディレクトリにある全てのファイルおよびサブディレクトリを返します。",
                        ko = "특정 디렉토리 내에 있는 모든 파일과 하위 디렉토리를 나열한 테이블을 리턴합니다.",
                        pt = "Retorna todos arquivos e subdiretórios no diretório."
                    },
                    name = "getDirectoryItems",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The directory.",
                                    descriptiont = {
                                        jp = "ディレクトリ。",
                                        ko = "살펴볼 디렉토리.",
                                        pt = "O diretório."
                                    },
                                    name = "dir",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A sequence with the names of all files and subdirectories as strings.",
                                    descriptiont = {
                                        jp = "sequence は全てのファイルおよびサブディレクトリの名前を文字列として返したものです。",
                                        ko = "모든 파일과 하위 디렉토리가 있는 테이블.",
                                        pt = "Uma sequência com os nomes de todos arquivos e subdiretórios como strings."
                                    },
                                    name = "items",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the write directory name for your game. Note that this only returns the name of the folder to store your files in, not the full location.",
                    descriptiont = {
                        de = "Gibt das Schreib-Verzeichnis des Spiels zurück.\n\nHierbei wird nur der Name des Ordners, aber nicht der gesamte Pfad zurückgegeben.",
                        jp = "ゲームの書き込み先のディレクトリ名を取得します。\n\nこれはファイルの格納先の完全なパスではなく、フォルダ名のみ返されることに留意してください。",
                        ko = "여러분의 게임에서 사용하고 있는 세이브 디렉토리의 이름을 구합니다.\n\n이 함수는 해당 폴더의 이름만 리턴하지 전체 경로를 리턴하지는 않으니 주의하세요.",
                        pt = "Obtém o diretório de escrita do seu jogo. \n\nRepare que isso apenas retorna o nome da pasta para guardar seus arquivos, não a localização completa."
                    },
                    minidescriptiont = {
                        de = "Gibt das Schreib-Verzeichnis des Spiels zurück.",
                        jp = "ゲームの書き込み先のディレクトリ名を取得します。",
                        ko = "여러분의 게임에서 사용하고 있는 세이브 디렉토리의 이름을 구합니다.",
                        pt = "Obtém o diretório de escrita do seu jogo."
                    },
                    name = "getIdentity",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The identity that is used as write directory.",
                                    name = "name",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the last modification time of a file.",
                    descriptiont = {
                        jp = "ファイルの最終更新時刻を取得します。",
                        ko = "해당 파일을 마지막으로 수정한 날짜를 구합니다.",
                        pt = "Obtém a última data de modificação de um arquivo.",
                        ru = "Получает время последнего изменения файла."
                    },
                    minidescriptiont = {
                        jp = "ファイルの最終更新時刻を取得します。",
                        ko = "해당 파일을 마지막으로 수정한 날짜를 구합니다.",
                        pt = "Obtém a última data de modificação de um arquivo.",
                        ru = "Получает время последнего изменения файла."
                    },
                    name = "getLastModified",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The path and name to a file.",
                                    descriptiont = {
                                        jp = "ファイルのパスと名前。",
                                        pt = "O caminho e nome de um arquivo.",
                                        ru = "Путь и имя файла."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The last modification time in seconds since the unix epoch or nil on failure.",
                                    descriptiont = {
                                        jp = "秒表現による UNIX エポック からの最終更新時刻または nil ならば失敗です。",
                                        pt = "A hora da última modificação em segundos desde a época do unix, ou nil, se falhar.",
                                        ru = "Время изменения в секундах с начала эпохи unix. Или nil в случае неудачи."
                                    },
                                    name = "modtime",
                                    type = "number"
                                },
                                {
                                    description = "The error message on failure.",
                                    descriptiont = {
                                        jp = "失敗時のエラーメッセージ。",
                                        pt = "A mensagem de erro em caso de falha.",
                                        ru = "Сообщение об ошибке."
                                    },
                                    name = "errormsg",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the platform-specific absolute path of the directory containing a filepath.\n\nThis can be used to determine whether a file is inside the save directory or the game's source .love.",
                    descriptiont = {
                        jp = "プラットフォームに依存するファイルパスがあるディレクトリの絶対パスを取得します。\n\nこれはセーブ・ディレクトリまたはゲームのソースコードである .love ファイル内部にファイルが存在するかどうかを判定するために使用することができます。"
                    },
                    minidescriptiont = {
                        jp = "ファイルパスがあるディレクトリの絶対パスを取得します。"
                    },
                    name = "getRealDirectory",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filepath to get the directory of.",
                                    descriptiont = {
                                        jp = "ディレクトリを取得するファイルパス。"
                                    },
                                    name = "filepath",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The platform-specific full path of the directory containing the filepath.",
                                    descriptiont = {
                                        jp = "プラットフォームに依存するファイルパスがあるディレクトリのフルパス。"
                                    },
                                    name = "realdir",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the filesystem paths that will be searched when require is called.\n\nThe paths string returned by this function is a sequence of path templates separated by semicolons. The argument passed to require will be inserted in place of any question mark (\"?\") character in each template (after the dot characters in the argument passed to require are replaced by directory separators.)\n\nThe paths are relative to the game's source and save directories, as well as any paths mounted with love.filesystem.mount.",
                    descriptiont = {
                        jp = "require が呼ばれた時に検索されるファイルシステムのパスを取得します。\n\nこの関数により返されたパス文字列はセミコロンで分割された規範型パスのシーケンスです。 ''require'' の引数として渡されたものは任意の疑問符 (\"?\") の代わり各々の規範型へ挿入されます (その後に ''require'' へ渡される引数のドット文字はディレクトリの分離記号により置換されます)\n\nlove.filesystem.mount でマウントした任意のパスと同様に、ゲームのソースおよびセーブ・ディレクトリは相対的パスです。"
                    },
                    minidescriptiont = {
                        jp = "require が呼ばれた時に検索されるファイルシステムのパスを取得します。"
                    },
                    name = "getRequirePath",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The paths that the require function will check in love's filesystem.",
                                    descriptiont = {
                                        jp = "''require'' 関数で確認を行う LOVE ファイルシステムのパス。"
                                    },
                                    name = "paths",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the full path to the designated save directory. This can be useful if you want to use the standard io library (or something else) to read or write in the save directory.",
                    descriptiont = {
                        jp = "明示されたセーブ・ディレクトリのフルパスを取得します。\n\nこれはセーブ・ディレクトリの読み書きを標準 IO ライブラリ (またはその他) で\n\n行いたい場合に有用です。",
                        ko = "세이브 디렉토리의 완전한 경로를 얻어옵니다.\n\n이 함수는 표준 입출력 라이브러리 등에서 세이브 디렉토리에 접근할 때 유용하게 사용할 수 있습니다.",
                        pt = "Obtém o caminho completo do diretório de escrita designado.\n\nIsso pode ser útil se você deseja utilizar a biblioteca de io padrão (ou alguma outra coisa) para\n\nler ou escrever no diretório de escrita.",
                        ru = "Возвращает полный путь к назначенной папке сохранения.\n\nМожет быть использована, если вы захотите использовать стандартную библиотеку ввода/вывода, чтобы читать или записывать в папке сохранения."
                    },
                    minidescriptiont = {
                        jp = "明示されたセーブ・ディレクトリのフルパスを取得します。",
                        ko = "세이브 디렉토리의 완전한 경로를 얻어옵니다.",
                        pt = "Obtém o caminho completo do diretório de escrita designado.",
                        ru = "Возвращает полный путь к назначенной папке сохранения."
                    },
                    name = "getSaveDirectory",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The absolute path to the save directory.",
                                    descriptiont = {
                                        jp = "セーブ・ディレクトリの絶対パスを返します。",
                                        ko = "세이브 디렉토리의 절대 경로.",
                                        pt = "O caminho absoluto do diretório de escrita.",
                                        ru = "Абсолютный путь к папке сохранения."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the size in bytes of a file.",
                    descriptiont = {
                        jp = "ファイルの大きさをバイトで取得します。",
                        ko = "파일의 바이트 수를 구합니다.",
                        pt = "Obtém o tamanho de um arquivo em bytes."
                    },
                    minidescriptiont = {
                        jp = "ファイルの大きさをバイトで取得します。",
                        ko = "파일의 바이트 수를 구합니다.",
                        pt = "Obtém o tamanho de um arquivo em bytes."
                    },
                    name = "getSize",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The path and name to a file.",
                                    descriptiont = {
                                        jp = "ファイルのパスと名前。",
                                        ko = "파일의 이름과 경로.",
                                        pt = "O caminho e nome de um arquivo."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The size in bytes of the file, or nil on failure.",
                                    descriptiont = {
                                        jp = "ファイルの大きさをバイトで返しますが、 nil ならば失敗です。",
                                        ko = "파일의 바이트 수. 실패하면 nil.",
                                        pt = "O tamanho do arquivo em bytes, ou nil no caso de falha."
                                    },
                                    name = "size",
                                    type = "number"
                                },
                                {
                                    description = "The error message on failure.",
                                    descriptiont = {
                                        jp = "失敗時のエラーメッセージ。",
                                        ko = "실패시 발생하는 에러 메시지.",
                                        pt = "A mensagem de erro em caso de falha."
                                    },
                                    name = "errormsg",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the full path to the the .love file or directory. If the game is fused to the LÖVE executable, then the executable is returned.",
                    descriptiont = {
                        jp = ".love ファイルまたはディレクトリのフルパスを返します。 LÖVE 実行可能形式にヒューズ化されている場合は、実行可能ファイルのパスを返します。"
                    },
                    minidescriptiont = {
                        jp = ".love ファイルを有するディレクトリまたはディレクトリのフルパスを返します。"
                    },
                    name = "getSource",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The full platform-dependent path of the .love file or directory.",
                                    descriptiont = {
                                        jp = ".love ファイルまたはディレクトリに対するプラットフォーム依存のフルパス。"
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the full path to the directory containing the .love file. If the game is fused to the LÖVE executable, then the directory containing the executable is returned.\n\nIf love.filesystem.isFused is true, the path returned by this function can be passed to love.filesystem.mount, which will make the directory containing the main game readable by love.filesystem.",
                    descriptiont = {
                        jp = ".love ファイルのあるディレクトリのフルパスを返します。 Fused 型のゲームであり LOVE 実行可能形式の場合は、実行可能形式のあるディレクトリを返します。\n\nlove.filesystem.isFused が有効な場合は、この関数により返されたパスは love.filesystem.mount へ渡すことができるため、ゲーム本体のあるディレクトリ (例えば C:\\Program Files\\coolgame\\) は love.filesystem により読み取り可能になります。"
                    },
                    minidescriptiont = {
                        jp = ".love ファイルのあるディレクトリのフルパスを返します。"
                    },
                    name = "getSourceBaseDirectory",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The full platform-dependent path of the directory containing the .love file.",
                                    descriptiont = {
                                        jp = "プラットフォームに依存する.love ファイルがあるディレクトリのフルパス。"
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the path of the user's directory.",
                    descriptiont = {
                        jp = "利用者のディレクトリのパスを返します。",
                        ko = "사용자 디렉토리를 받아옵니다.",
                        pt = "Retorna o caminho do diretório do usuário",
                        ru = "Возвращает путь к директории пользователя."
                    },
                    minidescriptiont = {
                        jp = "利用者のディレクトリのパスを返します。",
                        ko = "사용자 디렉토리를 받아옵니다.",
                        pt = "Retorna o caminho do diretório do usuário",
                        ru = "Возвращает путь к директории пользователя."
                    },
                    name = "getUserDirectory",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The path of the user's directory.",
                                    descriptiont = {
                                        jp = "利用者のディレクトリのパス。",
                                        ko = "사용자 디렉토리 경로.",
                                        pt = "O caminho do diretório do usuário",
                                        ru = "Путь к директории пользователя."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current working directory.",
                    descriptiont = {
                        jp = "現在の作業ディレクトリを取得します。",
                        ko = "현재 작업 디렉토리를 받아옵니다.",
                        pt = "Obtém o diretório de trabalho atual.",
                        ru = "Получает текущую рабочую директорию."
                    },
                    minidescriptiont = {
                        jp = "現在の作業ディレクトリを取得します。",
                        ko = "현재 작업 디렉토리를 받아옵니다.",
                        pt = "Obtém o diretório de trabalho atual.",
                        ru = "Получает текущую рабочую директорию."
                    },
                    name = "getWorkingDirectory",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current working directory.",
                                    descriptiont = {
                                        jp = "現在の作業ディレクトリ。",
                                        ko = "현재 작업 디렉토리.",
                                        pt = "O diretório de trabalho atual.",
                                        ru = "Текущая рабочая директория."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Initializes love.filesystem, will be called internally, so should not be used explicitly.",
                    descriptiont = {
                        jp = "love.filesystem を初期化しますが、これはシステム内部で呼ばれるものであるため、明示的に使用しないでください。",
                        ko = "love.filesystem을 초기화합니다. 내부적으로 사용되는 함수이므로 함부로 호출하지 마세요.",
                        pt = "Inicializa o módulo love.filesystem, será chamada internamente, por isso não deve ser chamada explicitamente.",
                        ru = "Инициализирует файловую систему, вызывается внутренне, так что не надо использовать эту функцию явно."
                    },
                    minidescriptiont = {
                        jp = "love.filesystem を初期化しますが、これはシステム内部で呼ばれるものであるため、明示的に使用しないでください。",
                        ko = "love.filesystem을 초기화합니다. 내부적으로 사용되는 함수이므로 함부로 호출하지 마세요.",
                        pt = "Inicializa o módulo love.filesystem, não se chama explicitamente.",
                        ru = "Инициализирует файловую систему."
                    },
                    name = "init",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name of the application binary, typically love.",
                                    name = "appname",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Check whether something is a directory.",
                    descriptiont = {
                        de = "Gibt zurück ob etwas ein Ordner ist.",
                        jp = "対象がディレクトリかどうか確認します。",
                        ko = "무언가가 디렉토리인지 확인합니다.",
                        pt = "Verifica se algo é um diretório.",
                        ru = "Проверяет, является ли объект директорией."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück ob etwas ein Ordner ist.",
                        jp = "対象がディレクトリかどうか確認します。",
                        ko = "무언가가 디렉토리인지 확인합니다.",
                        pt = "Verifica se algo é um diretório.",
                        ru = "Проверяет, является ли объект директорией."
                    },
                    name = "isDirectory",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The path to a potential directory.",
                                    descriptiont = {
                                        de = "Der Pfad zu einem potenziellen Ordner.",
                                        jp = "ディレクトリの可能性のあるパス。",
                                        pt = "O caminho de um possível diretório.",
                                        ru = "Путь."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if there is a directory with the specified name. False otherwise.",
                                    descriptiont = {
                                        de = "Wahr wenn ein Ordner mit dem angegebenen Namen existiert. Falsch, wenn nicht.",
                                        jp = "true ならば指定された名前はディレクトリであり、それ以外は false です。",
                                        pt = "Verdadeiro se houver um diretório com o nome especificado. Senão, falso.",
                                        ru = "True, если это директория, иначе False."
                                    },
                                    name = "isDir",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Check whether something is a file.",
                    descriptiont = {
                        de = "Gibt zurück ob etwas eine Datei ist.",
                        jp = "対象がファイルかどうか確認します。",
                        ko = "무언가가 파일인지 확인합니다.",
                        pt = "Verifica se algo é um arquivo.",
                        ru = "Проверяет, является ли объект файлом."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück ob etwas eine Datei ist.",
                        jp = "対象がファイルかどうか確認します。",
                        ko = "무언가가 파일인지 확인합니다.",
                        pt = "Verifica se algo é um arquivo.",
                        ru = "Проверяет, является ли объект файлом."
                    },
                    name = "isFile",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The path to a potential file.",
                                    descriptiont = {
                                        de = "Der Pfad zu einer potenziellen Datei.",
                                        jp = "ファイルの可能性のあるパス。",
                                        ko = "파일의 경로.",
                                        pt = "O caminho de um possível arquivo.",
                                        ru = "Путь."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if there is a file with the specified name. False otherwise.",
                                    descriptiont = {
                                        de = "Wahr, wenn eine Datei mit dem angegebenen Namen existiert. Falsch, wenn nicht.",
                                        jp = "true ならば指定された名前はファイルであり、それ以外は false です。",
                                        ko = "파일이면 true.",
                                        pt = "Verdadeiro se houver um arquivo com o nome especificado. Senão, falso.",
                                        ru = "True, если это файл, иначе False."
                                    },
                                    name = "isFile",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether the game is in fused mode or not.\n\nIf a game is in fused mode, its save directory will be directly in the Appdata directory instead of Appdata/LOVE/. The game will also be able to load C Lua dynamic libraries which are located in the save directory.\n\nA game is in fused mode if the source .love has been fused to the executable (see Game Distribution), or if \"--fused\" has been given as a command-line argument when starting the game.",
                    descriptiont = {
                        jp = "ゲームがヒューズ・モードであるかどうか取得します。\n\nゲームがヒューズ・モードであるならば、セーブ・ディレクトリは Appdata/LOVE/ ではなく Appdata ディレクトリへ直接的に配置されます。さらに、ゲームはセーブ・ディレクトリに C言語で記述された Lua の動的ライブラリを配置して読み込むこともできます。\n\n.love ソースが実行可能形式として作成された場合はヒューズ・モードになり(ゲームの配布を参照)、あるいはゲーム開始時にコマンドライン引数として \"--fused\" が与えられた場合はゲームはヒューズ・モードになります。",
                        ko = "게임이 퓨즈 모드로 설정되어 있는지 조사합니다.\n\n퓨즈 모드가 설정되어 있을 경우 세이브 디렉토리에 접근할 때 %appdata%\\LOVE\\ 대신 %appdata%를 사용합니다. 이를 통해 세이브 디렉토리에 저장되어 있는 C나 루아 라이브러리를 읽을 수 있습니다.\n\n퓨즈 모드는 .love를 퓨즈 모드로 설정해두거나(Game Distribution 참조) 또는 게임 실행시 명령줄에 \"--fused\"을 붙임으로서 사용할 수 있습니다.",
                        pt = "Descobre se um jogo está em modo fundido ou não.\n\nSe um jogo estiver em modo fundido, seu diretório de escrita será diretamente no diretório Appdata (Dados de Aplicativo), em vez de em Appdata/LOVE/. O jogo também será capaz de carregar bibliotecas dinâmicas C Lua localizadas no diretório de escrita.\n\nUm jogo está em modo fundido se a fonte .love tiver sido fundida com o executável (veja Distribuição de Jogos), ou se \"--fused\" tiver sido usado como argumento de linha de comando ao iniciar o jogo."
                    },
                    minidescriptiont = {
                        jp = "ゲームがヒューズ・モードであるかどうか取得します。",
                        ko = "게임이 퓨즈 모드로 설정되어 있는지 조사합니다.",
                        pt = "Descobre se um jogo está em modo fundido ou não."
                    },
                    name = "isFused",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the game is in fused mode, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばゲームは fused モードであり、それ以外は false です。",
                                        ko = "퓨즈 모드라면 true.",
                                        pt = "Verdadeiro se o jogo estiver em modo fundido, senão, falso."
                                    },
                                    name = "fused",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether a filepath is actually a symbolic link.\n\nIf symbolic links are not enabled (via love.filesystem.setSymlinksEnabled), this function will always return false.",
                    descriptiont = {
                        jp = "ファイルパスが本当にシンボリック・リンクであるかどうかを取得します。\n\nシンボリック・リンクが有効ではない場合は (love.filesystem.setSymlinksEnabled によって)、この関数は常に false を返します。"
                    },
                    minidescriptiont = {
                        jp = "ファイルパスが本当にシンボリック・リンクであるかどうかを取得します。"
                    },
                    name = "isSymlink",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The file or directory path to check.",
                                    descriptiont = {
                                        jp = "確認を行うファイルまたはディレクトリ。"
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the path is a symbolic link, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばパスはシンボリック・リンクであり、それ以外は false です。"
                                    },
                                    name = "symlink",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Iterate over the lines in a file.",
                    descriptiont = {
                        jp = "ファイルの最終行までイテレート(反復)します。",
                        ko = "텍스트 파일을 한 줄씩 읽는 반복자를 리턴합니다.",
                        pt = "Itera pelas linhas de um arquivo.",
                        ru = "Перебор строк в файле."
                    },
                    minidescriptiont = {
                        jp = "ファイルの最終行までイテレート(反復)します。",
                        ko = "텍스트 파일을 한 줄씩 읽는 반복자를 리턴합니다.",
                        pt = "Itera pelas linhas de um arquivo.",
                        ru = "Перебор строк в файле."
                    },
                    name = "lines",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name (and path) of the file.",
                                    descriptiont = {
                                        jp = "ファイルの名前 (およびパス)。",
                                        ko = "파일의 이름과 경로.",
                                        pt = "O nome (e caminho) do arquivo",
                                        ru = "Имя (и путь) файла."
                                    },
                                    name = "name",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A function that iterates over all the lines in the file.",
                                    descriptiont = {
                                        jp = "ファイルの最終行まで全てイテレートを行う関数を返します。",
                                        ko = "텍스트 파일을 한 줄씩 읽는 반복자.",
                                        pt = "Uma função que itera por todas as linhas do arquivo.",
                                        ru = "Функция, которая перебирает все строки в файле."
                                    },
                                    name = "iterator",
                                    type = "function"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Loads a Lua file (but does not run it).",
                    descriptiont = {
                        jp = "lua ファイルを読み込みます (が実行はしません)。",
                        ko = "루아 파일을 불러오기만 합니다. 불러옴과 동시에 실행하지는 않습니다.",
                        pt = "Carrega um arquivo lua (mas não executa). ",
                        ru = "Загружает файл (но не запускает его)."
                    },
                    minidescriptiont = {
                        jp = "lua ファイルを読み込みます (が実行はしません)。",
                        ko = "루아 파일을 불러오기만 합니다. 불러옴과 동시에 실행하지는 않습니다.",
                        pt = "Carrega um arquivo lua (mas não executa). ",
                        ru = "Загружает файл (но не запускает его)."
                    },
                    name = "load",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name (and path) of the file.",
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    default = "nil",
                                    description = "The error message if file could not be opened.",
                                    name = "errormsg",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The loaded chunk.",
                                    name = "chunk",
                                    type = "function"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Mounts a zip file or folder in the game's save directory for reading.",
                    descriptiont = {
                        jp = "読み取るために zip ファイルまたはフォルダをゲームのセーブ・ディレクトリへマウント(装着)します。\n\nゲームが fused モードで動作している場合でも love.filesystem.getSourceBaseDirectory (日本語) でのマウントは同じく可能です。",
                        ko = "zip 파일을 마운트합니다.",
                        pt = "Monta um arquivo zip ou uma pasta no diretório de escrita do jogo para leitura."
                    },
                    minidescriptiont = {
                        jp = "読み取るために zip ファイルまたはフォルダをゲームのセーブ・ディレクトリへマウント(装着)します。",
                        ko = "zip 파일을 마운트합니다.",
                        pt = "Monta um arquivo zip ou uma pasta no diretório de escrita do jogo para leitura."
                    },
                    name = "mount",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The folder or zip file in the game's save directory to mount.",
                                    descriptiont = {
                                        jp = "ゲームのセーブ・ディレクトリへマウントする zip ファイルまたはフォルダ。",
                                        ko = "세이브 디렉토리 내의 마운트할 zip 파일.",
                                        pt = "A pasta ou arquivo zip no diretório de escrita do jogo, para ser montado(a)."
                                    },
                                    name = "archive",
                                    type = "string"
                                },
                                {
                                    description = "The new path the archive will be mounted to.",
                                    descriptiont = {
                                        jp = "アーカイブのマウント先の新規パス。",
                                        ko = "마운트될 지점.",
                                        pt = "O novo caminho no qual o arquivo será montado."
                                    },
                                    name = "mountpoint",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the archive was successfully mounted, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばアーカイブのマウントは成功であり、それ以外は false です。",
                                        ko = "성공하면 true.",
                                        pt = "Verdadeiro se o arquivo tiver sido montado com sucesso, senão, falso."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The folder or zip file in the game's save directory to mount.",
                                    name = "archive",
                                    type = "string"
                                },
                                {
                                    description = "The new path the archive will be mounted to.",
                                    name = "mountpoint",
                                    type = "string"
                                },
                                {
                                    default = "false",
                                    description = "Whether the archive will be searched when reading a filepath before or after already-mounted archives. This includes the game's source and save directories.",
                                    name = "appendToPath",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the archive was successfully mounted, false otherwise.",
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new File object. It needs to be opened before it can be accessed.",
                    descriptiont = {
                        jp = "File オブジェクトを新規作成します。\n\nアクセスを可能にする前に開いておく必要があります。",
                        ko = "새 파일 객체를 생성합니다. \n\n파일에 대한 접근 이전에 먼저 파일을 열어야 합니다.",
                        pt = "Cria um novo objeto Arquivo. \n\nÉ necessário que seja aberto antes que possa ser acessado.",
                        ru = "Создает новый объект File.\n\nОн должен быть открыт, прежде чем производить с ним какие-либо операции."
                    },
                    minidescriptiont = {
                        jp = "File オブジェクトを新規作成します。",
                        ko = "새 파일 객체를 생성합니다. ",
                        pt = "Cria um novo objeto Arquivo.",
                        ru = "Создает новый объект File."
                    },
                    name = "newFile",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filename of the file to read.",
                                    descriptiont = {
                                        jp = "File のファイル名。",
                                        ko = "파일 이름.",
                                        pt = "O nome do arquivo."
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    default = "\"c\"",
                                    description = "The mode to open the file in.",
                                    descriptiont = {
                                        jp = "どのモードでファイルを開くか指定します。",
                                        ko = "파일 모드.",
                                        pt = "O modo no qual se deve abrir o arquivo."
                                    },
                                    name = "mode",
                                    type = "FileMode"
                                }
                            },
                            descriptiont = {
                                jp = "File オブジェクトを作成して読み込み、書き込み、また追記するためのに開きます。",
                                ko = "읽기, 쓰기, 추가같은 여러가지 모드로 파일을 엽니다.",
                                pt = "Criar um objeto Arquivo e o abre para leitura, escrita ou acréscimo."
                            },
                            returns = {
                                {
                                    description = "The new File object, or nil if an error occurred.",
                                    descriptiont = {
                                        jp = "新規 File オブジェクト、または nil ならばエラーが発生しています。",
                                        ko = "새 파일 객체.",
                                        pt = "O novo objeto Arquivo, ou nil, se ocorrer um erro."
                                    },
                                    name = "file",
                                    type = "File"
                                },
                                {
                                    description = "The error string if an error occurred.",
                                    descriptiont = {
                                        jp = "エラー発生時のエラー文字列。",
                                        ko = "에러가 발생하였을 경우 메시지.",
                                        pt = "O string de erro, caso tenha ocorrido um erro."
                                    },
                                    name = "errorstr",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new FileData object.",
                    descriptiont = {
                        de = "Erstellt ein neues FileData-Objekt.",
                        jp = "FileData オブジェクトを新規作成します。",
                        ko = "새 FileData 객체를 생성합니다.",
                        pt = "Cria um novo objeto DadoDeArquivo.",
                        ru = "Создает объект FileData."
                    },
                    minidescriptiont = {
                        de = "Erstellt ein neues FileData-Objekt.",
                        jp = "FileData オブジェクトを新規作成します。",
                        ko = "새 FileData 객체를 생성합니다.",
                        pt = "Cria um novo objeto DadoDeArquivo.",
                        ru = "Создает объект FileData."
                    },
                    name = "newFileData",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The contents of the file.",
                                    descriptiont = {
                                        de = "Der Inhalt der Datei.",
                                        jp = "ファイルの内容。",
                                        ko = "파일의 콘텐츠.",
                                        pt = "O conteúdo do arquivo.",
                                        ru = "Содержимое файла."
                                    },
                                    name = "contents",
                                    type = "string"
                                },
                                {
                                    description = "The name of the file.",
                                    descriptiont = {
                                        de = "Der Name der Datei.",
                                        jp = "ファイル名。",
                                        ko = "파일 이름.",
                                        pt = "O nome do arquivo.",
                                        ru = "Имя файла."
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    default = "\"file\"",
                                    description = "The method to use when decoding the contents.",
                                    descriptiont = {
                                        de = "Die Methode, welche zum Dekodieren des Inhalts benutzt werden soll.",
                                        jp = "内容を復号化する時に使用する方法。",
                                        ko = "파일을 디코딩할 때 사용.",
                                        pt = "O método que dever ser usado para decodificar o conteúdo.",
                                        ru = "Метод декодирования."
                                    },
                                    name = "decoder",
                                    type = "FileDecoder"
                                }
                            },
                            returns = {
                                {
                                    description = "Your new FileData.",
                                    descriptiont = {
                                        de = "Das neue FileData-Objekt.",
                                        jp = "新規 FileData を返します。",
                                        ko = "새 FileData.",
                                        pt = "Seu novo DadoDeArquivo.",
                                        ru = "Новый объект FileData."
                                    },
                                    name = "data",
                                    type = "FileData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Path to the file.",
                                    descriptiont = {
                                        de = "Der Pfad zur Datei.",
                                        jp = "ファイルのパス。",
                                        ko = "파일 경로.",
                                        pt = "Caminho do arquivo."
                                    },
                                    name = "filepath",
                                    type = "string"
                                }
                            },
                            description = "Creates a new FileData from a file on the storage device.",
                            descriptiont = {
                                de = "Erstellt ein neues FileData-Objekt von einer Datei auf der Festplatte.",
                                jp = "記憶装置にあるファイルから FileData を新規作成します。",
                                ko = "하드디스크의 파일로부터 FileData 생성.",
                                pt = "Cria um novo DadoDeArquivo a partir de um arquivo no disco rígido."
                            },
                            returns = {
                                {
                                    description = "The new FileData, or nil if an error occurred.",
                                    descriptiont = {
                                        de = "Das neue FileData-Objekt oder nil, wenn ein Fehler aufgetreten ist.",
                                        jp = "新規 FileData を返します。あるいは nil ならばエラーが発生しています。",
                                        ko = "새 FileData.",
                                        pt = "O novo DadoDeArquivo, ou nil, se tiver ocorrido um erro."
                                    },
                                    name = "data",
                                    type = "FileData"
                                },
                                {
                                    description = "The error string, if an error occurred.",
                                    descriptiont = {
                                        de = "Ein String, welcher die Fehlernachricht beinhaltet, falls ein Fehler aufgetreten ist.",
                                        jp = "エラー発生したときは、エラー文字列。",
                                        ko = "문제가 발생했을 경우 에러 메시지.",
                                        pt = "O string de erro, caso tenha ocorrido um erro."
                                    },
                                    name = "err",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Read the contents of a file.",
                    descriptiont = {
                        jp = "ファイルの内容を読み込みます。",
                        ko = "파일을 읽습니다.",
                        pt = "Ler o conteúdo de um arquivo",
                        ru = "Считывает содержимое файла."
                    },
                    minidescriptiont = {
                        jp = "ファイルの内容を読み込みます。",
                        ko = "파일을 읽습니다.",
                        pt = "Ler o conteúdo de um arquivo",
                        ru = "Считывает содержимое файла."
                    },
                    name = "read",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name (and path) of the file.",
                                    descriptiont = {
                                        ko = "파일의 경로와 이름.",
                                        pt = "O nome (e caminho) do arquivo",
                                        ru = "Имя (и путь)Файла."
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    default = "all",
                                    description = "How many bytes to read.",
                                    descriptiont = {
                                        ko = "읽을 바이트 수.",
                                        pt = "Quantidade de bytes a ler",
                                        ru = "Какое количество байт считать."
                                    },
                                    name = "bytes",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The file contents.",
                                    descriptiont = {
                                        ko = "읽힌 문자열.",
                                        pt = "O conteúdo do arquivo",
                                        ru = "Содержимое файла."
                                    },
                                    name = "contents",
                                    type = "string"
                                },
                                {
                                    description = "How many bytes have been read.",
                                    descriptiont = {
                                        ko = "읽힌 바이트 수.",
                                        pt = "Quantidade de bytes lidos",
                                        ru = "Сколько байт было прочитано на самом деле."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Removes a file or directory.",
                    descriptiont = {
                        jp = "ファイルまたは空のディレクトリを削除します。",
                        ko = "파일이나 디렉토리를 제거합니다.",
                        pt = "Remove um diretório vazio ou arquivo.",
                        ru = "Удаляет файл или директорию."
                    },
                    minidescriptiont = {
                        jp = "ファイルを削除します (またはディレクトリ)。",
                        ko = "파일이나 디렉토리를 제거합니다.",
                        pt = "Remove um arquivo (ou diretório).",
                        ru = "Удаляет файл или директорию."
                    },
                    name = "remove",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The file or directory to remove.",
                                    descriptiont = {
                                        jp = "削除したいファイルまたはディレクトリ。",
                                        ko = "제거할 파일이나 디렉토리.",
                                        pt = "O arquivo ou diretório que será removido.",
                                        ru = "Файл или директория для удаления."
                                    },
                                    name = "name",
                                    type = "string"
                                }
                            },
                            descriptiont = {
                                ko = "=== Synopsis ===\n\n&lt;source lang=\"lua\"&gt;\n\nok = love.filesystem.remove( name )\n\n&lt;/source&gt;\n\n디렉토리를 삭제할 때 내부에 파일이 들어가 있으면 삭제에 실패하니 디렉토리를 삭제하기에 앞서 내부를 전부 비워주세요.",
                                pt = "O diretório deve estar vazio antes da remoção, senão a função vai falhar. Simplesmente remova todos arquivos e pastas do diretório primeiro."
                            },
                            returns = {
                                {
                                    description = "True if the file/directory was removed, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばファイル、ディレクトリは削除されており、それ以外は false です。",
                                        ko = "삭제에 성공하면 true.",
                                        pt = "Verdadeiro se o arquivo/diretório tiver sido removido, senão, falso.",
                                        ru = "True, если объект был удален, иначе false."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the write directory for your game. Note that you can only set the name of the folder to store your files in, not the location.",
                    descriptiont = {
                        de = "Bestimmt das Schreib-Verzeichnis für das jeweilige Spiel.\n\nZu Beachten ist hierbei, dass lediglich der Name des Ordners bestimmt wird, nicht aber der Ort an dem die Dateien gespeichert werden.",
                        jp = "ゲームの書き込み先ディレクトリを設定します。ファイルの格納先の場所ではなく、フォルダ名のみ設定できることに留意してください。",
                        ko = "여러분의 게임에서 사용할 세이브 디렉토리의 이름을 정합니다. \n\n이 함수는 해당 폴더의 이름만 설정하며 전체 경로를 설정할 수는 않으니 주의하세요.",
                        pt = "Configura o diretório de escrita para seu jogo. \n\nNote que é possível somente configurar o nome da pasta que armazenará os arquivos, não a sua localização.",
                        ru = "Устанавливает директорию сохранения для вашей игры.\n\nУчтите, что вы можете задать только имя папки для сохранения, а не путь."
                    },
                    minidescriptiont = {
                        de = "Bestimmt das Schreib-Verzeichnis für das jeweilige Spiel.",
                        jp = "ゲームの書き込み先ディレクトリを設定します。",
                        ko = "여러분의 게임에서 사용할 세이브 디렉토리의 이름을 정합니다.",
                        pt = "Configura o diretório de escrita para seu jogo.",
                        ru = "Устанавливает директорию сохранения для вашей игры."
                    },
                    name = "setIdentity",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new identity that will be used as write directory.",
                                    descriptiont = {
                                        ko = "세이브 디렉토리의 이름.",
                                        pt = "A nova identidade que irá ser usada como diretório de escrita."
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    default = "false",
                                    description = "Whether the identity directory will be searched when reading a filepath before or after the game's source directory and any currently mounted archives.",
                                    descriptiont = {
                                        ko = ".love 압축 파일 또는 그 외 love.filesystem.mount로 마운트된 저장소의 앞이나 뒤에 파일 경로를 읽을 때 아카이브가 검색되어야 하면 true.",
                                        pt = "Se o diretório identidade será buscado ao ler um caminho de arquivo antes ou depois do diretório fonte do jogo e de quaisquer arquivos atualmente montados com love.filesystem."
                                    },
                                    name = "appendToPath",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the filesystem paths that will be searched when require is called.\n\nThe paths string given to this function is a sequence of path templates separated by semicolons. The argument passed to require will be inserted in place of any question mark (\"?\") character in each template (after the dot characters in the argument passed to require are replaced by directory separators.)\n\nThe paths are relative to the game's source and save directories, as well as any paths mounted with love.filesystem.mount.",
                    descriptiont = {
                        jp = "require が呼ばれた時に検索されるファイルシステムのパスを設定します。\n\nこの関数により与えられたパス文字列はセミコロンで分割された規範型パスのシーケンスです。 ''require'' の引数として渡されたものは任意の疑問符 (\"?\") の代わり各々の規範型へ挿入されます (その後に ''require'' へ渡される引数のドット文字はディレクトリの分離記号により置換されます)\n\nlove.filesystem.mount でマウントした任意のパスと同様に、ゲームのソースおよびセーブ・ディレクトリは相対的パスです。"
                    },
                    minidescriptiont = {
                        jp = "require が呼ばれた時に検索されるファイルシステムのパスを設定します。"
                    },
                    name = "setRequirePath",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The paths that the require function will check in love's filesystem.",
                                    descriptiont = {
                                        jp = "''require'' 関数で確認を行う LOVE ファイルシステムのパス。"
                                    },
                                    name = "paths",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the source of the game, where the code is present. This function can only be called once, and is normally automatically done by LÖVE.",
                    descriptiont = {
                        jp = "ゲームのソースとして、どこにコードが存在するのかを設定します。この関数は一度だけ呼び出すことができますが、通常は LÖVE により自動的に設定完了します。 LÖVE の内部処理で使用されます。",
                        ko = "소스 코드가 있는 위치를 설정합니다. 이 함수는 LÖVE에 의해 자동적으로 호출되니 건들지 마세요.",
                        pt = "Configura a fonte do jogo, onde o código está. Essa função só pode ser chamada uma única vez, e o normal é que isso seja feito automaticamente pelo LÖVE.",
                        ru = "Устанавливает источник для игры, в которой присутствует код. Вызывается единожды и автоматически."
                    },
                    minidescriptiont = {
                        jp = "ゲームのソースとして、どこにコードが存在するのかを設定します。",
                        ko = "소스 코드가 있는 위치를 설정합니다.",
                        pt = "Configura a fonte do jogo, onde o código está.",
                        ru = "Устанавливает источник для игры, в которой присутствует код."
                    },
                    name = "setSource",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Absolute path to the game's source folder.",
                                    descriptiont = {
                                        jp = "ゲームのソース・フォルダの絶対パス。",
                                        ko = "소스 코드가 있는 위치의 절대 경로.",
                                        pt = "Caminho absoluto da pasta fonte do jogo."
                                    },
                                    name = "path",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets whether love.filesystem follows symbolic links. It is enabled by default in version 0.10.0 and newer, and disabled by default in 0.9.2.",
                    descriptiont = {
                        jp = "love.filesystem がシンボリック・リンクを辿るように設定します。 version 0.10.0 以降において標準では有効であり、 0.9.2 において標準では無効です。"
                    },
                    minidescriptiont = {
                        jp = "love.filesystem がシンボリック・リンクを辿るように設定します。"
                    },
                    name = "setSymlinksEnabled",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Whether love.filesystem should follow symbolic links.",
                                    descriptiont = {
                                        jp = "love.filesystem がシンボリック・リンクを辿るべきであるかどうか。"
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Unmounts a zip file or folder previously mounted for reading with love.filesystem.mount.",
                    descriptiont = {
                        jp = "以前に love.filesystem.mount で読み取るためにマウントした zip ファイルまたはフォルダをアンマウント(脱着)します。",
                        ko = "love.filesystem.mount로 마운트된 zip 파일을 언마운트 합니다.",
                        pt = "Desmonta um arquivo zip ou pasta anteriormente montados para leitura com love.filesystem.mount."
                    },
                    minidescriptiont = {
                        jp = "以前に love.filesystem.mount で読み取るためにマウントした zip ファイルまたはフォルダをアンマウント(脱着)します。",
                        ko = "love.filesystem.mount로 마운트된 zip 파일을 언마운트 합니다.",
                        pt = "Desmonta arquivo zip ou pasta montada com love.filesystem.mount."
                    },
                    name = "unmount",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The folder or zip file in the game's save directory which is currently mounted.",
                                    descriptiont = {
                                        jp = "現在、ゲームのセーブ・ディレクトリへマウントしている zip ファイルまたはフォルダ。",
                                        pt = "A pasta ou arquivo zip no diretório de escrita do jogo, atualmente montado(a)."
                                    },
                                    name = "archive",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the archive was successfully unmounted, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばアーカイブのアンマウントは成功であり、それ以外は false です。",
                                        pt = "Verdadeiro se o arquivo tiver sido desmontado com sucesso, senão, falso."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Write data to a file.\n\nIf you are getting the error message \"Could not set write directory\", try setting the save directory. This is done either with love.filesystem.setIdentity or by setting the identity field in love.conf.",
                    descriptiont = {
                        de = "Schreibt Daten in eine Datei im Speicherordner. Wenn die Datei bereits existiert, wird sie komplett mit dem neuen Inhalt überschrieben.",
                        jp = "セーブディレクトリにあるファイルへデータを書き込みます。既にファイルが存在するときは、新しい内容へ完全に置き換えます。",
                        ko = "세이브 디렉토리에 파일을 씁니다. 파일이 이미 존재한다면 강제로 덮어씁니다.",
                        pt = "Escreve dados em um arquivo no diretório de escrita. Se o arquivo já existia, será totalmente substituído pelo conteúdo novo.",
                        ru = "Записывает данные в файл."
                    },
                    minidescriptiont = {
                        de = "Schreibt Daten in eine Datei.",
                        jp = "ファイルへデータを書き込みます。",
                        ko = "세이브 디렉토리에 파일을 씁니다.",
                        pt = "Escrever dados num arquivo.",
                        ru = "Записывает данные в файл."
                    },
                    name = "write",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name (and path) of the file.",
                                    descriptiont = {
                                        jp = "ファイル(およびパス)の名前。"
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    description = "The string data to write to the file.",
                                    descriptiont = {
                                        jp = "ファイルへ書き込む文字列データ。"
                                    },
                                    name = "data",
                                    type = "string"
                                },
                                {
                                    default = "all",
                                    description = "How many bytes to write.",
                                    descriptiont = {
                                        jp = "書き込む量をバイト数で指定します。"
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "If the operation was successful.",
                                    descriptiont = {
                                        jp = "操作が成功したかどうか。"
                                    },
                                    name = "success",
                                    type = "boolean"
                                },
                                {
                                    description = "Error message if operation was unsuccessful.",
                                    descriptiont = {
                                        jp = "操作が失敗した場合はエラーメッセージ。"
                                    },
                                    name = "message",
                                    type = "string"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The name (and path) of the file.",
                                    descriptiont = {
                                        jp = "ファイル(およびパス)の名前。"
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    description = "The Data object to write to the file.",
                                    descriptiont = {
                                        jp = "ファイルへ書き込む Data オブジェクト。"
                                    },
                                    name = "data",
                                    type = "Data"
                                },
                                {
                                    default = "all",
                                    description = "How many bytes to write.",
                                    descriptiont = {
                                        jp = "書き込む量をバイト数で指定します。"
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "If the operation was successful.",
                                    descriptiont = {
                                        jp = "操作が成功したかどうか。"
                                    },
                                    name = "success",
                                    type = "boolean"
                                },
                                {
                                    description = "Error message if operation was unsuccessful.",
                                    descriptiont = {
                                        jp = "操作が失敗した場合はエラーメッセージ。"
                                    },
                                    name = "message",
                                    type = "string"
                                }
                            }
                        }
                    }
                }
            },
            name = "filesystem",
            types = {
                {
                    constructors = {
                        "newFile"
                    },
                    description = "Represents a file on the filesystem.",
                    descriptiont = {
                        de = "Repräsentiert eine Datei im Dateisystem.",
                        ru = "Представляет файл в файловой системе. "
                    },
                    functions = {
                        {
                            description = "Closes a file.",
                            descriptiont = {
                                de = "Schließt eine Datei.",
                                jp = "ファイルを閉じます。",
                                ko = "파일을 닫습니다.",
                                pt = "Fecha um arquivo",
                                ru = "Закрывает File."
                            },
                            minidescriptiont = {
                                de = "Schließt eine Datei.",
                                jp = "ファイルを閉じます。",
                                ko = "파일을 닫습니다.",
                                pt = "Fecha um arquivo",
                                ru = "Закрывает File."
                            },
                            name = "close",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether closing was successful.",
                                            descriptiont = {
                                                de = "Gibt zurück, ob die Datei erfolgreich geschlossen wurde.",
                                                jp = "ファイルを閉じることに成功したかどうか。",
                                                ko = "성공적으로 닫았을 경우 true.",
                                                pt = "Se o fechamento teve sucesso ou não.",
                                                ru = "Если закрытие было успешным."
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Flushes any buffered written data in the file to the disk.",
                            descriptiont = {
                                jp = "バッファへ書き込まれて蓄積された全てのデータをディスクのファイルへ追い出します。",
                                ko = "버퍼를 완전히 비웁니다.",
                                pt = "Descarrega qualquer dado escrito no buffer para o disco.",
                                ru = "Записывает любые данные из буфере обена в файл на жостком диске."
                            },
                            minidescriptiont = {
                                jp = "バッファへ書き込まれて蓄積された全てのデータをディスクのファイルへ追い出します。",
                                ko = "버퍼를 완전히 비웁니다.",
                                pt = "Descarrega qualquer dado escrito no buffer para o disco.",
                                ru = "Записывает любые данные из буфере обена в файл на жостком диске."
                            },
                            name = "flush",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether the file successfully flushed any buffered data to the disk.",
                                            descriptiont = {
                                                jp = "バッファに蓄積された全てのデータはディスクにあるファイルへ追い出すことに成功したかどうか。",
                                                ko = "성공적으로 비웠으면 true.",
                                                pt = "Se o arquivo conseguiu descarregar dados do buffer para o disco ou não.",
                                                ru = "Если файл успешно записал любые данные из буфера на жесткий диск."
                                            },
                                            name = "success",
                                            type = "boolean"
                                        },
                                        {
                                            description = "The error string, if an error occurred and the file could not be flushed.",
                                            descriptiont = {
                                                jp = "ファイルへの追い出しができなかったりエラーが発生した場合は、エラー文字列を返します。",
                                                ko = "에러 메시지.",
                                                pt = "O string de erro, se aconteceu algum erro e o arquivo não pôde ser descarregado.",
                                                ru = "Строка ошибки, если произошла ошибка, и файл не может быть записан."
                                            },
                                            name = "err",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the buffer mode of a file.",
                            descriptiont = {
                                de = "Gibt den Buffer-Modus einer Datei zurück.",
                                jp = "ファイルのバッファモードを取得します。",
                                ko = "버퍼링 모드를 얻어옵니다.",
                                pt = "Obtém o modo de buffer de um arquivo.",
                                ru = "Получает режим буфера у файла."
                            },
                            minidescriptiont = {
                                de = "Gibt den Buffer-Modus einer Datei zurück.",
                                jp = "ファイルのバッファモードを取得します。",
                                ko = "버퍼링 모드를 얻어옵니다.",
                                pt = "Obtém o modo de buffer de um arquivo.",
                                ru = "Получает режим буфера у файла."
                            },
                            name = "getBuffer",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The current buffer mode of the file.",
                                            descriptiont = {
                                                de = "Der aktuelle Buffer-Modus einer Datei.",
                                                jp = "ファイルで使用している現在のバッファモード。",
                                                ko = "현재 버퍼링 모드.",
                                                pt = "O modo de buffer atual do arquivo."
                                            },
                                            name = "mode",
                                            type = "BufferMode"
                                        },
                                        {
                                            description = "The maximum size in bytes of the file's buffer.",
                                            descriptiont = {
                                                de = "Die maximale Größe des Buffers in Bytes.",
                                                jp = "ファイルで使用している最大バッファ容量をバイト単位で返します。",
                                                ko = "버퍼 크기.",
                                                pt = "O tamanho máximo em bytes do buffer do arquivo."
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the filename that the File object was created with. If the file object originated from the love.filedropped callback, the filename will be the full platform-dependent file path.",
                            descriptiont = {
                                jp = "File オブジェクトと共に作成されたファイル名を取得します。 File オブジェクトが love.filedropped コールバックを由来とする場合は、ファイル名は完全にプラットフォームに依存するファイルパスです。"
                            },
                            minidescriptiont = {
                                jp = "File オブジェクトと共に作成されたファイル名を取得します。"
                            },
                            name = "getFilename",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The filename of the File.",
                                            descriptiont = {
                                                jp = "File のファイル名"
                                            },
                                            name = "filename",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the FileMode the file has been opened with.",
                            descriptiont = {
                                de = "Gibt den Modus zurück mit welchem die Datei geöffnet wurde.",
                                jp = "どの FileMode でファイルが開かれているか取得します。",
                                ko = "파일 모드를 얻어옵니다.",
                                pt = "Obtém o FileMode com o qual o arquivo foi aberto.",
                                ru = "Получает FileMode (Русский) в котором был открыт файл."
                            },
                            minidescriptiont = {
                                de = "Gibt den Modus zurück mit welchem die Datei geöffnet wurde.",
                                jp = "どの FileMode でファイルが開かれているか取得します。",
                                ko = "파일 모드를 얻어옵니다.",
                                pt = "Obtém o FileMode com o qual o arquivo foi aberto.",
                                ru = "Получает FileMode в котором был открыт файл."
                            },
                            name = "getMode",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The mode this file has been opened with.",
                                            descriptiont = {
                                                de = "Der Modus mit welchem die Datei geöffnet wurde.",
                                                jp = "このファイルはどのモードで開かれているかどうか。",
                                                ko = "파일 모드.",
                                                pt = "O modo com qual o arquivo foi aberto.",
                                                ru = "Режим в которм открыт файл"
                                            },
                                            name = "mode",
                                            type = "FileMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the file size.",
                            descriptiont = {
                                de = "Gibt die Größe einer Datei zurück.",
                                jp = "ファイルの大きさを返します。",
                                ko = "파일의 크기를 구합니다.",
                                pt = "Retorna o tamanho do arquivo",
                                ru = "Возвращает размер file (Русский)."
                            },
                            minidescriptiont = {
                                de = "Gibt die Größe einer Datei zurück.",
                                jp = "ファイルの大きさを返します。",
                                ko = "파일의 크기를 구합니다.",
                                pt = "Retorna o tamanho do arquivo",
                                ru = "Возвращает размер file (Русский)."
                            },
                            name = "getSize",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The file size",
                                            descriptiont = {
                                                de = "Die Größe der Datei.",
                                                jp = "ファイルの大きさ。",
                                                ko = "파일의 크기(바이트).",
                                                pt = "O tamanho do arquivo",
                                                ru = "Размер файла."
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether end-of-file has been reached.",
                            descriptiont = {
                                jp = "ファイル終端 (EOF : End-Of-File) まで到達したかどうかを取得します。"
                            },
                            minidescriptiont = {
                                jp = "ファイル終端 (EOF : End-Of-File) まで到達したかどうかを取得します。"
                            },
                            name = "isEOF",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether EOF has been reached.",
                                            descriptiont = {
                                                jp = "EOF まで到達したかどうか。"
                                            },
                                            name = "eof",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the file is open.",
                            descriptiont = {
                                de = "Gibt zurück ob eine Datei geöffnet ist.",
                                jp = "ファイルが開かれているかどうか取得します。",
                                ko = "파일이 열려 있는지 확인합니다.",
                                pt = "Descobre se o arquivo está aberto.",
                                ru = "Получает был ли открыт файл."
                            },
                            minidescriptiont = {
                                de = "Gibt zurück ob eine Datei geöffnet ist.",
                                jp = "ファイルが開かれているかどうか取得します。",
                                ko = "파일이 열려 있는지 확인합니다.",
                                pt = "Descobre se o arquivo está aberto.",
                                ru = "Получает был ли открыт файл."
                            },
                            name = "isOpen",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the file is currently open, false otherwise.",
                                            descriptiont = {
                                                de = "Wahr wenn die Datei gerade geöffnet ist, falsch wenn nicht.",
                                                jp = "true ならばファイルは現在開かれており、それ以外は false です。",
                                                ko = "열려 있으면 true.",
                                                pt = "Verdadeiro se o arquivo estiver atualmente aberto; do contrário, falso.",
                                                ru = "True если файл был открыт успешно, false был открыт иначе."
                                            },
                                            name = "open",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Iterate over all the lines in a file",
                            descriptiont = {
                                de = "Iteriert über alle Zeilen einer Datei.",
                                jp = "ファイルの最終行まで全てイテレート(反復)します。",
                                ko = "텍스트 파일을 한 줄씩 읽는 반복자를 리턴합니다.",
                                pt = "Iterage por todas as linhas de um arquivo",
                                ru = "Перебрать все строки в file (Русский)."
                            },
                            minidescriptiont = {
                                de = "Iteriert über alle Zeilen einer Datei.",
                                jp = "ファイルの最終行まで全てイテレート(反復)します。",
                                ko = "텍스트 파일을 한 줄씩 읽는 반복자를 리턴합니다.",
                                pt = "Iterage por todas as linhas de um arquivo",
                                ru = "Перебрать все строки в file (Русский)."
                            },
                            name = "lines",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The iterator (can be used in for loops)",
                                            descriptiont = {
                                                de = "Der Iterator (kann in for-Schleifen genutzt werden).",
                                                jp = "イテレーター (for ループで使用できます)",
                                                ko = "텍스트 파일을 한 줄씩 읽는 반복자.",
                                                pt = "O iterador (pode ser usado em loops de for)",
                                                ru = "Итератор (может быть использован в течении циклов)."
                                            },
                                            name = "iterator",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Open the file for write, read or append.\n\nIf you are getting the error message \"Could not set write directory\", try setting the save directory. This is done either with love.filesystem.setIdentity or by setting the identity field in love.conf.",
                            descriptiont = {
                                jp = "書き込み、読み込みまたは追記するためにファイルを開きます。",
                                ko = "읽기나 쓰기 따위를 하기 위해 파일을 엽니다.",
                                pt = "Abre um arquivo para escrita, leitura ou acréscimo.",
                                ru = "Открывает файл для записи, чтения или добавления."
                            },
                            minidescriptiont = {
                                jp = "書き込み、読み込みまたは追記するためにファイルを開きます。",
                                ko = "읽기나 쓰기 따위를 하기 위해 파일을 엽니다.",
                                pt = "Abre um arquivo para escrita, leitura ou acréscimo.",
                                ru = "Открывает файл для записи, чтения или добавления."
                            },
                            name = "open",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The mode to open the file in.",
                                            descriptiont = {
                                                ko = "파일 모드.",
                                                pt = "O modo em que o arquivo será aberto."
                                            },
                                            name = "mode",
                                            type = "FileMode"
                                        }
                                    },
                                    descriptiont = {
                                        ko = "\"Could not set write directory\"라는 에러 메시지가 발생했다면 세이브 디렉토리를 설정해 보세요. love.filesystem.setIdentity나 love.conf에서 하실 수 있습니다.",
                                        pt = "Se você receber a mensagem de erro \"Could not set write directory\" tente configurar o diretório save. Isso pode ser feito com love.filesystem.setIdentity ou configurando o campo identity em love.conf (somente para love 0.7 ou superior)."
                                    },
                                    returns = {
                                        {
                                            description = "True on success, false otherwise.",
                                            descriptiont = {
                                                ko = "성공했으면 true.",
                                                pt = "Verdadeiro no sucesso, senão, falso."
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Read a number of bytes from a file.",
                            descriptiont = {
                                jp = "ファイルからバイト単位で読み込みます。",
                                ko = "파일을 읽습니다.",
                                pt = "Lê uma quantidade de bytes de um arquivo.",
                                ru = "Считывает число байтов из файла."
                            },
                            minidescriptiont = {
                                jp = "ファイルからバイト単位で読み込みます。",
                                ko = "파일을 읽습니다.",
                                pt = "Lê uma quantidade de bytes de um arquivo.",
                                ru = "Считывает число байтов из файла."
                            },
                            name = "read",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "all",
                                            description = "The number of bytes to read",
                                            descriptiont = {
                                                jp = "読み込む量をバイト数で指定します。",
                                                ko = "읽을 바이트 수.",
                                                pt = "A quantidade de bytes que serão lidos.",
                                                ru = "Количество байт для чтения"
                                            },
                                            name = "bytes",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        ru = "=== Вмд ===\n\n&lt;source lang=\"lua\"&gt;\n\ncontents, size = File:read( bytes )\n\n&lt;/source&gt;"
                                    },
                                    returns = {
                                        {
                                            description = "The contents of the read bytes.",
                                            descriptiont = {
                                                jp = "指定されたバイトから読み込んだ内容。",
                                                ko = "읽힌 문자열.",
                                                pt = "O conteúdo dos bytes lidos.",
                                                ru = "Содержание прочитанных байт"
                                            },
                                            name = "contents",
                                            type = "string"
                                        },
                                        {
                                            description = "How many bytes have been read.",
                                            descriptiont = {
                                                jp = "読み込んだ量をバイト数で返します。",
                                                ko = "읽힌 바이트 수.",
                                                pt = "Quantos bytes foram lidos",
                                                ru = "Сколько байт было прочитано"
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Seek to a position in a file.",
                            descriptiont = {
                                jp = "ファイルの指定位置へ移動します。",
                                ko = "파일의 포인터 위치를 변경합니다.",
                                pt = "Vai para uma posição no arquivo.",
                                ru = "Ищит что-либо в файле"
                            },
                            minidescriptiont = {
                                jp = "ファイルの指定位置へ移動します。",
                                ko = "파일의 포인터 위치를 변경합니다.",
                                pt = "Vai para uma posição no arquivo.",
                                ru = "Ищит что-либо в файле"
                            },
                            name = "seek",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The position to seek to.",
                                            descriptiont = {
                                                jp = "移動先の位置。",
                                                ko = "포인터 위치.",
                                                pt = "A posição a ser buscada",
                                                ru = "Данные для поиска"
                                            },
                                            name = "position",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Whether the operation was successful.",
                                            descriptiont = {
                                                jp = "操作が成功したかどうか。",
                                                ko = "위치 변경에 성공했으면 true.",
                                                pt = "Se a operação teve sucesso ou não",
                                                ru = "Если операция прошла успешно"
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the buffer mode for a file opened for writing or appending. Files with buffering enabled will not write data to the disk until the buffer size limit is reached, depending on the buffer mode.",
                            descriptiont = {
                                jp = "書き込みまたは追記のために開いたファイルへに対してバッファモードの設定を行います。バッファモードによっては、バッファリングが有効になったファイルはバッファの最大使用可能容量が限界に到達するまでディスクへデータを書き出しません。\n\nFile:flush はバッファ(緩衝記憶機構)に蓄積された全てのデータを強制的にディスクへ書き出します。",
                                ko = "파일 쓰기와 추가 시 사용할 버퍼링 모드를 설정합니다. 버퍼링이 켜져 있으면 파일로의 출력 시 버퍼의 크기가 꽉 차기 전까지는 실제 적용되지 않습니다(버퍼링 모드에 따라 그러지 않는 경우도 있음).\n\nFile:flush는 강제로 버퍼를 비워 모두 출력하게 합니다.",
                                pt = "Configura o modo de buffer para um arquivo aberto para escrita ou acréscimo. Arquivos com buffer habilitado não vão escrever dados no disco até que tamanho limite do buffer seja atingido, dependendo do modo de buffer.\n\nFile:flush forçará qualquer dado do buffer a ser escrito no disco.",
                                ru = "Устанавливает режим буфера для записи или добавления файл. Файлы с буферизацией не записывают данные на диск если достигнут предел размера буфера, в зависимости от режима буфера.\n\nFile:flush (Русский) принудительно записать любые данные из буфера на диск.."
                            },
                            minidescriptiont = {
                                jp = "書き込みまたは追記のために開いたファイルに対してバッファモードの設定を行います。",
                                ko = "파일 쓰기와 추가 시 사용할 버퍼링 모드를 설정합니다.",
                                pt = "Configura o modo de buffer para um arquivo aberto para escrita ou acréscimo.",
                                ru = "Устанавливает режим буфера для записи или добавления файл."
                            },
                            name = "setBuffer",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The buffer mode to use.",
                                            descriptiont = {
                                                jp = "使用するバッファモード。",
                                                ko = "사용할 버퍼링 모드.",
                                                pt = "O modo de buffer a ser usado.",
                                                ru = "Режим буфера для использования."
                                            },
                                            name = "mode",
                                            type = "BufferMode"
                                        },
                                        {
                                            default = "0",
                                            description = "The maximum size in bytes of the file's buffer.",
                                            descriptiont = {
                                                jp = "ファイルで使用する最大バッファ容量をバイト単位で指定します。",
                                                ko = "버퍼의 크기(바이트).",
                                                pt = "O tamanho máximo em bytes do buffer do arquivo.",
                                                ru = "Максимальный размер в байтах файла буфера."
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Whether the buffer mode was successfully set.",
                                            descriptiont = {
                                                jp = "バッファモードの設定が成功したかどうか。",
                                                ko = "성공적으로 설정되었으면 true.",
                                                pt = "Se o modo de buffer foi definido com sucesso ou não.",
                                                ru = "Если режим буферизации успешно установлен."
                                            },
                                            name = "success",
                                            type = "boolean"
                                        },
                                        {
                                            description = "The error string, if the buffer mode could not be set and an error occurred.",
                                            descriptiont = {
                                                jp = "バッファモードの設定ができなかった。またはエラーが発生した場合はエラー文字列を返します。",
                                                ko = "에러가 발생하였으면 메시지를 리턴.",
                                                pt = "O string de erro, caso não tenha sido possível definir o modo de buffer e tenha ocorrido um erro.",
                                                ru = "Строка ошибки, если режим буфера не может быть установлен и произошла ошибка."
                                            },
                                            name = "errorstr",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the position in the file.",
                            descriptiont = {
                                jp = "ファイルの位置を返します。",
                                pt = "Retorna a posição atual no arquivo.",
                                ru = "Возвращает позицию в файле."
                            },
                            minidescriptiont = {
                                jp = "ファイルの位置を返します。",
                                pt = "Retorna a posição atual no arquivo.",
                                ru = "Возвращает позицию в файле."
                            },
                            name = "tell",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The current position.",
                                            descriptiont = {
                                                jp = "現在の位置",
                                                pt = "A posição atual.",
                                                ru = "Текущая позиция"
                                            },
                                            name = "pos",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Write data to a file.",
                            descriptiont = {
                                jp = "ファイルへデータを書き込みます",
                                ko = "데이터를 파일에 씁니다.",
                                pt = "Escreve dados no arquivo.",
                                ru = "Записывает данные в файл."
                            },
                            minidescriptiont = {
                                jp = "ファイルへデータを書き込みます",
                                ko = "데이터를 파일에 씁니다.",
                                pt = "Escreve dados no arquivo.",
                                ru = "Записывает данные в файл."
                            },
                            name = "write",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The data to write.",
                                            descriptiont = {
                                                ko = "쓸 문자열 데이터.",
                                                pt = "String de dados a ser escritos."
                                            },
                                            name = "data",
                                            type = "string"
                                        },
                                        {
                                            default = "all",
                                            description = "How many bytes to write.",
                                            descriptiont = {
                                                ko = "쓸 바이트 수.",
                                                pt = "Quantos bytes devem ser escritos."
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Whether the operation was successful.",
                                            descriptiont = {
                                                ko = "쓰는데 성공했으면 true.",
                                                pt = "Se a operação teve sucesso ou não."
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "File",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newFileData"
                    },
                    description = "Data representing the contents of a file.",
                    descriptiont = {
                        de = "Ein Datum welches den Inhalt einer Datei repräsentiert.",
                        jp = "ファイルの内容を Data  として提供します。",
                        ko = "파일 내부의 콘텐츠를 가리키는 데이터 입니다.",
                        pt = "Data (Português) representando o conteúdo de um arquivo.",
                        ru = "Data представление содержимого файла."
                    },
                    functions = {
                        {
                            description = "Gets the extension of the FileData.",
                            descriptiont = {
                                de = "Gibt die Dateiendung des FileData-Objekts zurück.",
                                jp = "FileData の拡張子を取得します。",
                                ko = "확장자를 얻어옵니다.",
                                pt = "Obtém a extensão do FileData."
                            },
                            minidescriptiont = {
                                de = "Gibt die Dateinamenserweiterung des FileData-Objekt zurück.",
                                jp = "FileData の拡張子を取得します。",
                                ko = "확장자를 얻어옵니다.",
                                pt = "Gets the extension of the FileData."
                            },
                            name = "getExtension",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The extension of the file the FileData represents.",
                                            descriptiont = {
                                                de = "Die Dateiendung der Datei, welche das FileData-Objekts repräsentiert.",
                                                jp = "FileData から提供されたファイルの拡張子。",
                                                ko = "확장자.",
                                                pt = "A extensão do arquivo que FileData representa."
                                            },
                                            name = "ext",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the filename of the FileData.",
                            descriptiont = {
                                jp = "FileData のファイル名を取得します。",
                                pt = "Obtém o nome de arquivo de um FileData."
                            },
                            minidescriptiont = {
                                jp = "FileData のファイル名を取得します。",
                                pt = "Obtém o nome de arquivo de um FileData."
                            },
                            name = "getFilename",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The name of the file the FileData represents.",
                                            descriptiont = {
                                                jp = "FileData から提供されたファイル名。",
                                                pt = "O  nome do arquivo que FileData representa."
                                            },
                                            name = "name",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Data (Português) representando o conteúdo de um arquivo."
                    },
                    name = "FileData",
                    parenttype = "Data",
                    supertypes = {
                        "Data",
                        "Object"
                    }
                }
            }
        },
        {
            description = "The primary responsibility for the love.graphics module is the drawing of lines, shapes, text, Images and other Drawable objects onto the screen. Its secondary responsibilities include loading external files (including Images and Fonts) into memory, creating specialized objects (such as ParticleSystems or Canvases) and managing screen geometry.\n\nLÖVE's coordinate system is rooted in the upper-left corner of the screen, which is at location (0, 0). The x axis is horizontal: larger values are further to the right. The y axis is vertical: larger values are further towards the bottom.\n\nIn many cases, you draw images or shapes in terms of their upper-left corner.\n\nMany of the functions are used to manipulate the graphics coordinate system, which is essentially the way coordinates are mapped to the display. You can change the position, scale, and even rotation in this way.",
            enums = {
                {
                    constants = {
                        {
                            description = "Align text center.",
                            descriptiont = {
                                de = "Text mittig ausrichten.",
                                jp = "テキストの中央揃え。",
                                ko = "가운데 정렬.",
                                pt = "Alinhamento centralizado.",
                                ru = "Выравнивание текста по центру."
                            },
                            name = "center"
                        },
                        {
                            description = "Align text left.",
                            descriptiont = {
                                de = "Text links ausrichten.",
                                jp = "テキストの左揃え。",
                                ko = "왼쪽 정렬.",
                                pt = "Alinhamento à esquerda.",
                                ru = "Выравнивание текста по левому краю."
                            },
                            name = "left"
                        },
                        {
                            description = "Align text right.",
                            descriptiont = {
                                de = "Text rechts ausrichten.",
                                jp = "テキストの右揃え。",
                                ko = "오른쪽 정렬.",
                                pt = "Alinhamento à direita.",
                                ru = "Выравнивание текста по правому краю."
                            },
                            name = "right"
                        },
                        {
                            description = "Align text both left and right.",
                            descriptiont = {
                                de = "Text links oder rechts ausrichten.",
                                jp = "テキストの左右両端揃え。",
                                ko = "양쪽 정렬."
                            },
                            name = "justify"
                        }
                    },
                    description = "Text alignment.",
                    descriptiont = {
                        de = "Bestimmt wie Text auf dem Bildschirm ausgerichtet werden soll.",
                        jp = "テキストの揃えかた。",
                        ko = "텍스트의 정렬 방식을 지정합니다.",
                        pt = "Alinhamento do texto.",
                        ru = "Выравнивание текста."
                    },
                    minidescriptiont = {
                        de = "Bestimmt wie Text auf dem Bildschirm ausgerichtet werden soll.",
                        jp = "テキストの揃えかた。",
                        ko = "텍스트의 정렬 방식을 지정합니다.",
                        pt = "Alinhamento do texto.",
                        ru = "Выравнивание текста."
                    },
                    name = "AlignMode"
                },
                {
                    constants = {
                        {
                            description = "The arc is drawn like a slice of pie, with the arc circle connected to the center at its end-points.",
                            descriptiont = {
                                jp = "円弧の領域が中心の終点に接続されている状態で、円弧が一切れのパイのように描画されます。"
                            },
                            name = "pie"
                        },
                        {
                            description = "The arc circle's two end-points are unconnected when the arc is drawn as a line. Behaves like the \"closed\" arc type when the arc is drawn in filled mode.",
                            descriptiont = {
                                jp = "円弧において二つの終点は未接続のままで円弧は線分として描画されます。円弧が塗り潰される方式で描画されるときは \"closed\" 型の円弧のように動作します。"
                            },
                            name = "open"
                        },
                        {
                            description = "The arc circle's two end-points are connected to each other.",
                            descriptiont = {
                                jp = "円弧において二つの終点は互いに接続されます。"
                            },
                            name = "closed"
                        }
                    },
                    description = "Different types of arcs that can be drawn.",
                    descriptiont = {
                        jp = "描画可能な様々な円弧の種類です。"
                    },
                    minidescriptiont = {
                        jp = "描画可能な様々な円弧の種類です。"
                    },
                    name = "ArcType"
                },
                {
                    constants = {
                        {
                            description = "Uniform distribution.",
                            descriptiont = {
                                de = "Uniforme Distribution.",
                                jp = "一様分布。"
                            },
                            name = "uniform"
                        },
                        {
                            description = "Normal (gaussian) distribution.",
                            descriptiont = {
                                de = "Normale (gauß'sche) Distribution.",
                                jp = "正規 (ガウシアン) 分布。"
                            },
                            name = "normal"
                        },
                        {
                            description = "Uniform distribution in an ellipse.",
                            descriptiont = {
                                jp = "楕円形での一様分布。"
                            },
                            name = "ellipse"
                        },
                        {
                            description = "No distribution - area spread is disabled.",
                            descriptiont = {
                                de = "Keine Distribution - Die Verteilung von Partikeln ist deaktiviert.",
                                jp = "分布無し - 領域展開を無効にします。"
                            },
                            name = "none"
                        }
                    },
                    description = "Types of particle area spread distribution.",
                    descriptiont = {
                        de = "Verschiedene Arten der Partikeldistribution im Raum.",
                        jp = "パーティクルにおける領域展開分布の種類。"
                    },
                    minidescriptiont = {
                        de = "Verschiedene Arten der Verteilung von Partikeln im Raum.",
                        jp = "パーティクルにおける領域展開分布の種類。"
                    },
                    name = "AreaSpreadDistribution"
                },
                {
                    constants = {
                        {
                            description = "The RGB values of what's drawn are multiplied by the alpha values of those colors during blending. This is the default alpha mode.",
                            descriptiont = {
                                jp = "描画された RGB 値が混合されている間は、それらの色が有する透過値を乗算します。これは標準の透過方式です。"
                            },
                            name = "alphamultiply"
                        },
                        {
                            description = "The RGB values of what's drawn are not multiplied by the alpha values of those colors during blending. For most blend modes to work correctly with this alpha mode, the colors of a drawn object need to have had their RGB values multiplied by their alpha values at some point previously (\"premultiplied alpha\").",
                            descriptiont = {
                                jp = "描画された RGB 値が混合されている間は、それらの色が有する透過値を'''乗算しません'''。この透過方式はほとんどの混合方式で正確に動作しますが、描画されるオブジェクトの色は、ある時点で予(あらかじ)め透過値を RGB 値で乗算されたものを有する必要があります。 (\"premultiplied alpha\")"
                            },
                            name = "premultiplied"
                        }
                    },
                    description = "Different ways alpha affects color blending. See BlendMode and the BlendMode Formulas for additional notes.",
                    descriptiont = {
                        jp = "色の混合に影響を与える様々な透過方法です。追加の注記は BlendMode および BlendMode Formulasを参照してください。"
                    },
                    minidescriptiont = {
                        jp = "色の混合に影響を与える様々な透過方法です。"
                    },
                    name = "BlendAlphaMode"
                },
                {
                    constants = {
                        {
                            description = "Alpha blending (normal). The alpha of what's drawn determines its opacity.",
                            descriptiont = {
                                de = "Alpha-Modus ('normal').",
                                jp = "透過混合方式 (標準)。透過は描画される対象の不透明度を決定します。",
                                ko = "표준.",
                                pt = "Mode de mistura alfa ('normal').",
                                ru = "Режим обычного альфа смешивания."
                            },
                            name = "alpha"
                        },
                        {
                            description = "The colors of what's drawn completely replace what was on the screen, with no additional blending. The BlendAlphaMode specified in love.graphics.setBlendMode still affects what happens.",
                            descriptiont = {
                                de = "Ersetzender Modus.",
                                jp = "追加の混合処理を行わずに、画面上にあるものを描画される対象にある色で完全に置換します。 love.graphics.setBlendMode で指定された BlendAlphaMode は以後の対象に影響を与えます。",
                                ko = "대체."
                            },
                            name = "replace"
                        },
                        {
                            description = "\"Screen\" blending.",
                            descriptiont = {
                                de = "Bildschirm-Modus.",
                                jp = "'画面'混合方式。",
                                ko = "스크린."
                            },
                            name = "screen"
                        },
                        {
                            description = "The pixel colors of what's drawn are added to the pixel colors already on the screen. The alpha of the screen is not modified.",
                            descriptiont = {
                                jp = "描画される対象にあるピクセルの色は既に画面上に存在するピクセルの色により加算されます。画面の透過は変更されません。"
                            },
                            name = "add"
                        },
                        {
                            description = "The pixel colors of what's drawn are subtracted from the pixel colors already on the screen. The alpha of the screen is not modified.",
                            descriptiont = {
                                jp = "描画される対象にあるピクセルの色は既に画面上に存在するピクセルの色により減算されます。画面の透過は変更されません。"
                            },
                            name = "subtract"
                        },
                        {
                            description = "The pixel colors of what's drawn are multiplied with the pixel colors already on the screen (darkening them). The alpha of drawn objects is multiplied with the alpha of the screen rather than determining how much the colors on the screen are affected, even when the \"alphamultiply\" BlendAlphaMode is used.",
                            descriptiont = {
                                jp = "描画される対象にあるピクセルの色は既に画面上に存在するピクセルの色により乗算されます (暗くなります)。描画されるオブジェクトの透過は \"alphamultiply\" 型の BlendAlphaMode が使用されている場合であっても、画面上の色がどれほど影響を受けるかで決定されるのではなく、画面の透過により乗算されます。"
                            },
                            name = "multiply"
                        },
                        {
                            description = "The pixel colors of what's drawn are compared to the existing pixel colors, and the larger of the two values for each color component is used. Only works when the \"premultiplied\" BlendAlphaMode is used in love.graphics.setBlendMode.",
                            descriptiont = {
                                jp = "描画される対象にあるピクセルの色は既に画面上に存在するピクセルの色と比較を行い、各色要素にある二つの値よりも大きいものを使用します。 love.graphics.setBlendMode で  \"premultiplied\" 型の BlendAlphaMode を使用した場合のみ動作します。"
                            },
                            name = "lighten"
                        },
                        {
                            description = "The pixel colors of what's drawn are compared to the existing pixel colors, and the smaller of the two values for each color component is used. Only works when the \"premultiplied\" BlendAlphaMode is used in love.graphics.setBlendMode.",
                            descriptiont = {
                                jp = "描画される対象にあるピクセルの色は既に画面上に存在するピクセルの色と比較を行い、各色要素にある二つの値よりも小きいものを使用します。 love.graphics.setBlendMode で  \"premultiplied\" 型の BlendAlphaMode を使用した場合のみ動作します。"
                            },
                            name = "darken"
                        }
                    },
                    description = "Different ways to do color blending. See BlendAlphaMode and the BlendMode Formulas for additional notes.",
                    descriptiont = {
                        de = "Unterschiedliche Arten des Alpha-Blendings. Für genauere Anmerkungen, siehe: BlendMode Formeln.",
                        jp = "様々な方法で透過混合を行います。追加の注釈については BlendAlphaMode および BlendMode Formulas を参照してください。",
                        ko = "다양한 방식의 알파 블렌딩 모드를 지정합니다.",
                        pt = "Diferentes maneiras de fazer a mistura do alfa.",
                        ru = "Различные способы смешивания альфа канала."
                    },
                    minidescriptiont = {
                        de = "Unterschiedliche Arten des Alpha-Blendings.",
                        jp = "様々な方法で透過混合を行います。",
                        ko = "다양한 방식의 알파 블렌딩 모드를 지정합니다.",
                        pt = "Diferentes maneiras de fazer a mistura do alfa.",
                        ru = "Различные способы смешивания альфа канала."
                    },
                    name = "BlendMode"
                },
                {
                    constants = {
                        {
                            description = "The default Canvas format - usually an alias for the rgba8 format, or the srgb format if gamma-correct rendering is enabled in LÖVE 0.10.0 and newer.",
                            descriptiont = {
                                jp = "標準 Canvas 形式 ― 通常は rgba8 形式、または LÖVE ガンマ補正表示が有効ならば srgb の別名です。"
                            },
                            name = "normal"
                        },
                        {
                            description = "A format suitable for high dynamic range content - an alias for the rgba16f format, normally.",
                            descriptiont = {
                                jp = "高解像度の内容に適している形式です。 - 通常は、 rgba16f 形式に対する別名です。"
                            },
                            name = "hdr"
                        },
                        {
                            description = "8 bits per channel (32 bpp) RGBA. Color channel values range from 0-255 (0-1 in shaders).",
                            descriptiont = {
                                jp = "RGBA チャンネル (32 bpp) 当たり 8 bit です。色チャンネルの値は 0 から 255 (シェーダーは 0 から 1 まで) までの範囲です。"
                            },
                            name = "rgba8"
                        },
                        {
                            description = "4 bits per channel (16 bpp) RGBA.",
                            descriptiont = {
                                jp = "RGBA チャンネル (16 bpp) 当たり 4 bit です。"
                            },
                            name = "rgba4"
                        },
                        {
                            description = "RGB with 5 bits each, and a 1-bit alpha channel (16 bpp).",
                            descriptiont = {
                                jp = "RGB チャンネル当たり 5 bit であり、 1 bit の透過チャンネルです (16bpp)。"
                            },
                            name = "rgb5a1"
                        },
                        {
                            description = "RGB with 5, 6, and 5 bits each, respectively (16 bpp). There is no alpha channel in this format.",
                            descriptiont = {
                                jp = "それぞれ、赤色 (R) は 5 bit、緑色 (G) は  6 bit、および青色 (B) は 5 bit から構成されている RGB です (16 bpp)。この形式には透過色 (A) チャンネルはありません。"
                            },
                            name = "rgb565"
                        },
                        {
                            description = "RGB with 10 bits per channel, and a 2-bit alpha channel (32 bpp).",
                            descriptiont = {
                                jp = "RGB チャンネル当たり 10 bit であり、 2 bit の透過チャンネルです (32bpp)。"
                            },
                            name = "rgb10a2"
                        },
                        {
                            description = "Floating point RGBA with 16 bits per channel (64 bpp). Color values can range from [-65504, +65504].",
                            descriptiont = {
                                jp = "チャンネルあたり 16 bit の浮動小数点を使用した RGBA です(64 bpp)。色の範囲値は +65504 まで選択することができます。"
                            },
                            name = "rgba16f"
                        },
                        {
                            description = "Floating point RGBA with 32 bits per channel (128 bpp).",
                            descriptiont = {
                                jp = "チャンネルあたり 32 bit の浮動小数点を使用した RGBA です(128 bpp)。"
                            },
                            name = "rgba32f"
                        },
                        {
                            description = "Floating point RGB with 11 bits in the red and green channels, and 10 bits in the blue channel (32 bpp). There is no alpha channel. Color values can range from [0, +65024].",
                            descriptiont = {
                                jp = "浮動小数点を使用した RGB であり赤色および緑色チャンネルは 11 bit であり、青色チャンネルは 10 bit (32bpp) です。透過チャンネルはありません。色の値の範囲は +65024 までを選択することができます。"
                            },
                            name = "rg11b10f"
                        },
                        {
                            description = "The same as rgba8, but the Canvas is interpreted as being in the sRGB color space. Everything drawn to the Canvas will be converted from linear RGB to sRGB. When the Canvas is drawn (or used in a shader), it will be decoded from sRGB to linear RGB. This reduces color banding when doing gamma-correct rendering, since sRGB encoding has more precision than linear RGB for darker colors.",
                            descriptiont = {
                                jp = "rgba8 と同じですが、 Canvas は sRGB 色空間として''解釈''されます。 Canvas へ描画されたものは全て線形 RGB から sRGB へ変換されます。 Canvas 描画(またはシェーダーにて使用される)時に、 sRGB から 線形 RGB へ復号化されます。これは sRGB による符号化において、さらに深い暗色に対しては線形 RGB よりもっと多くの精度があるため、ガンマ補正表示を行う場合に、色の帯域を削減します。"
                            },
                            name = "srgb"
                        },
                        {
                            description = "Single-channel (red component) format (8 bpp).",
                            descriptiont = {
                                jp = "単一チャンネル (赤色の要素) 形式です (8 bpp)。"
                            },
                            name = "r8"
                        },
                        {
                            description = "Two channels (red and green components) with 8 bits per channel (16 bpp).",
                            descriptiont = {
                                jp = "チャンネル (16 bpp) 当たり 8 bit の 2 チャンネル (赤色と青色の要素) 形式です。"
                            },
                            name = "rg8"
                        },
                        {
                            description = "Floating point single-channel format (16 bpp). Color values can range from [-65504, +65504].",
                            descriptiont = {
                                jp = "浮動小数点による単一チャンネル形式 (16 bpp)。色の値は +65504 の範囲までです。"
                            },
                            name = "r16f"
                        },
                        {
                            description = "Floating point two-channel format with 16 bits per channel (32 bpp). Color values can range from [-65504, +65504].",
                            descriptiont = {
                                jp = "チャンネル (32 bpp) 当たり 16 bit の浮動小数点による 2 チャンネル形式です。色の値は +65504 の範囲までです。"
                            },
                            name = "rg16f"
                        },
                        {
                            description = "Floating point single-channel format (32 bpp).",
                            descriptiont = {
                                jp = "浮動小数点による単一チャンネル形式 (32 bpp)。"
                            },
                            name = "r32f"
                        },
                        {
                            description = "Floating point two-channel format with 32 bits per channel (64 bpp).",
                            descriptiont = {
                                jp = "チャンネル (64 bpp) 当たり 32 bit の浮動小数点による 2 チャンネル形式です。"
                            },
                            name = "rg32f"
                        }
                    },
                    description = "Canvas formats.",
                    descriptiont = {
                        jp = "Canvas の形式。"
                    },
                    minidescriptiont = {
                        jp = "Canvas テクスチャの形式。"
                    },
                    name = "CanvasFormat"
                },
                {
                    constants = {
                        {
                            description = "The stencil value of the pixel must be equal to the supplied value.",
                            descriptiont = {
                                jp = "ピクセルのステンシル値は与えられた値と等しい。"
                            },
                            name = "equal"
                        },
                        {
                            description = "The stencil value of the pixel must not be equal to the supplied value.",
                            descriptiont = {
                                jp = "ピクセルのステンシル値は与えられた値と等しくない。"
                            },
                            name = "notequal"
                        },
                        {
                            description = "The stencil value of the pixel must be less than the supplied value.",
                            descriptiont = {
                                jp = "ピクセルのステンシル値は与えられた値より小さい。"
                            },
                            name = "less"
                        },
                        {
                            description = "The stencil value of the pixel must be less than or equal to the supplied value.",
                            descriptiont = {
                                jp = "ピクセルのステンシル値は与えられた値より小さいか等しい。"
                            },
                            name = "lequal"
                        },
                        {
                            description = "The stencil value of the pixel must be greater than or equal to the supplied value.",
                            descriptiont = {
                                jp = "ピクセルのステンシル値は与えられた値より大きいか等しい。"
                            },
                            name = "gequal"
                        },
                        {
                            description = "The stencil value of the pixel must be greater than the supplied value.",
                            descriptiont = {
                                jp = "ピクセルのステンシル値は与えられた値より大きい。"
                            },
                            name = "greater"
                        }
                    },
                    description = "Different types of per-pixel stencil test comparisons. The pixels of an object will be drawn if the comparison succeeds, for each pixel that the object touches.",
                    descriptiont = {
                        jp = "各ピクセルに対する様々なステンシルテストの比較方法。オブジェクトに接触している各ピクセルに関して、比較が成功した場合はオブジェクトに対してピクセルは描画されます。"
                    },
                    minidescriptiont = {
                        jp = "各ピクセルに対する様々なステンシルテストの比較方法。"
                    },
                    name = "CompareMode"
                },
                {
                    constants = {
                        {
                            description = "Draw filled shape.",
                            descriptiont = {
                                de = "Die Form ausfüllen.",
                                jp = "塗り潰しの図形を描きます。",
                                ko = "채우기.",
                                pt = "Desenha as formas preenchidas.",
                                ru = "Рисование закрашенной фигуры."
                            },
                            name = "fill"
                        },
                        {
                            description = "Draw outlined shape.",
                            descriptiont = {
                                de = "Die Form als Umriss darstellen.",
                                jp = "中抜きの図形を描きます。",
                                ko = "외곽선.",
                                pt = "Desenha o contorno das formas.",
                                ru = "Рисование контура фигуры."
                            },
                            name = "line"
                        }
                    },
                    description = "Controls whether shapes are drawn as an outline, or filled.",
                    descriptiont = {
                        de = "Bestimmt ob nur die Umrisse einer Form gezeichnet, oder diese ausgefüllt werden soll.",
                        jp = "中抜き、または塗り潰しで図形の描画するかどうか制御します。",
                        ko = "외곽선을 그릴 건지 채워넣을 것인지 그리기 모드를 결정합니다.",
                        pt = "Como as formas são desenhadas.",
                        ru = "Как будут рисоваться фигуры."
                    },
                    minidescriptiont = {
                        de = "Bestimmt ob nur die Umrisse einer Form gezeichnet, oder diese ausgefüllt werden soll.",
                        jp = "中抜き、または塗り潰しで図形の描画するかどうか制御します。",
                        ko = "외곽선을 그릴 건지 채워넣을 것인지 그리기 모드를 결정합니다.",
                        pt = "Como as formas são desenhadas.",
                        ru = "Как будут рисоваться фигуры."
                    },
                    name = "DrawMode"
                },
                {
                    constants = {
                        {
                            description = "Scale image with linear interpolation.",
                            descriptiont = {
                                de = "Das Bild wird mit Linearer Interpolation skaliert.",
                                jp = "画像の尺度変更で線形補間 (一次補間) を使用します (デフォルト値)。",
                                ko = "부드럽게 보임.",
                                pt = "Escala uma imagem com interpolação linear.",
                                ru = "Линейная интерполяция."
                            },
                            name = "linear"
                        },
                        {
                            description = "Scale image with nearest neighbor interpolation.",
                            descriptiont = {
                                de = "Das Bild wird mit Nearest-Neighbor-Interpolation skaliert.",
                                jp = "画像の尺度変更で最近接補間 (隣接補完) を使用します。",
                                ko = "픽셀이 딱딱 보임.",
                                pt = "Escala uma imagem com interpolação com relação aos vizinhos.",
                                ru = "Интерполяция по \"ближайшему соседу\"."
                            },
                            name = "nearest"
                        }
                    },
                    description = "How the image is filtered when scaling.",
                    descriptiont = {
                        de = "Die Arten von Filtern welche beim Skalieren von Bildern verwendet werden können.\n\nFile:ComparisonFilters.png",
                        jp = "画像に対する尺度変更フィルタの適用方法。\n\nFile:ComparisonFilters.png",
                        ko = "이미지가 확대 및 축소될 때 어떻게 필터링할 것인지 지정합니다.\n\nFile:ComparisonFilters.png",
                        pt = "Como uma imagem é filtrada quando escalada.",
                        ru = "Как будет фильтроваться изображение при масштабировании."
                    },
                    minidescriptiont = {
                        de = "Die Arten von Filtern welche beim Skalieren von Bildern verwendet werden können.",
                        jp = "画像に対する尺度変更フィルタの適用方法。",
                        ko = "이미지가 확대 및 축소될 때 어떻게 필터링할 것인지 지정합니다.",
                        pt = "Como uma imagem é filtrada quando escalada.",
                        ru = "Как будет фильтроваться изображение при масштабировании."
                    },
                    name = "FilterMode"
                },
                {
                    constants = {
                        {
                            description = "Whether the \"clampzero\" WrapMode is supported.",
                            descriptiont = {
                                jp = "\"clampzero\" 加工方式に関する対応状況。"
                            },
                            name = "clampzero"
                        },
                        {
                            description = "Whether the \"lighten\" and \"darken\" BlendModes are supported.",
                            descriptiont = {
                                jp = "\"lighten\" および \"darken\" 混合方式に関する対応状況。"
                            },
                            name = "lighten"
                        },
                        {
                            description = "Whether multiple Canvases with different formats can be used in the same love.graphics.setCanvas call.",
                            descriptiont = {
                                jp = "別々の形式で複数の  Canvas が同じ love.graphics.setCanvas 呼び出しで使用可能であるかどうかに関する対応状況。"
                            },
                            name = "multicanvasformats"
                        }
                    },
                    description = "Graphics features that can be checked for with love.graphics.getSupported.",
                    descriptiont = {
                        jp = "love.graphics.getSupported にて確認できるグラフィックスの機能。"
                    },
                    minidescriptiont = {
                        jp = "love.graphics.getSupported にて確認できるグラフィックスの機能。"
                    },
                    name = "GraphicsFeature"
                },
                {
                    constants = {
                        {
                            description = "The maximum size of points.",
                            descriptiont = {
                                jp = "point の最大の大きさ。"
                            },
                            name = "pointsize"
                        },
                        {
                            description = "The maximum width or height of Images and Canvases.",
                            descriptiont = {
                                jp = "Image および Canvas の最大の幅または高さ。"
                            },
                            name = "texturesize"
                        },
                        {
                            description = "The maximum number of simultaneously active canvases (via love.graphics.setCanvas).",
                            descriptiont = {
                                jp = "同時に有効にできる Canvas の最大数 (love.graphics.setCanvas による)"
                            },
                            name = "multicanvas"
                        },
                        {
                            description = "The maximum number of antialiasing samples for a Canvas.",
                            descriptiont = {
                                jp = "Canvas に対するアンチエイリアシングの最大サンプル数。"
                            },
                            name = "canvasmsaa"
                        }
                    },
                    description = "Types of system-dependent graphics limits checked for using love.graphics.getSystemLimits.",
                    descriptiont = {
                        jp = "love.graphics.getSystemLimits \n\nにより確認できるシステムに依存するグラフィック制限の種類。"
                    },
                    minidescriptiont = {
                        jp = "システムに依存するグラフィック制限の種類。"
                    },
                    name = "GraphicsLimit"
                },
                {
                    constants = {
                        {
                            description = "The ends of the line segments beveled in an angle so that they join seamlessly.",
                            descriptiont = {
                                jp = "線分の終点を継ぎ目なしで傾斜します (留め継ぎ)。"
                            },
                            name = "miter"
                        },
                        {
                            description = "No cap applied to the ends of the line segments.",
                            descriptiont = {
                                jp = "線分が互いに交わる地点を平板化します (斜角)。"
                            },
                            name = "bevel"
                        },
                        {
                            description = "Flattens the point where line segments join together.",
                            descriptiont = {
                                jp = "線分の終点に上限を適用しません (なし)。"
                            },
                            name = "none"
                        }
                    },
                    description = "Line join style.",
                    descriptiont = {
                        jp = "線の連結方法。\n\nFile:Linejoin.png",
                        ko = "조인 유형입니다.\n\nFile:Linejoin.png\n\n;miter:\n\n;bevel:\n\n;none:\n\n* parent::love.graphics (한국어)\n\n* love.graphics.setLineJoin (한국어)\n\nCategory:Enums"
                    },
                    minidescriptiont = {
                        jp = "線の連結方法。",
                        ko = "조인 유형입니다."
                    },
                    name = "LineJoin"
                },
                {
                    constants = {
                        {
                            description = "Draw rough lines.",
                            descriptiont = {
                                de = "Grobe Linien zeichnen.",
                                jp = "荒い線を描きます。",
                                ko = "거칠게.",
                                pt = "Desenha linhas rudes.",
                                ru = "Рисовать грубые линии."
                            },
                            name = "rough"
                        },
                        {
                            description = "Draw smooth lines.",
                            descriptiont = {
                                de = "Glatte Linien zeichnen.",
                                jp = "滑らかな線を描きます。",
                                ko = "부드럽게.",
                                pt = "Desenha linhas suaves.",
                                ru = "Рисовать смазанные линии."
                            },
                            name = "smooth"
                        }
                    },
                    description = "The styles in which lines are drawn.",
                    descriptiont = {
                        de = "Der Stil in dem Linien gezeichnet werden sollen.",
                        jp = "線の描画方法。",
                        ko = "선의 스타일을 지정합니다.",
                        pt = "O estilo com o qual as linhas são desenhadas.",
                        ru = "Стили, в которых будут нарисованы линии."
                    },
                    minidescriptiont = {
                        de = "Der Stil in dem Linien gezeichnet werden sollen.",
                        jp = "線の描画方法。",
                        ko = "선의 스타일을 지정합니다.",
                        pt = "O estilo com o qual as linhas são desenhadas.",
                        ru = "Стили, в которых будут нарисованы линии."
                    },
                    name = "LineStyle"
                },
                {
                    constants = {
                        {
                            description = "The vertices create a \"fan\" shape with the first vertex acting as the hub point. Can be easily used to draw simple convex polygons.",
                            descriptiont = {
                                jp = "中心点として作用する最初の頂点に対して\"扇形\"の頂点を作成します。単一の凸面がある多角形を容易に描画するために使用できます。"
                            },
                            name = "fan"
                        },
                        {
                            description = "The vertices create a series of connected triangles using vertices 1, 2, 3, then 3, 2, 4 (note the order), then 3, 4, 5 and so on.",
                            descriptiont = {
                                jp = "頂点 1, 2, 3, それに 3, 2, 4 (順序に注意してください), さらに 3, 4, 5 などを使用して連続で接続されている三角形の頂点を作成します。"
                            },
                            name = "strip"
                        },
                        {
                            description = "The vertices create unconnected triangles.",
                            descriptiont = {
                                jp = "頂点と接続されていない三角形を作成します。"
                            },
                            name = "triangles"
                        },
                        {
                            description = "The vertices are drawn as unconnected points (see love.graphics.setPointSize.)",
                            descriptiont = {
                                jp = "頂点と接続されていない点を描画します (love.graphics.setPointSize を参照)。"
                            },
                            name = "points"
                        }
                    },
                    description = "How a Mesh's vertices are used when drawing.",
                    descriptiont = {
                        jp = "Mesh の頂点で使用される描画方法。"
                    },
                    minidescriptiont = {
                        jp = "Mesh の頂点で使用される描画方法。"
                    },
                    name = "MeshDrawMode"
                },
                {
                    constants = {
                        {
                            description = "Particles are inserted at the top of the ParticleSystem's list of particles.",
                            descriptiont = {
                                de = "Partikel werden an oberster Stelle auf die Liste der Partikel gesetzt.",
                                jp = "パーティクルは ParticleSystem のパーティクル一覧の一番上へ挿入されます。"
                            },
                            name = "top"
                        },
                        {
                            description = "Particles are inserted at the bottom of the ParticleSystem's list of particles.",
                            descriptiont = {
                                de = "Partikel werden an unterster Stelle auf die Liste der Partikel gesetzt.",
                                jp = "パーティクルは ParticleSystem のパーティクル一覧の一番下へ挿入されます。"
                            },
                            name = "bottom"
                        },
                        {
                            description = "Particles are inserted at random positions in the ParticleSystem's list of particles.",
                            descriptiont = {
                                de = "Partikel werden an einer zufälligen Stelle in die Liste der Partikel eingefügt.",
                                jp = "パーティクルは ParticleSystem のパーティクル一覧の無作為な位置へ挿入されます。"
                            },
                            name = "random"
                        }
                    },
                    description = "How newly created particles are added to the ParticleSystem.",
                    descriptiont = {
                        de = "Bestimmt wie neu erstellte Partikel zum Partikelsystem hinzugefügt werden.",
                        jp = "新規作成したパーティクルを ParticleSystem へ追加する方法。"
                    },
                    minidescriptiont = {
                        de = "Bestimmt wie neu erstellte Partikel zum Partikelsystem hinzugefügt werden.",
                        jp = "新規作成したパーティクルを ParticleSystem へ追加する方法。"
                    },
                    name = "ParticleInsertMode"
                },
                {
                    constants = {
                        {
                            description = "The object's data will change occasionally during its lifetime.",
                            descriptiont = {
                                de = "Der SpriteBatch wird sich mehrfach verändern.",
                                jp = "オブジェクトのデータは存続時間中に時々変更します。"
                            },
                            name = "dynamic"
                        },
                        {
                            description = "The object will not be modified after initial sprites or vertices are added.",
                            descriptiont = {
                                de = "Der SpriteBatch wird sich nicht verändern.",
                                jp = "初期スプライトまたは頂点が追加された後にオブジェクトの変更を行いません。"
                            },
                            name = "static"
                        },
                        {
                            description = "The object data will always change between draws.",
                            descriptiont = {
                                de = "Der SpriteBatch wird sich zwischen jedem Frame verändern.",
                                jp = "オブジェクトのデータは描画中に常時変更します。"
                            },
                            name = "stream"
                        }
                    },
                    description = "Usage hints for SpriteBatches and Meshes to optimize data storage and access.",
                    descriptiont = {
                        de = "Nutzungshinweise für SpriteBatches um die Speichernutzung im Grafikprozessor zu optimieren.",
                        jp = "SpriteBatch と Mesh でデータの格納と参照を最適化するための使用方法の手がかりです。"
                    },
                    minidescriptiont = {
                        de = "Nutzungshinweise für SpriteBatches.",
                        jp = "SpriteBatch と Mesh に対する使用方法の手がかりです。"
                    },
                    name = "SpriteBatchUsage"
                },
                {
                    constants = {
                        {
                            description = "The transformation stack (love.graphics.translate, love.graphics.rotate, etc.)",
                            descriptiont = {
                                jp = "変換スタック (love.graphics.translate, love.graphics.rotate など)。"
                            },
                            name = "transform"
                        },
                        {
                            description = "All love.graphics state, including transform state.",
                            descriptiont = {
                                jp = "変換状態を含む、全ての love.graphics における状態。"
                            },
                            name = "all"
                        }
                    },
                    description = "Graphics state stack types used with love.graphics.push.",
                    descriptiont = {
                        jp = "love.graphics.push にて使用されるグラフィックス状態におけるスタックの種類です。"
                    },
                    minidescriptiont = {
                        jp = "love.graphics.push にて使用されるグラフィックス状態におけるスタックの種類です。"
                    },
                    name = "StackType"
                },
                {
                    constants = {
                        {
                            description = "The stencil value of a pixel will be replaced by the value specified in love.graphics.stencil, if any object touches the pixel.",
                            descriptiont = {
                                jp = "ピクセルにオブジェクトが接触している場合、ピクセルのステンシル値は love.graphics.stencil により指定された値で置換されます。"
                            },
                            name = "replace"
                        },
                        {
                            description = "The stencil value of a pixel will be incremented by 1 for each object that touches the pixel. If the stencil value reaches 255 it will stay at 255.",
                            descriptiont = {
                                jp = "ピクセルに接触している各オブジェクトに対してステンシル値は 1 加算されます。ステンシル値が 255 まで到達した場合は 255 のままになります。"
                            },
                            name = "increment"
                        },
                        {
                            description = "The stencil value of a pixel will be decremented by 1 for each object that touches the pixel. If the stencil value reaches 0 it will stay at 0.",
                            descriptiont = {
                                jp = "ピクセルに接触している各オブジェクトに対してステンシル値は 1 減算されます。 ステンシル値が 0 まで到達した場合は 0 のままになります。"
                            },
                            name = "decrement"
                        },
                        {
                            description = "The stencil value of a pixel will be incremented by 1 for each object that touches the pixel. If a stencil value of 255 is incremented it will be set to 0.",
                            descriptiont = {
                                jp = "ピクセルに接触している各オブジェクトに対してステンシル値は 1 加算されます。ステンシル値として 255 が加算される場合は 0 を設定します。"
                            },
                            name = "incrementwrap"
                        },
                        {
                            description = "The stencil value of a pixel will be decremented by 1 for each object that touches the pixel. If the stencil value of 0 is decremented it will be set to 255.",
                            descriptiont = {
                                jp = "ピクセルに接触している各オブジェクトに対してステンシル値は 1 減算されます。ステンシル値として 0 が減算された場合は 255 を設定します。"
                            },
                            name = "decrementwrap"
                        },
                        {
                            description = "The stencil value of a pixel will be bitwise-inverted for each object that touches the pixel. If a stencil value of 0 is inverted it will become 255.",
                            descriptiont = {
                                jp = "ピクセルに接触している各オブジェクトに対してステンシル値はビットごとに反転されます。ステンシル値として 0 が反転された場合は 255 になります。"
                            },
                            name = "invert"
                        }
                    },
                    description = "How a stencil function modifies the stencil values of pixels it touches.",
                    descriptiont = {
                        jp = "オブジェクトに接触しているピクセルのステンシル値をステンシル関数で変更する方法。"
                    },
                    minidescriptiont = {
                        jp = "オブジェクトに接触しているピクセルのステンシル値をステンシル関数で変更する方法。"
                    },
                    name = "StencilAction"
                },
                {
                    constants = {
                        {
                            description = "How the image wraps inside a Quad with a larger quad size than image size. This also affects how Meshes with texture coordinates which are outside the range of [0, 1] are drawn, and the color returned by the Texel Shader function when using it to sample from texture coordinates outside of the range of [0, 1].",
                            descriptiont = {
                                jp = "テクスチャを固定します。一度だけ出現します。テクスチャの正常範囲外領域はテクスチャの輪郭線ピクセルに基づいて着色されます。",
                                pt = "Pinça a imagem. Aparece somente uma.",
                                ru = "Фиксировать изображение. Повторяется только один раз"
                            },
                            name = "clamp"
                        },
                        {
                            description = "Repeat the image. Fills the whole available extent.",
                            descriptiont = {
                                jp = "テクスチャを反復します。利用可能な範囲全体を塗りつぶします。",
                                pt = "Repete a imagem. Preenche todo extensão do espaço disponível.",
                                ru = "Повторять изображение. Заполняет всю имеющуюся область."
                            },
                            name = "repeat"
                        },
                        {
                            description = "Repeat the texture, flipping it each time it repeats. May produce better visual results than the repeat mode when the texture doesn't seamlessly tile.",
                            descriptiont = {
                                jp = "毎回反復する度に反転を行うことで、テクスチャを反復します。テクスチャが繋ぎ目のないタイルではない時に repeat 方式よりも良い視覚的な結果を生成するかもしれません。"
                            },
                            name = "mirroredrepeat"
                        },
                        {
                            description = "Clamp the texture. Fills the area outside the texture's normal range with transparent black (or opaque black for textures with no alpha channel.)",
                            descriptiont = {
                                jp = "テクスチャを固定します。テクスチャの標準範囲外領域を透過な黒色 (または透過チャンネルがないテクスチャに対しては不透明な黒色) で塗りつぶします。"
                            },
                            name = "clampzero"
                        }
                    },
                    description = "How the image wraps inside a Quad with a larger quad size than image size. This also affects how Meshes with texture coordinates which are outside the range of [0, 1] are drawn, and the color returned by the Texel Shader function when using it to sample from texture coordinates outside of the range of [0, 1].",
                    descriptiont = {
                        jp = "画像尺度より大きい四辺形の尺度で Quad の内側へ画像を加工する方法を指定します。同様に Mesh をテクスチャ座標 1 の範囲外で描画する方法、および 1 の範囲外でテクスチャ座標のサンプルを使用するときに Texel シェーダー関数で色を返すための方法に影響します。\n\nFile:ComparisonWraps.png",
                        pt = "Como uma imagem será acondicionada dentro de um Quad largo.",
                        ru = "Как изображение покрывает область большого Quad'а."
                    },
                    minidescriptiont = {
                        jp = "大きい四辺形の内側に画像を加工する方法を指定します。",
                        pt = "Como uma imagem será acondicionada dentro de um Quad largo.",
                        ru = "Как изображение покрывает область большого Quad'а."
                    },
                    name = "WrapMode"
                }
            },
            functions = {
                {
                    description = "Draws a filled or unfilled arc at position (x, y). The arc is drawn from angle1 to angle2 in radians. The segments parameter determines how many segments are used to draw the arc. The more segments, the smoother the edge.",
                    descriptiont = {
                        de = "Zeichnet einen gefüllten oder ungefüllten Bogen an der Position (x, y). Der Boden wird von winkel1 zu winkel2 gezeichnet (die verwendete Winkeleinheit wird dabei in Radianten angegeben). Das segmente Parameter bestimmte wieviele Segmente beim Zeichnen genutzt werden sollen. Je mehr Segmente der Bogen hat, desto runder / glatter wird er gezeichnet.",
                        jp = "塗り潰しまたは中抜きの円弧を (x, y) 座標へ描画します。円弧は angle1 から angle2 へ 弧度(ラジアン)単位を用いて描画されます。 引数 segments (セグメント) は円弧を描画するために使用する線分の数を決定します。線分を多くすると、角が滑らかな曲線になります。",
                        pt = "Desenha um arco preenchido ou não preenchido na posição (x, y). O arco é desenhado do angulo1 até o angulo2 em radianos. O parâmetro segmentos determina quantos segmentos são usados para desenhar o arco. Quanto mais segmentos, mais suave a borda."
                    },
                    minidescriptiont = {
                        de = "Zeichnet einen Bogen.",
                        jp = "円弧を描画します。",
                        pt = "Desenha um arco."
                    },
                    name = "arc",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "How to draw the arc.",
                                    descriptiont = {
                                        de = "Wie der Bogen gezeichnet werden soll.",
                                        jp = "円弧の描画方法。",
                                        pt = "Como desenhar o arco"
                                    },
                                    name = "drawmode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of the center along x-axis.",
                                    descriptiont = {
                                        de = "Die Position des Zentrums entlang der x-Achse.",
                                        jp = "中心からの x-軸座標。",
                                        pt = "A posição do centro ao longo do eixo x."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the center along y-axis.",
                                    descriptiont = {
                                        de = "Die Position des Zentrums entlang der y-Achse.",
                                        jp = "中心からの y-軸座標。",
                                        pt = "A posição do centro ao longo do eixo y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "Radius of the arc.",
                                    descriptiont = {
                                        de = "Der Radius des Bogens.",
                                        jp = "円弧の半径。",
                                        pt = "O raio do arco."
                                    },
                                    name = "radius",
                                    type = "number"
                                },
                                {
                                    description = "The angle at which the arc begins.",
                                    descriptiont = {
                                        de = "Der Winkel an dem der Bogen beginnt.",
                                        jp = "円弧における始点の角度。",
                                        pt = "O ângulo no qual o arco começa."
                                    },
                                    name = "angle1",
                                    type = "number"
                                },
                                {
                                    description = "The angle at which the arc terminates.",
                                    descriptiont = {
                                        de = "Der Winkel an dem der Bogen endet.",
                                        jp = "円弧における終点の角度。",
                                        pt = "O ângulo no qual o arco termina."
                                    },
                                    name = "angle2",
                                    type = "number"
                                },
                                {
                                    default = "10",
                                    description = "The number of segments used for drawing the arc.",
                                    descriptiont = {
                                        de = "Die Anzahl der Segmente die zum Zeichnen verwendet werden sollen.",
                                        jp = "円弧を描画するために使用する線分の数。",
                                        pt = "O número de segmentos usados para desenhar o arco."
                                    },
                                    name = "segments",
                                    type = "number"
                                }
                            },
                            description = "Draws an arc using the \"pie\" ArcType.",
                            descriptiont = {
                                de = "Der Bogen wird gegen den Uhrzeigersinn gezeichnet, wenn der Anfangswinkel größer als der Endwinkel ist. Der Bogen wird im Uhrzeigersinn gezeichnet, wenn der Endwinkel größer als der Anfangswinkel ist.",
                                jp = "\"pie\" 型の ArcType を使用して円弧を描画します。",
                                pt = "Se o ângulo inicial for numericamente maior que o ângulo final, o arco é desenhado em sentido anti-horário. Se o ângulo final é numericamente maior que o ângulo inicial, o arco é desenhado em sentido horário."
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "How to draw the arc.",
                                    descriptiont = {
                                        jp = "円弧の描画方法。"
                                    },
                                    name = "drawmode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The type of arc to draw.",
                                    descriptiont = {
                                        jp = "描画で使用する円弧の種類。"
                                    },
                                    name = "arctype",
                                    type = "ArcType"
                                },
                                {
                                    description = "The position of the center along x-axis.",
                                    descriptiont = {
                                        jp = "中心からの x-軸座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the center along y-axis.",
                                    descriptiont = {
                                        jp = "中心からの y-軸座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "Radius of the arc.",
                                    descriptiont = {
                                        jp = "円弧の半径。"
                                    },
                                    name = "radius",
                                    type = "number"
                                },
                                {
                                    description = "The angle at which the arc begins.",
                                    descriptiont = {
                                        jp = "円弧における始点の角度。"
                                    },
                                    name = "angle1",
                                    type = "number"
                                },
                                {
                                    description = "The angle at which the arc terminates.",
                                    descriptiont = {
                                        jp = "円弧における終点の角度。"
                                    },
                                    name = "angle2",
                                    type = "number"
                                },
                                {
                                    default = "10",
                                    description = "The number of segments used for drawing the arc.",
                                    descriptiont = {
                                        jp = "円弧を描画するために使用する線分の数。"
                                    },
                                    name = "segments",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draws a circle.",
                    descriptiont = {
                        de = "Zeichnet einen Kreis.",
                        jp = "円を描画します。",
                        pt = "Desenha um círculo.",
                        ru = "Рисует окружность."
                    },
                    minidescriptiont = {
                        de = "Zeichnet einen Kreis.",
                        jp = "円を描画します。",
                        pt = "Desenha um círculo.",
                        ru = "Рисует окружность."
                    },
                    name = "circle",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "How to draw the circle.",
                                    descriptiont = {
                                        jp = "円の描画方法。"
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of the center along x-axis.",
                                    descriptiont = {
                                        jp = "中心からの x-軸座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the center along y-axis.",
                                    descriptiont = {
                                        jp = "中心からの y-軸座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the circle.",
                                    descriptiont = {
                                        jp = "円の半径。"
                                    },
                                    name = "radius",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "How to draw the circle.",
                                    descriptiont = {
                                        de = "Bestimmt den Zeichenmodus.",
                                        jp = "円の描画方法。",
                                        pt = "Como desenhar o círculo.",
                                        ru = "Как рисовать окружность."
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of the center along x-axis.",
                                    descriptiont = {
                                        de = "Die Position des Kreismittelpunkts auf der x-Achse.",
                                        jp = "中心からの x-軸座標。",
                                        pt = "A posição do centro ao longo do eixo x.",
                                        ru = "X координата центра окружности."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the center along y-axis.",
                                    descriptiont = {
                                        de = "Die Position des Kreismittelpunkts auf der y-Achse.",
                                        jp = "中心からの y-軸座標。",
                                        pt = "A posição do centro ao longo do eixo y.",
                                        ru = "Y координата центра окружности."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the circle.",
                                    descriptiont = {
                                        de = "Der Radius der Kreises.",
                                        jp = "円の半径。",
                                        pt = "O raio do círculo.",
                                        ru = "Радиус окружности."
                                    },
                                    name = "radius",
                                    type = "number"
                                },
                                {
                                    description = "The number of segments used for drawing the circle. Note: The default variable for the segments parameter varies between different versions of LÖVE.",
                                    descriptiont = {
                                        de = "Die Anzahl der einzelnen Segmente welche zum zeichnen des Kreises verwendet werden sollen (je höher die Anzahl, desto \"runder\" wird der Kreis.",
                                        jp = "円を描画するために使用する線分の数。注釈: 引数 segments を省略した場合の変数値は LÖVE のバージョンにより異なります。",
                                        pt = "O número de segmentos usados para desenhar o circulo.",
                                        ru = "Количество сегментов, используемых для рисования окружности. Чем их меньше, тем более угловатой будет окружность."
                                    },
                                    name = "segments",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                de = "Zu beachten ist, dass die x und y Position eines Kreises im Gegensatz zu anderen Objekten nicht die obere linke \"Ecke\" des Kreises repräsentiert. Stattdessen befindet sich hier der Kreismittelpunkt.\n\n== Beispiel ==\n\n=== Die Auswirkung des Segment Arguments  ===\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.draw()\n\n    love.graphics.setColor(255, 255, 255);\n\n    love.graphics.circle(\"fill\", 300, 300, 50, 100); -- Zeichnet weißen Kreis mit 100 Segmenten.\n\n    love.graphics.setColor(255, 0, 0);\n\n    love.graphics.circle(\"fill\", 300, 300, 50, 5);   -- Zeichnet roten Kreis mit fünf Segmenten.\n\nend\n\n&lt;/source&gt;"
                            }
                        }
                    }
                },
                {
                    description = "Clears the screen to the background color in LÖVE 0.9.2 and earlier, or to the specified color in 0.10.0 and newer.\n\nThis function is called automatically before love.draw in the default love.run function. See the example in love.run for a typical use of this function.\n\nNote that the scissor area bounds the cleared region.",
                    descriptiont = {
                        de = "Löscht den aktuellen Bildschirminhalt und füllt ihn mit der Hintergrundfarbe. Das Koordinatensystem wird ebenfalls zurückgesetzt.\n\nDie Funktion wird automatisch von love.run aufgerufen bevor love.draw läuft. \n\nZu Beachten ist, dass die zu löschende Fläche durch love.graphics.setScissor gesteuert werden kann.",
                        jp = "LÖVE 背景色で、または 0.10.0 以降では指定された色で画面を消去します。\n\nこの関数は love.draw の前に標準の love.run 関数から自動的に呼ばれます。この関数の典型的な使用法については love.run の用例を参照してください。\n\n注意点として消去の領域は切り抜き範囲において制限されます。",
                        pt = "Limpa a tela, pinta com a cor de fundo e restaura o sistema de coordenadas padrão.\n\nEsta função é chamada automaticamente antes de love.draw na função love.run padrão. Veja o exemplo em love.run de um uso típico dessa função.\n\nNote que área de recorte limita a região a ser limpa.",
                        ru = "Закрашивает экран цветом фона.\n\nЭта функция вызывается в стандартной реализации функции love.run перед  вызовом love.draw. В примерах для love.run показано как обычно используется эта функция.\n\nУчтите, что если у вас установлена зона отсечения, то закрашена будет только эта зона, а не весь экран."
                    },
                    minidescriptiont = {
                        de = "Löscht den aktuellen Bildschirminhalt und füllt ihn mit der Hintergrundfarbe.",
                        jp = "背景色または指定色にて画面を消去します。",
                        pt = "Limpa a tela para cor de fundo.",
                        ru = "Закрашивает экран цветом фона."
                    },
                    name = "clear",
                    variants = {
                        {
                            description = "Clears the screen to the background color in 0.9.2 and earlier, or to transparent black (0, 0, 0, 0) in LÖVE 0.10.0 and newer."
                        },
                        {
                            arguments = {
                                {
                                    description = "The red channel of the color to clear the screen to.",
                                    descriptiont = {
                                        jp = "画面の消去に使用する赤チャンネルの色です。"
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the color to clear the screen to.",
                                    descriptiont = {
                                        jp = "画面の消去に使用する緑チャンネルの色です。"
                                    },
                                    name = "g",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the color to clear the screen to.",
                                    descriptiont = {
                                        jp = "画面の消去に使用する青チャンネルの色です。"
                                    },
                                    name = "b",
                                    type = "number"
                                },
                                {
                                    default = "255",
                                    description = "The alpha channel of the color to clear the screen to.",
                                    descriptiont = {
                                        jp = "画面の消去に使用する透過チャンネルの色です。"
                                    },
                                    name = "a",
                                    type = "number"
                                }
                            },
                            description = "Clears the screen or active Canvas to the specified color.",
                            descriptiont = {
                                jp = "0.9.2 以前では背景色、または LÖVE 0.10.0 以降では透過付き黒色 (0, 0, 0, 0) にて画面を消去します。"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table in the form of {r, g, b, a} containing the color to clear the first active Canvas to.",
                                    descriptiont = {
                                        jp = "最初に有効な Canvas の消去に使用する色を {r, g, b, a} 形式で有するテーブル。"
                                    },
                                    name = "color",
                                    type = "table"
                                },
                                {
                                    description = "Additional tables for each active Canvas.",
                                    descriptiont = {
                                        jp = "有効な各 Canvas に対する追加のテーブル。"
                                    },
                                    name = "...",
                                    type = "table"
                                }
                            },
                            description = "Clears multiple active Canvases to different colors, if multiple Canvases are active at once via love.graphics.setCanvas.",
                            descriptiont = {
                                jp = "複数の Canvas が love.graphics.setCanvas により同時に有効な場合は、複数の有効な  Canvas を異なる色で消去します。"
                            }
                        }
                    }
                },
                {
                    description = "Discards (trashes) the contents of the screen or active Canvas. This is a performance optimization function with niche use cases.\n\nIf the active Canvas has just been changed and the \"replace\" BlendMode is about to be used to draw something which covers the entire screen, calling love.graphics.discard rather than calling love.graphics.clear or doing nothing may improve performance on mobile devices.\n\nOn some desktop systems this function may do nothing.",
                    descriptiont = {
                        jp = "画面または有効な Canvas の内容を廃棄 (破壊) します。これは特定の用途で使用する性能最適化関数です。\n\n有効な Canvas を変更するだけであり、 \"replace\" の BlendMode で画面全体を扱う描画を使用する場合は、 love.graphics.discard を呼び出すよりも love.graphics.clear を呼び出す、または何も行わないことはモバイル機器での性能改善になります。\n\nこの関数は一部のデスクトップシステムでは動作しません。"
                    },
                    minidescriptiont = {
                        jp = "画面または有効な Canvas の内容を廃棄 (破壊) します。"
                    },
                    name = "discard",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "true",
                                    description = "Whether to discard the texture(s) of the active Canvas(es) (the contents of the screen if no Canvas is active).",
                                    descriptiont = {
                                        jp = "有効な Canvas のテクスチャ (Canvas が有効ではない場合は画面の内容) を破棄するかどうか。"
                                    },
                                    name = "discardcolor",
                                    type = "boolean"
                                },
                                {
                                    default = "true",
                                    description = "Whether to discard the contents of the stencil buffer of the screen / active Canvas.",
                                    descriptiont = {
                                        jp = "画面 / 有効な Canvas にあるステンシル・バッファの内容を廃棄するかどうか。"
                                    },
                                    name = "discardstencil",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "An array containing boolean values indicating whether to discard the texture of each active Canvas, when multiple simultaneous Canvases are active.",
                                    descriptiont = {
                                        jp = "Canvas が複数同時に有効な時に、有効な各 Canvas のテクスチャを廃棄するかどうかを示すブール値を有する配列。"
                                    },
                                    name = "discardcolors",
                                    type = "table"
                                },
                                {
                                    default = "true",
                                    description = "Whether to discard the contents of the stencil buffer of the screen / active Canvas.",
                                    descriptiont = {
                                        jp = "画面 / 有効な Canvas にあるステンシル・バッファの内容を廃棄するかどうか。"
                                    },
                                    name = "discardstencil",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draws a Drawable object (an Image, Canvas, SpriteBatch, ParticleSystem, Mesh, or Video) on the screen with optional rotation, scaling and shearing.\n\nObjects are drawn relative to their local coordinate system. The origin is by default located at the top left corner of Image and Canvas. All scaling, shearing, and rotation arguments transform the object relative to that point. Also, the position of the origin can be specified on the screen coordinate system.\n\nIt's possible to rotate an object about its center by offsetting the origin to the center. Angles must be given in radians for rotation. One can also use a negative scaling factor to flip about its centerline.\n\nNote that the offsets are applied before rotation, scaling, or shearing; scaling and shearing are applied before rotation.\n\nThe right and bottom edges of the object are shifted at an angle defined by the shearing factors.",
                    descriptiont = {
                        de = "Zeichnet ein zeichenbares Objekt (z.B. ein Bild) auf den Bildschirm, wobei sich Größe, Rotation und Scherung anpassen lassen.\n\nObjekte werden dabei relativ zu ihrem lokalen Koordinatensystem gezeichnet. Der Ursprung ist standardmäßig die obere linke Ecke bei Bildern und Leinwänden. Alle Skalierungs-, Rotations- und Verformungsoperationen werden daher relativ zu diesem Punkt durchgeführt.\n\nUm ein Objekt um seine eigene Mitte zu rotieren, muss der Ursprung in die Mitte des Objekts verschoben werden. Das Objekt kann durch Verwendung negativer Skalierungswerte gespiegelt werden.\n\nVerschiebungen werden angewendet bevor das Objekt rotiert, skaliert oder deformiert wird. Skalierung und Scherung laufen dabei vor der Rotation ab.",
                        jp = "Drawable オブジェクト(Image, Canvas, SpriteBatch, ParticleSystem, Mesh, または Video) に回転、尺度変更(拡大・縮小)および剪断を選択して画面へ描画します。\n\nオブジェクトはローカル座標系に関連づけられて描画されます。原点の標準位置は Image また Canvas の左上端です。尺度変更、剪断および回転の全ての引数はその点と関連するオブジェクトを変形します。さらに、原点の位置は画面座標系により指定できます。\n\n中心の原点の支距により、その中心に対してオブジェクトを回転させることは可能です。必ず回転角度は弧度を与えてください。尺度変更係数へ負数を使用することで中心線から反転することもできます。\n\n注意として支距は回転、尺度変更、または剪断の前に適用されます。尺度変更および剪断は回転の前に適用されます。\n\nオブジェクトの右と左の端は剪断係数へ角を定義することによりずらすことができます。",
                        pt = "Desenha um objeto Desenhável (uma Imagem, uma Pintura, um LoteDeSprites, um SistemaDePartículas, ou uma Malha) na tela, com rotação, redimensionamento e inclinação opcionais.\n\nObjetos são desenhados em relação ao seu sistema de coordenadas local. Por padrão, a origem se encontra no canto superior esquerdo da Imagem e da Pintura. Todos os argumentos de tamanho, inclinação e rotação transformam o objeto em relação a esse ponto. Além disso, a posição de origem pode ser especificada no sistema de coordenadas da tela.\n\nÉ possível girar um objeto em torno de seu centro deslocando a origem para o centro. Para a rotação, ângulos devem ser dados em radianos. Também se pode usar um fator de redimensionamento negativo para virar a partir do centro. \n\nRepare que os deslocamentos são aplicados antes de rotação, redimensionamento ou inclinação; redimensionamento e inclinação são aplicados antes da rotação.\n\nOs limites da direita e debaixo do objeto são deslocados num ângulo definido pelos fatores de inclinação.",
                        ru = "Рисует объект на экране."
                    },
                    minidescriptiont = {
                        de = "Zeichnet Objekte auf den Bildschirm.",
                        jp = "オブジェクトを画面へ描画します。",
                        pt = "Desenha objetos na tela.",
                        ru = "Рисует объект на экране."
                    },
                    name = "draw",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "A drawable object.",
                                    descriptiont = {
                                        de = "Ein zeichenbares Objekt.",
                                        jp = "描画可能なオブジェクト。",
                                        pt = "Um objeto desenhável."
                                    },
                                    name = "drawable",
                                    type = "Drawable"
                                },
                                {
                                    default = "0",
                                    description = "The position to draw the object (x-axis).",
                                    descriptiont = {
                                        de = "Die Position auf der x-Achse an der das Objekt gezeichnet werden soll.",
                                        jp = "オブジェクトを描画する座標 (x-軸)。",
                                        pt = "A posição em que o objeto será desenhado (eixo x)."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The position to draw the object (y-axis).",
                                    descriptiont = {
                                        de = "Die Position auf der y-Achse an der das Objekt gezeichnet werden soll.",
                                        jp = "オブジェクトを描画する座標 (y-軸)。",
                                        pt = "A posição em que o objeto será desenhado (eixo y)."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Orientation (radians).",
                                    descriptiont = {
                                        de = "Die Rotation in Radianten.",
                                        jp = "方向 (弧度)。",
                                        pt = "Orientação (radianos)."
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "Scale factor (x-axis). Can be negative.",
                                    descriptiont = {
                                        de = "Der Skalierungsfaktor in x-Richtung.",
                                        jp = "尺度変更係数 (x-軸)。",
                                        pt = "Fator de escala (eixo x)."
                                    },
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "Scale factor (y-axis). Can be negative.",
                                    descriptiont = {
                                        de = "Der Skalierungsfaktor in y-Richtung.",
                                        jp = "尺度変更係数 (y-軸)。",
                                        pt = "Fator de escala (eixo y)."
                                    },
                                    name = "sy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (x-axis). (A value of 20 would effectively move your drawable object 20 pixels to the left.)",
                                    descriptiont = {
                                        de = "Verschiebung vom Urpsrung auf der x-Achse.",
                                        jp = "原点の支距 (x-軸)。",
                                        pt = "Deslocamento da origem (eixo x)."
                                    },
                                    name = "ox",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (y-axis). (A value of 20 would effectively move your drawable object 20 pixels up.)",
                                    descriptiont = {
                                        de = "Verschiebung vom Urpsrung auf der y-Achse.",
                                        jp = "原点の支距 (y-軸)。",
                                        pt = "Deslocamento da origem (eixo y)."
                                    },
                                    name = "oy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing factor (x-axis).",
                                    descriptiont = {
                                        de = "Der Scherfaktor in x-Richtung.",
                                        jp = "剪断係数 (x-軸)。",
                                        pt = "Fator de inclinação (eixo x)."
                                    },
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing factor (y-axis).",
                                    descriptiont = {
                                        de = "Der Scherfaktor in y-Richtung.",
                                        jp = "剪断係数 (y-軸)。",
                                        pt = "Fator de inclinação (eixo y)."
                                    },
                                    name = "ky",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A Texture (Image or Canvas) to texture the Quad with.",
                                    descriptiont = {
                                        jp = "Quad へテクスチャとして取り込む Texture または Canvas です。"
                                    },
                                    name = "texture",
                                    type = "Texture"
                                },
                                {
                                    description = "The Quad to draw on screen.",
                                    descriptiont = {
                                        jp = "画面へ描画する Quad です。"
                                    },
                                    name = "quad",
                                    type = "Quad"
                                },
                                {
                                    default = "0",
                                    description = "The position to draw the object (x-axis).",
                                    descriptiont = {
                                        jp = "オブジェクトを描画する座標 (x-軸)。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The position to draw the object (y-axis).",
                                    descriptiont = {
                                        jp = "オブジェクトを描画する座標 (y-軸)。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Orientation (radians).",
                                    descriptiont = {
                                        jp = "方向 (弧度)。"
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "Scale factor (x-axis). Can be negative.",
                                    descriptiont = {
                                        jp = "尺度変更係数 (x-軸)。"
                                    },
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "Scale factor (y-axis). Can be negative.",
                                    descriptiont = {
                                        jp = "尺度変更係数 (y-軸)。"
                                    },
                                    name = "sy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (x-axis).",
                                    descriptiont = {
                                        jp = "原点の支距 (x-軸)。"
                                    },
                                    name = "ox",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (y-axis)",
                                    descriptiont = {
                                        jp = "原点の支距 (y-軸)。"
                                    },
                                    name = "oy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing factor (x-axis).",
                                    descriptiont = {
                                        jp = "剪断係数 (x-軸)。"
                                    },
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing factor (y-axis).",
                                    descriptiont = {
                                        jp = "剪断係数 (y-軸)。"
                                    },
                                    name = "ky",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draws an ellipse.",
                    descriptiont = {
                        jp = "楕円を描画します。"
                    },
                    minidescriptiont = {
                        jp = "楕円を描画します。"
                    },
                    name = "ellipse",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "How to draw the ellipse.",
                                    descriptiont = {
                                        jp = "楕円の描画方法。"
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of the center along x-axis.",
                                    descriptiont = {
                                        jp = "中心からの x-軸座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the center along y-axis.",
                                    descriptiont = {
                                        jp = "中心からの y-軸座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the ellipse along the x-axis (half the ellipse's width).",
                                    descriptiont = {
                                        jp = "x-軸からの楕円の半径 (楕円の幅の半分)。"
                                    },
                                    name = "radiusx",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the ellipse along the y-axis (half the ellipse's height).",
                                    descriptiont = {
                                        jp = "y-軸からの楕円の半径 (楕円の高さの半分)。"
                                    },
                                    name = "radiusy",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "How to draw the ellipse.",
                                    descriptiont = {
                                        jp = "楕円の描画方法。"
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of the center along x-axis.",
                                    descriptiont = {
                                        jp = "中心からの x-軸座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the center along y-axis.",
                                    descriptiont = {
                                        jp = "中心からの y-軸座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the ellipse along the x-axis (half the ellipse's width).",
                                    descriptiont = {
                                        jp = "x-軸からの楕円の半径 (楕円の幅の半分)。"
                                    },
                                    name = "radiusx",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the ellipse along the y-axis (half the ellipse's height).",
                                    descriptiont = {
                                        jp = "y-軸からの楕円の半径 (楕円の高さの半分)。"
                                    },
                                    name = "radiusy",
                                    type = "number"
                                },
                                {
                                    description = "The number of segments used for drawing the ellipse.",
                                    descriptiont = {
                                        jp = "楕円を描画するために使用する線分の数。"
                                    },
                                    name = "segments",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current background color.",
                    descriptiont = {
                        de = "Gibt die derzeitige Hintergrundfarbe zurück.",
                        jp = "現在の背景色を取得します。",
                        pt = "Obtém a cor atual do fundo de tela.",
                        ru = "Получает текущий цвет фона."
                    },
                    minidescriptiont = {
                        de = "Gibt die derzeitige Hintergrundfarbe zurück.",
                        jp = "現在の背景色を取得します。",
                        pt = "Obtém a cor atual do fundo de tela.",
                        ru = "Получает текущий цвет фона."
                    },
                    name = "getBackgroundColor",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The red component (0-255).",
                                    descriptiont = {
                                        de = "Der rote Farbanteil (0-255).",
                                        jp = "赤色の成分 (0-255)",
                                        pt = "A componente vermelha (0-255)."
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    description = "The green component (0-255).",
                                    descriptiont = {
                                        de = "Der grüne Farbanteil (0-255).",
                                        jp = "緑色の成分 (0-255)",
                                        pt = "A componente verde (0-255)."
                                    },
                                    name = "g",
                                    type = "number"
                                },
                                {
                                    description = "The blue component (0-255).",
                                    descriptiont = {
                                        de = "Der blaue Farbanteil (0-255).",
                                        jp = "青色の成分 (0-255)",
                                        pt = "A componente azul (0-255)."
                                    },
                                    name = "b",
                                    type = "number"
                                },
                                {
                                    description = "The alpha component (0-255).",
                                    descriptiont = {
                                        de = "Die Transparenz (0-255).",
                                        jp = "透過の成分 (0-255)",
                                        pt = "A componente alfa (0-255)."
                                    },
                                    name = "a",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the blending mode.",
                    descriptiont = {
                        de = "Gibt den Mischungsmodus für transparente Objekte zurück.",
                        jp = "混合方式を取得します。",
                        pt = "Obtém o modo de mistura.",
                        ru = "Получает режим смешивания."
                    },
                    minidescriptiont = {
                        de = "Gibt den Mischungsmodus für Transparente Objekte zurück.",
                        jp = "混合方式を取得します。",
                        pt = "Obtém o modo de mistura.",
                        ru = "Получает режим смешивания.."
                    },
                    name = "getBlendMode",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current blend mode.",
                                    descriptiont = {
                                        jp = "現在の混合モード。"
                                    },
                                    name = "mode",
                                    type = "BlendMode"
                                },
                                {
                                    description = "The current blend alpha mode – it determines how the alpha of drawn objects affects blending.",
                                    descriptiont = {
                                        jp = "現在の透過混合方式 ― 描画されたオブジェクトの透過色がどのように混合するのかに対して影響を及ぼすか決定します。"
                                    },
                                    name = "alphamode",
                                    type = "BlendAlphaMode"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current target Canvas.",
                    descriptiont = {
                        jp = "現在の対象となっている Canvas を取得します。",
                        pt = "Obtém a Pintura alvo atual."
                    },
                    minidescriptiont = {
                        jp = "現在の対象となっている Canvas を取得します。",
                        pt = "Retorna a Pintura alvo atual."
                    },
                    name = "getCanvas",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The Canvas set by setCanvas. Returns nil if drawing to the real screen.",
                                    descriptiont = {
                                        jp = "setCanvas により設定されたキャンバス。 nil が返されたときは実画面へ描画されています。",
                                        pt = "A Pintura definida por setCanvas. Retorna nil se estiver desenhando na tela real."
                                    },
                                    name = "canvas",
                                    type = "Canvas"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the available Canvas formats, and whether each is supported.",
                    descriptiont = {
                        jp = "利用可能なキャンバスの形式、および各種形式に対応しているかどうかを取得します。"
                    },
                    minidescriptiont = {
                        jp = "利用可能なキャンバスの形式、および各種形式に対応しているかどうかを取得します。"
                    },
                    name = "getCanvasFormats",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A table containing CanvasFormats as keys, and a boolean indicating whether the format is supported as values. Not all systems support all formats.",
                                    descriptiont = {
                                        jp = "キーとして CanvasFormat が入っているテーブル、およびブール値により対応形式を示します。全てのシステムで全形式に対応しているとは限りません。"
                                    },
                                    name = "formats",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current color.",
                    descriptiont = {
                        jp = "現在の色を取得します。",
                        pt = "Obtém a cor atual.",
                        ru = "Получает текущий цвет рисования."
                    },
                    minidescriptiont = {
                        jp = "現在の色を取得します。",
                        pt = "Obtém a cor atual.",
                        ru = "Получает текущий цвет рисования."
                    },
                    name = "getColor",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The red component (0-255).",
                                    descriptiont = {
                                        jp = "赤色の成分 (0-255)",
                                        pt = "A componente vermelha (0-255).",
                                        ru = "Красная компонента цвета (0-255)."
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    description = "The red component (0-255).",
                                    descriptiont = {
                                        jp = "緑色の成分 (0-255)",
                                        pt = "A componente verde (0-255).",
                                        ru = "Зелёная компонента цвета (0-255)."
                                    },
                                    name = "g",
                                    type = "number"
                                },
                                {
                                    description = "The blue component (0-255).",
                                    descriptiont = {
                                        jp = "青色の成分 (0-255)",
                                        pt = "A componente azul (0-255).",
                                        ru = "Синяя компонента цвета (0-255)."
                                    },
                                    name = "b",
                                    type = "number"
                                },
                                {
                                    description = "The alpha component (0-255).",
                                    descriptiont = {
                                        jp = "透過の成分 (0-255)",
                                        pt = "A componente alfa (0-255).",
                                        ru = " Альфа компонента цвета (прозрачность) (0-255)."
                                    },
                                    name = "a",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the active color components used when drawing. Normally all 4 components are active unless love.graphics.setColorMask has been used.\n\nThe color mask determines whether individual components of the colors of drawn objects will affect the color of the screen. They affect love.graphics.clear and Canvas:clear as well.",
                    descriptiont = {
                        jp = "描画時に使用される有効な色成分を取得します。通常は 4 種類全ての成分は love.graphics.setColorMask が使用されるまで有効です。\n\n色マスクは描画されたオブジェクトの各色の成分が画面の色に影響するかどうか決定します。また色マスクは同様に love.graphics.clear および Canvas:clear にも影響します。",
                        pt = "Obtém os componentes de cor ativos usados ao desenhar. Normalmente todos os 4 componentes estão ativos, a não ser que love.graphics.setColorMask tenha sido usada.\n\nA máscara de cor determina se os componentes individuais das cores de objetos desenhados afetarão a cor da tela ou não. Também afeta love.graphics.clear e Pintura:clear."
                    },
                    minidescriptiont = {
                        jp = "描画時に使用される有効な色成分を取得します。",
                        pt = "Obtém os componentes de cor ativos usados ao desenhar."
                    },
                    name = "getColorMask",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Whether the red color component is active when rendering.",
                                    descriptiont = {
                                        jp = "表示時に赤色の成分を有効にするかどうか。",
                                        pt = "Se o componente de cor vermelha é ativo ou não ao renderizar."
                                    },
                                    name = "r",
                                    type = "boolean"
                                },
                                {
                                    description = "Whether the green color component is active when rendering.",
                                    descriptiont = {
                                        jp = "表示時に緑色の成分を有効にするかどうか。",
                                        pt = "Se o componente de cor verde é ativo ou não ao renderizar."
                                    },
                                    name = "g",
                                    type = "boolean"
                                },
                                {
                                    description = "Whether the blue color component is active when rendering.",
                                    descriptiont = {
                                        jp = "表示時に青色の成分を有効にするかどうか。",
                                        pt = "Se o componente de cor azul é ativo ou não ao renderizar."
                                    },
                                    name = "b",
                                    type = "boolean"
                                },
                                {
                                    description = "Whether the alpha color component is active when rendering.",
                                    descriptiont = {
                                        jp = "表示時に透過の成分を有効にするかどうか。",
                                        pt = "Se o componente de cor alfa é ativo ou não ao renderizar."
                                    },
                                    name = "a",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the available compressed image formats, and whether each is supported.",
                    descriptiont = {
                        jp = "利用可能な圧縮された画像形式、および対応しているかどうかを取得します。"
                    },
                    minidescriptiont = {
                        jp = "利用可能な圧縮された画像形式、および対応しているかどうかを取得します。"
                    },
                    name = "getCompressedImageFormats",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A table containing CompressedFormats as keys, and a boolean indicating whether the format is supported as values. Not all systems support all formats.",
                                    descriptiont = {
                                        jp = "キーとして CompressedImageFormat が入っているテーブル、およびブール値により対応形式を示します。全てのシステムが全形式に対応しているとは限りません。"
                                    },
                                    name = "formats",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the default scaling filters used with Images, Canvases, and Fonts.",
                    descriptiont = {
                        jp = "Image, Canvas, および Font で使用される標準の尺度変更フィルタを返します。",
                        pt = "Retorna os filtros de redimensionamento padrão usados com Imagens, Pinturas e Fontes."
                    },
                    minidescriptiont = {
                        jp = "Image, Canvas, および Font で使用される標準の尺度変更フィルタを返します。",
                        pt = "Retorna os filtros de redimensionamento padrão usados com Imagens, Pinturas e Fontes."
                    },
                    name = "getDefaultFilter",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Filter mode used when scaling the image down.",
                                    descriptiont = {
                                        jp = "画像の縮小に使うフィルタのモード。",
                                        pt = "Modo de filtragem usado ao reduzir a imagem."
                                    },
                                    name = "min",
                                    type = "FilterMode"
                                },
                                {
                                    description = "Filter mode used when scaling the image up.",
                                    descriptiont = {
                                        jp = "画像の拡大に使うフィルタのモード。",
                                        pt = "Modo de filtragem usado ao ampliar a imagem."
                                    },
                                    name = "mag",
                                    type = "FilterMode"
                                },
                                {
                                    description = "Maximum amount of Anisotropic Filtering used.",
                                    descriptiont = {
                                        jp = "Anisotropic(異方性)フィルタの最大使用量。",
                                        pt = "Quantidade máxima de Filtragem Anisotrópica usada."
                                    },
                                    name = "anisotropy",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the width and height of the window.",
                    descriptiont = {
                        de = "Gibt die Breite und Höhe des Fensters in Pixeln zurück.",
                        jp = "ウィンドウの幅と高さをピクセル単位で取得します。"
                    },
                    minidescriptiont = {
                        de = "Gibt die Breite und Höhe des Fensters in Pixeln zurück.",
                        jp = "ウィンドウの幅と高さをピクセル単位で取得します。"
                    },
                    name = "getDimensions",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The width of the window.",
                                    descriptiont = {
                                        de = "Die Breite des Fensters in Pixeln.",
                                        jp = "ウィンドウの幅。"
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the window.",
                                    descriptiont = {
                                        de = "Die Höhe des Fensters in Pixeln.",
                                        jp = "ウィンドウの高さ。"
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current Font object.",
                    descriptiont = {
                        jp = "現在の Font オブジェクトを取得します。",
                        pt = "Obtém o objeto Fonte atual.",
                        ru = "Получает текущий шрифт."
                    },
                    minidescriptiont = {
                        jp = "現在の Font オブジェクトを取得します。",
                        pt = "Obtém o objeto Fonte atual.",
                        ru = "Получает текущий шрифт."
                    },
                    name = "getFont",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current Font, or nil if none is set.",
                                    descriptiont = {
                                        jp = "現在のフォント。標準のフォントは自動的に作成と設定が行われますが、なにも返されない場合は未設定です。",
                                        pt = "A Fonte atual. Cria e define automaticamente a fonte padrão, se nenhuma tiver sido definida.",
                                        ru = "Текущий шрифт или nil, если не установлен."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the height of the window.",
                    descriptiont = {
                        de = "Gibt die Höhe des Fensters in Pixeln zurück.",
                        jp = "ウィンドウの高さをピクセル単位で取得します。",
                        pt = "Obtém a altura da janela.",
                        ru = "Возвращает высоту окна."
                    },
                    minidescriptiont = {
                        de = "Gibt die Höhe des Fensters in Pixeln zurück.",
                        jp = "ウィンドウの高さをピクセル単位で取得します。",
                        pt = "Obtém a altura da janela.",
                        ru = "Получает высоту окна."
                    },
                    name = "getHeight",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The height of the window.",
                                    descriptiont = {
                                        de = "Die Höhe des Fensters in Pixeln.",
                                        jp = "ウィンドウの高さ。",
                                        pt = "A altura da janela.",
                                        ru = "Высота окна."
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the line join style.",
                    descriptiont = {
                        jp = "線の連結方式を取得します。",
                        pt = "Obtém o estilo de junção de linha."
                    },
                    minidescriptiont = {
                        jp = "線の連結方式を取得します。",
                        pt = "Obtém o estilo de junção de linha."
                    },
                    name = "getLineJoin",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The LineJoin style.",
                                    descriptiont = {
                                        jp = "使用されている LineJoin の方式を返します。",
                                        pt = "O estilo de JunçãoDeLinha."
                                    },
                                    name = "join",
                                    type = "LineJoin"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the line style.",
                    descriptiont = {
                        jp = "線の描画方法を取得します。",
                        pt = "Obtém o estilo de linha.",
                        ru = "Получает стиль линии."
                    },
                    minidescriptiont = {
                        jp = "線の描画方法を取得します。",
                        pt = "Obtém o estilo de linha.",
                        ru = "Получает стиль линии."
                    },
                    name = "getLineStyle",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current line style.",
                                    descriptiont = {
                                        jp = "現在の線の描画方法。",
                                        pt = "O estilo de linha atual.",
                                        ru = "Текущий стиль линии."
                                    },
                                    name = "style",
                                    type = "LineStyle"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current line width.",
                    descriptiont = {
                        jp = "現在の線の幅を取得します。",
                        pt = "Obtém a espessura atual da linha.",
                        ru = "Получает текущую толщину линии."
                    },
                    minidescriptiont = {
                        jp = "現在の線の幅を取得します。",
                        pt = "Obtém a espessura atual da linha.",
                        ru = "Получает текущую толщину линии."
                    },
                    name = "getLineWidth",
                    variants = {
                        {
                            descriptiont = {
                                pt = "Esta função não funciona no 0.8.0, mas foi consertada na versão 0.9.0. Use o snippet seguinte para contornar isso no 0.8.0;\n\n&lt;source lang=\"lua\"&gt;\n\nlove.graphics._getLineWidth = love.graphics.getLineWidth\n\nlove.graphics._setLineWidth = love.graphics.setLineWidth\n\nfunction love.graphics.getLineWidth() return love.graphics.varlinewidth or 1 end\n\nfunction love.graphics.setLineWidth(w) love.graphics.varlinewidth = w; return love.graphics._setLineWidth(w) end\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The current line width.",
                                    descriptiont = {
                                        jp = "現在の線の幅。",
                                        pt = "A espessura de linha atual.",
                                        ru = "Текущая толщина линии."
                                    },
                                    name = "width",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the current Shader. Returns nil if none is set.",
                    descriptiont = {
                        de = "Gibt den aktuellen Shader zurück.",
                        jp = "現在のシェーダーを取得します。 nil が返された場合は何も設定されていません。",
                        pt = "Obtém o Shader atual. Retorna nil se nenhum tiver sido definido."
                    },
                    minidescriptiont = {
                        de = "Gibt den aktuellen Shader zurück.",
                        jp = "現在のシェーダーを取得します。",
                        pt = "Obtém o Shader atual."
                    },
                    name = "getShader",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current Shader.",
                                    descriptiont = {
                                        de = "Der aktive Shader. Wenn kein Shader aktiv ist, so wird nil zurückgegeben.",
                                        jp = "現在有効なシェーダー、または nil ならば何も設定されていません。",
                                        pt = "O Shader ativo atual, ou nil se nenhum tiver sido definido."
                                    },
                                    name = "shader",
                                    type = "Shader"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets performance-related rendering statistics.",
                    descriptiont = {
                        jp = "レンダリング性能関連の統計情報を取得します。"
                    },
                    minidescriptiont = {
                        jp = "レンダリング性能関連の統計情報を取得します。"
                    },
                    name = "getStats",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A table with the following fields:",
                                    name = "stats",
                                    table = {
                                        {
                                            description = "The number of draw calls made so far during the current frame.",
                                            name = "drawcalls",
                                            type = "number"
                                        },
                                        {
                                            description = "The number of times the active Canvas has been switched so far during the current frame.",
                                            name = "canvasswitches",
                                            type = "number"
                                        },
                                        {
                                            description = "The estimated total size in bytes of video memory used by all loaded Images, Canvases, and Fonts.",
                                            name = "texturememory",
                                            type = "number"
                                        },
                                        {
                                            description = "The number of Image objects currently loaded.",
                                            name = "images",
                                            type = "number"
                                        },
                                        {
                                            description = "The number of Canvas objects currently loaded.",
                                            name = "canvases",
                                            type = "number"
                                        },
                                        {
                                            description = "The number of Font objects currently loaded.",
                                            name = "fonts",
                                            type = "number"
                                        },
                                        {
                                            description = "The number of times the active Shader has been changed so far during the current frame.",
                                            name = "shaderswitches",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether stencil testing is enabled.\n\nWhen stencil testing is enabled, the geometry of everything that is drawn will be clipped / stencilled out based on whether it intersects with what has been previously drawn to the stencil buffer.\n\nEach Canvas has its own stencil buffer.",
                    descriptiont = {
                        jp = "現在のステンシルにおけるテスト構成を取得します。\n\nステンシルテストが有効な時、全ての形状は本関数の引数および形状に接触している各ピクセルのステンシル値との間による比較に基づきクリップ / ステンシル処理されてから描画されます。ピクセルのステンシル値は love.graphics.stencil による影響を受けます。\n\n各々の Canvas はピクセルごとにステンシル値を独自に有しています。"
                    },
                    minidescriptiont = {
                        jp = "現在のステンシルにおけるテスト構成を取得します。"
                    },
                    name = "getStencilTest",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Whether stencil testing is enabled.",
                                    name = "enabled",
                                    type = "boolean"
                                },
                                {
                                    description = "Whether the stencil test is inverted or not.",
                                    name = "inverted",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the optional graphics features and whether they're supported on the system.\n\nSome older or low-end systems don't always support all graphics features.",
                    descriptiont = {
                        jp = "システムにおける補助グラフィックス機能の対応状況を取得します。\n\n一部の旧式または低級システムでは必ずしも全てのグラフィックス機能に対応しているとは限りません。"
                    },
                    minidescriptiont = {
                        jp = "システムにおける補助グラフィックス機能の対応状況を取得します。"
                    },
                    name = "getSupported",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A table containing GraphicsFeature keys, and boolean values indicating whether each feature is supported.",
                                    descriptiont = {
                                        jp = "テーブルには GraphicsFeature のキーが格納されており、boolean 値は各機能の対応状況を示しています。"
                                    },
                                    name = "features",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the system-dependent maximum values for love.graphics features.",
                    descriptiont = {
                        jp = "love.graphics の機能に関するシステム依存の最大値を取得します。"
                    },
                    minidescriptiont = {
                        jp = "love.graphics の機能に関するシステム依存の最大値を取得します。"
                    },
                    name = "getSystemLimits",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A table containing GraphicsLimit keys, and number values.",
                                    descriptiont = {
                                        jp = "GraphicsLimit のキー、および数値が入っているテーブル。"
                                    },
                                    name = "limits",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the point size.",
                    descriptiont = {
                        de = "Gibt die aktuelle Größe mit welcher Punkte gezeichnet werden zurück.",
                        jp = "点の大きさを取得します。",
                        pt = "Obtém o tamanho de ponto.",
                        ru = "Получает текущий размер точки."
                    },
                    minidescriptiont = {
                        de = "Gibt die aktuelle Größe mit welche Punkte gezeichnet werden zurück.",
                        jp = "点の大きさを取得します。",
                        pt = "Obtém o tamanho de ponto.",
                        ru = "Получает текущий размер точки."
                    },
                    name = "getPointSize",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current point size.",
                                    descriptiont = {
                                        de = "Die aktuelle Größe.",
                                        jp = "現在の点の大きさ。",
                                        pt = "O tamanho de ponto atual.",
                                        ru = "Текущий размер точки."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets information about the system's video card and drivers.",
                    descriptiont = {
                        jp = "システムに搭載されているビデオカードおよびドライバに関する情報を取得します。",
                        pt = "Obtém informações sobre a placa de vídeo e os drivers do sistema."
                    },
                    minidescriptiont = {
                        jp = "システムに搭載されているビデオカードおよびドライバに関する情報を取得します。",
                        pt = "Obtém informações sobre a placa de vídeo e os drivers do sistema."
                    },
                    name = "getRendererInfo",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The name of the renderer, e.g. \"OpenGL\" or \"OpenGL ES\".",
                                    descriptiont = {
                                        jp = "レンダラーの名称。たとえば、 \"OpenGL\" または \"OpenGL ES\" です。",
                                        pt = "O nome do renderizador, por exemplo, \"OpenGL\"."
                                    },
                                    name = "name",
                                    type = "string"
                                },
                                {
                                    description = "The version of the renderer with some extra driver-dependent version info, e.g. \"2.1 INTEL-8.10.44\".",
                                    descriptiont = {
                                        jp = "外部ドライバのバージョン情報に依存するレンダラーのバージョンの一部の情報。つまり、 \"2.1 INTEL-8.10.44\" です。",
                                        pt = "A versão do renderizador com algumas informações extra sobre a versão, dependendo do driver, por exemplo \"2.1 INTEL-8.10.44\"."
                                    },
                                    name = "version",
                                    type = "string"
                                },
                                {
                                    description = "The name of the graphics card vendor, e.g. \"Intel Inc\".",
                                    descriptiont = {
                                        jp = "グラフィックス・カードの製造元の名称。 例えば、 \"Intel Inc.\" です。",
                                        pt = "O nome do fornecedor da placa de vídeo, por exemplo \"Intel Inc.\" "
                                    },
                                    name = "vendor",
                                    type = "string"
                                },
                                {
                                    description = "The name of the graphics card, e.g. \"Intel HD Graphics 3000 OpenGL Engine\".",
                                    descriptiont = {
                                        jp = "グラフィックス・カードの製品の名称。例えば、 \"Intel HD Graphics 3000 OpenGL Engine\" です。",
                                        pt = "O nome da placa de vídeo, por exemplo \"Intel HD Graphics 3000 OpenGL Engine\"."
                                    },
                                    name = "device",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current scissor box.",
                    descriptiont = {
                        jp = "現在の切り抜き範囲を取得します。",
                        pt = "Obtém a área de recorte atual.",
                        ru = "Получает прямоугольник отсечения."
                    },
                    minidescriptiont = {
                        jp = "現在の切り抜き範囲を取得します。",
                        pt = "Obtém a área de recorte atual.",
                        ru = "Получает прямоугольник отсечения."
                    },
                    name = "getScissor",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The x component of the top-left point of the box.",
                                    descriptiont = {
                                        jp = "左上地点を箱の x-座標として返します。",
                                        pt = "O componente x do ponto superior esquerdo da área.",
                                        ru = "X-координата левого верхнего угла прямоугольника."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y component of the top-left point of the box.",
                                    descriptiont = {
                                        jp = "左上地点を箱の y-座標として返します。",
                                        pt = "O componente y do ponto superior esquerdo da área.",
                                        ru = "Y-координата левого верхнего угла прямоугольника."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The width of the box.",
                                    descriptiont = {
                                        jp = "箱の幅。",
                                        pt = "A largura da área.",
                                        ru = "Ширина прямоугольника."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the box.",
                                    descriptiont = {
                                        jp = "箱の高さ。",
                                        pt = "A altura da área.",
                                        ru = "Высота прямоугольника."
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the width of the window.",
                    descriptiont = {
                        de = "Gibt die Breite des Fensters in Pixeln zurück.",
                        jp = "ウィンドウの幅をピクセル単位で取得します。",
                        pt = "Obtém a largura da janela.",
                        ru = "Получает ширину экрана."
                    },
                    minidescriptiont = {
                        de = "Gibt die Breite des Fensters in Pixeln zurück.",
                        jp = "ウィンドウの幅をピクセル単位で取得します。",
                        pt = "Obtém a largura da janela.",
                        ru = "Получает ширину экрана."
                    },
                    name = "getWidth",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The width of the window.",
                                    descriptiont = {
                                        de = "Die Breite des Fensters in Pixeln.",
                                        jp = "ウィンドウの幅。",
                                        pt = "A largura da janela.",
                                        ru = "Ширина экрана."
                                    },
                                    name = "width",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the scissor to the rectangle created by the intersection of the specified rectangle with the existing scissor. If no scissor is active yet, it behaves like love.graphics.setScissor.\n\nThe scissor limits the drawing area to a specified rectangle. This affects all graphics calls, including love.graphics.clear.\n\nThe dimensions of the scissor is unaffected by graphical transformations (translate, scale, ...).",
                    descriptiont = {
                        jp = "既存の切り抜きにより指定されている長方形の交差により作成された長方形に切り抜きを設定します。切り抜きが有効はない場合の動作は、 love.graphics.setScissor と同じです。\n\n切り抜きは指定した長方形の範囲で描画領域を制限します。これは love.graphics.clear を含む、全てのグラフィック関連の呼び出しに影響を及ぼします。\n\n切り抜きの範囲はグラフィックの変換には影響を及ぼしません (translate, scale, ...)。"
                    },
                    minidescriptiont = {
                        jp = "既存の切り抜きにより指定されている長方形の交差により作成された長方形に切り抜きを設定します。"
                    },
                    name = "intersectScissor",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The x-coordinate of the upper left corner of the rectangle to intersect with the existing scissor rectangle.",
                                    descriptiont = {
                                        jp = "既存の切り抜いている長方形と交差する長方形の左上角の x 座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y-coordinate of the upper left corner of the rectangle to intersect with the existing scissor rectangle.",
                                    descriptiont = {
                                        jp = "既存の切り抜いている長方形と交差する長方形の左上角の y 座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The width of the rectangle to intersect with the existing scissor rectangle.",
                                    descriptiont = {
                                        jp = "既存の切り抜いている長方形と交差する長方形の幅。"
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the rectangle to intersect with the existing scissor rectangle.",
                                    descriptiont = {
                                        jp = "既存の切り抜いている長方形と交差する長方形の長さ。"
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            },
                            description = "Limits the drawing area to a specified rectangle."
                        },
                        {
                            description = "Disables scissor."
                        }
                    }
                },
                {
                    description = "Gets whether gamma-correct rendering is supported and enabled. It can be enabled by setting t.gammacorrect = true in love.conf.\n\nNot all devices support gamma-correct rendering, in which case it will be automatically disabled and this function will return false. It is supported on desktop systems which have graphics cards that are capable of using OpenGL 3 / DirectX 10, and iOS devices that can use OpenGL ES 3.",
                    descriptiont = {
                        jp = "ガンマ補正表示の対応状況および有効かどうかを取得します。これは love.conf で t.gammacorrect = true を設定することで有効化できます。\n\nすべてのデバイスがガンマ補正表示に対応しているわけではありません。非対応の場合は自動的に無効化を行い本関数では false を返します。この機能はデスクトップ・システムでは OpenGL 3 / DirectX 10 に対応したグラフィックスカード、および OpenGL ES 3 を利用できる iOS デバイスで対応しています。"
                    },
                    minidescriptiont = {
                        jp = "ガンマ補正表示の対応状況および有効かどうかを取得します。"
                    },
                    name = "isGammaCorrect",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if gamma-correct rendering is supported and was enabled in love.conf, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばガンマ補正表示に対応しており love.conf で有効になっていますが、それ以外は false です。"
                                    },
                                    name = "gammacorrect",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether wireframe mode is used when drawing.",
                    descriptiont = {
                        jp = "描画時にワイヤーフレーム・モードが使用されているか取得します。",
                        pt = "Descobre se o modo de estrutura de arame está sendo usado ao desenhar."
                    },
                    minidescriptiont = {
                        jp = "描画時にワイヤーフレーム・モードが使用されているか取得します。",
                        pt = "Descobre se o modo de estrutura de arame está sendo usado ao desenhar."
                    },
                    name = "isWireframe",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if wireframe lines are used when drawing, false if it's not.",
                                    descriptiont = {
                                        pt = "Verdadeiro se linhas de estrutura de arame estão sendo usadas ao desenhar, senão, falso."
                                    },
                                    name = "wireframe",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draws lines between points.",
                    descriptiont = {
                        de = "Zeichnet eine Linie zwischen zwei oder mehr Punkten.",
                        jp = "二点の間で線を描画します。",
                        pt = "Desenha linhas entre pontos.",
                        ru = "Рисует линию между точками."
                    },
                    minidescriptiont = {
                        de = "Zeichnet eine Linie zwischen zwei oder mehr Punkten.",
                        jp = "二点の間で線を描画します。",
                        pt = "Desenha linhas entre pontos.",
                        ru = "Рисует линию между точками."
                    },
                    name = "line",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The position of first point on the x-axis.",
                                    descriptiont = {
                                        de = "Die Position des ersten Punkts auf der x-Achse.",
                                        jp = "最初の点の x-軸座標。",
                                        pt = "A posição do primeiro ponto no eixo x."
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The position of first point on the y-axis.",
                                    descriptiont = {
                                        de = "Die Position des ersten Punkts auf der y-Achse.",
                                        jp = "最初の点の y-軸座標。",
                                        pt = "A posição do primeiro ponto no eixo y."
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The position of second point on the x-axis.",
                                    descriptiont = {
                                        de = "Die Position des zweiten Punkts auf der x-Achse.",
                                        jp = "次の点の x-軸座標。",
                                        pt = "A posição do segundo ponto no eixo x."
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The position of second point on the y-axis.",
                                    descriptiont = {
                                        de = "Die Position des zweiten Punkts auf der y-Achse.",
                                        jp = "次の点の y-軸座標。",
                                        pt = "A posição do segundo ponto no eixo y."
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "You can continue passing point positions to draw a polyline.",
                                    descriptiont = {
                                        de = "Weitere Punkte (x, y) um eine Polylinie zu zeichnen.",
                                        jp = "多数の線を描画するために続きの点の座標を渡すことができます。",
                                        pt = "Você pode continuar passando posições de pontos para desenhar uma cadeia poligonal."
                                    },
                                    name = "...",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table of point positions.",
                                    descriptiont = {
                                        de = "Ein Table mit Punktkoordinaten.",
                                        jp = "上述の通り、点の座標をテーブルしたもの。",
                                        pt = "Uma tabela com as posições dos pontos, como descrito acima.",
                                        ru = "Таблица с координатами точек, как было описано выше."
                                    },
                                    name = "points",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Canvas object for offscreen rendering.\n\nAntialiased Canvases have slightly higher system requirements than normal Canvases. Additionally, the supported maximum number of MSAA samples varies depending on the system. Use love.graphics.getSystemLimit to check.\n\nIf the number of MSAA samples specified is greater than the maximum supported by the system, the Canvas will still be created but only using the maximum supported amount (this includes 0.)",
                    descriptiont = {
                        de = "Erstellt einen neuen Offscreen-Buffer.",
                        jp = "画面外表示を行うために Canvas オブジェクトを新規作成します。",
                        pt = "Cria um novo objeto Pintura para renderização fora da tela."
                    },
                    minidescriptiont = {
                        de = "Erstellt einen neuen Offscreen-Buffer.",
                        jp = "Canvas オブジェクトを新規作成します。",
                        pt = "Cria uma nova Pintura."
                    },
                    name = "newCanvas",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "window width",
                                    description = "The width of the Canvas.",
                                    descriptiont = {
                                        jp = "出力先の Canvas の幅。"
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    default = "window height",
                                    description = "The height of the Canvas.",
                                    descriptiont = {
                                        jp = "出力先の Canvas の高さ。"
                                    },
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    default = "\"normal\"",
                                    description = "The desired texture mode of the Canvas.",
                                    descriptiont = {
                                        jp = "出力先の Canvas で使用するテクスチャ形式。"
                                    },
                                    name = "format",
                                    type = "CanvasFormat"
                                },
                                {
                                    default = "0",
                                    description = "The desired number of antialiasing samples used when drawing to the Canvas.",
                                    descriptiont = {
                                        jp = "出力先の Canvas で描画時に使用するマルチサンプル・アンチエイリアシング (MSAA) のサンプル数。"
                                    },
                                    name = "msaa",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                jp = "対応している MSAA サンプルの最大値はシステムに依存のため異なります。対応状況の確認には love.graphics.getSystemLimit を使用してください。\n\nMSAA サンプル数としてシステムが対応している最大値より大きい物が指定された場合は、そのまま Canvas は作成されますが対応している最大量のみ使用します(これは 0 も当てはまります)。\n\n== 関連 ==\n\n*  \n\n{{#set:Since=080}}\n\n{{#set:PrettySince=0.8.0}}\n\n{{#set:Description=Canvas オブジェクトを新規作成します。}}\n\n== そのほかの言語 =="
                            },
                            returns = {
                                {
                                    description = "A new Canvas object.",
                                    descriptiont = {
                                        jp = "指定された幅と高さの新規 Canvas です。"
                                    },
                                    name = "canvas",
                                    type = "Canvas"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Font from a TrueType Font or BMFont file. Created fonts are not cached, in that calling this function with the same arguments will always create a new Font object.\n\nAll variants which accept a filename can also accept a Data object instead.",
                    descriptiont = {
                        de = "Erstellt ein neues Font Objekt.",
                        jp = "TrueType フォントまたは BMFont ファイルから Font を新規作成します。この関数を同一引数で呼び出しても常に新しい Font オブジェクトが作成されるため、フォントのキャッシュは作成されません。\n\n全ての異形においてファイル名の代わりに Data オブジェクトを受け入れることができます。",
                        pt = "Cria uma nova Fonte.",
                        ru = "Создает новый шрифт. Не следует вызывать эту функцию из love.draw или love.update, так как из-за этого на каждом кадре будет создаваться новый шрифт; лучше создайте шрифт только один раз, чтобы потом использовать его в любое время."
                    },
                    minidescriptiont = {
                        de = "Erstellt ein neues Font Objekt.",
                        jp = "TrueType フォントまたは BMFont ファイルから Font を新規作成します。",
                        pt = "Cria uma nova Fonte.",
                        ru = "Создает новый шрифт."
                    },
                    name = "newFont",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filepath to the BMFont or TrueType font file.",
                                    descriptiont = {
                                        jp = "BMFont または TrueType フォントファイルのファイルパス。"
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            description = "Create a new BMFont or TrueType font.",
                            descriptiont = {
                                jp = "BMFont または TrueType フォントの新規作成。"
                            },
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        jp = "テキストを画面へ描画するときに使用する Font オブジェクト。"
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The filepath to the TrueType font file.",
                                    descriptiont = {
                                        de = "Der Pfad zur Font-Datei.",
                                        jp = "TrueType フォントファイルのファイルパス。",
                                        pt = "O caminho até o arquivo da fonte.",
                                        ru = "Путь к файлу шрифта."
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    description = "The size of the font in pixels.",
                                    descriptiont = {
                                        de = "Die Größe des Font in Pixeln.",
                                        jp = "フォントの大きさをピクセル単位で指定します。",
                                        pt = "O tamanho da fonte, em pixels.",
                                        ru = "Размер шрифта в пикселях."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            description = "Create a new TrueType font.",
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        de = "Ein Font-Objekt welches dazu benutzt werden kann, Text auf den Bildschirm zu zeichnen.",
                                        jp = "テキストを画面へ描画するときに使用する Font オブジェクト。",
                                        pt = "Um objeto Fonte que pode ser usado para desenhar texto na tela.",
                                        ru = "Объект шрифта, который может быть использован для рисования текста на экране."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The filepath to the BMFont file.",
                                    descriptiont = {
                                        jp = "BMFont フォントファイルのファイルパス。"
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    description = "The filepath to the BMFont's image file. If this argument is omitted, the path specified inside the BMFont file will be used.",
                                    descriptiont = {
                                        jp = "BMFont 形式の画像ファイルへのファイルパス。この引数が省略された場合は、指定された BMFont ファイルの内部にあるものが使用されます。"
                                    },
                                    name = "imagefilename",
                                    type = "string"
                                }
                            },
                            description = "Create a new BMFont.",
                            descriptiont = {
                                jp = "BMFont フォントの新規作成。"
                            },
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        jp = "テキストを画面へ描画するときに使用する Font オブジェクト。"
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The size of the font in pixels.",
                                    descriptiont = {
                                        de = "Die Größe des Font in Pixeln.",
                                        jp = "フォントの大きさをピクセル単位で指定します。",
                                        pt = "O tamanho da fonte, em pixels.",
                                        ru = "Размер шрифта в пикселях."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            description = "Create a new instance of the default font (Vera Sans) with a custom size.",
                            descriptiont = {
                                de = "Diese Variante nutzt den Standard-Font (Vera Sans) mit einer benutzerdefinierten Größe.",
                                jp = "インスタンスとして標準フォント (Vera Sans) の大きさを任意で指定したものを新規作成します。\n\n&lt;source lang=\"lua\"&gt;\n\nfont = love.graphics.newFont( size )\n\n&lt;/source&gt;",
                                pt = "Esta variante usa a fonte padrão (Vera Sans) com um tamanho personalizado.",
                                ru = "Этот вариант использует стандартный шрифт (Vera Sans), но с определенным размером."
                            },
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        de = "Ein Font-Objekt welches dazu benutzt werden kann, Text auf den Bildschirm zu zeichnen.",
                                        jp = "テキストを画面へ描画するときに使用する Font オブジェクト。",
                                        pt = "Um objeto Fonte que pode ser usado para desenhar texto na tela.",
                                        ru = "Объект шрифта, который может быть использован для рисования текста на экране."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Mesh.\n\nUse Mesh:setTexture if the Mesh should be textured with an Image or Canvas when it's drawn.",
                    descriptiont = {
                        jp = "Mesh の新規作成。\n\n描画時は Mesh がテクスチャ付きの Image または Canvas  ならば Mesh:setTexture を使用してください。",
                        pt = "Cria uma nova Malha."
                    },
                    minidescriptiont = {
                        jp = "Mesh の新規作成。",
                        pt = "Cria uma nova Malha."
                    },
                    name = "newMesh",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The table filled with vertex information tables for each vertex as follows:",
                                    name = "vertices",
                                    table = {
                                        {
                                            description = "The position of the vertex on the x-axis.",
                                            name = "[1]",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the vertex on the y-axis.",
                                            name = "[2]",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The u texture coordinate of the vertex. Texture coordinates are normally in the range of [0, 1], but can be greater or less (see WrapMode.)",
                                            name = "[3]",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The v texture coordinate of the vertex. Texture coordinates are normally in the range of [0, 1], but can be greater or less (see WrapMode.)",
                                            name = "[4]",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The red component of the vertex color.",
                                            name = "[5]",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The green component of the vertex color.",
                                            name = "[6]",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The blue component of the vertex color.",
                                            name = "[7]",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The alpha component of the vertex color.",
                                            name = "[8]",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    default = "\"fan\"",
                                    description = "How the vertices are used when drawing. The default mode \"fan\" is sufficient for simple convex polygons.",
                                    name = "mode",
                                    type = "MeshDrawMode"
                                },
                                {
                                    default = "\"dynamic\"",
                                    description = "The expected usage of the Mesh. The specified usage mode affects the Mesh's memory usage and performance.",
                                    name = "usage",
                                    type = "SpriteBatchUsage"
                                }
                            },
                            description = "Creates a standard Mesh with the specified vertices.",
                            returns = {
                                {
                                    description = "The new Mesh.",
                                    name = "mesh",
                                    type = "Mesh"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The total number of vertices the Mesh will use. Each vertex is initialized to {0,0, 0,0, 255,255,255,255}.",
                                    descriptiont = {
                                        jp = "Mesh で使用する頂点の合計数。各頂点は {0,0, 0,0, 255,255,255,255}. にて初期化されます。"
                                    },
                                    name = "vertexcount",
                                    type = "number"
                                },
                                {
                                    default = "\"fan\"",
                                    description = "How the vertices are used when drawing. The default mode \"fan\" is sufficient for simple convex polygons.",
                                    descriptiont = {
                                        jp = "頂点の描画に使用する方式。省略時の標準方式 \"fan\" は単一の凸面の多角形においては十分です。"
                                    },
                                    name = "mode",
                                    type = "MeshDrawMode"
                                },
                                {
                                    default = "\"dynamic\"",
                                    description = "The expected usage of the Mesh. The specified usage mode affects the Mesh's memory usage and performance.",
                                    descriptiont = {
                                        jp = "Mesh で想定される使用方法。指定された使用方法の方式は Mesh のメモリ使用および性能に影響を与えます。"
                                    },
                                    name = "usage",
                                    type = "SpriteBatchUsage"
                                }
                            },
                            description = "Creates a standard Mesh with the specified number of vertices.",
                            descriptiont = {
                                jp = "指定された頂点の個数により標準的な Mesh を作成します。"
                            },
                            returns = {
                                {
                                    description = "The new Mesh.",
                                    descriptiont = {
                                        jp = "新規 Mesh です。"
                                    },
                                    name = "mesh",
                                    type = "Mesh"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table in the form of {attribute, ...}. Each attribute is a table which specifies a custom vertex attribute used for each vertex.",
                                    name = "vertexformat",
                                    table = {
                                        {
                                            description = "A table containing the attribute's name, it's data type, and the number of components in the attribute, in the form of {name, datatype, components}.",
                                            name = "attribute",
                                            type = "table"
                                        },
                                        {
                                            description = "Additional vertex attribute format tables.",
                                            name = "...",
                                            type = "table"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    description = "The table filled with vertex information tables for each vertex, in the form of {vertex, ...} where each vertex is a table in the form of {attributecomponent, ...}.",
                                    name = "vertices",
                                    table = {
                                        {
                                            description = "The first component of the first vertex attribute in the vertex.",
                                            name = "attributecomponent",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional components of all vertex attributes in the vertex.",
                                            name = "...",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    default = "\"fan\"",
                                    description = "How the vertices are used when drawing. The default mode \"fan\" is sufficient for simple convex polygons.",
                                    name = "mode",
                                    type = "MeshDrawMode"
                                },
                                {
                                    default = "\"dynamic\"",
                                    description = "The expected usage of the Mesh. The specified usage mode affects the Mesh's memory usage and performance.",
                                    name = "usage",
                                    type = "SpriteBatchUsage"
                                }
                            },
                            description = "Creates a Mesh with custom vertex attributes and the specified vertex data.",
                            returns = {
                                {
                                    description = "The new Mesh.",
                                    name = "mesh",
                                    type = "Mesh"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table in the form of {attribute, ...}. Each attribute is a table which specifies a custom vertex attribute used for each vertex.",
                                    name = "vertexformat",
                                    table = {
                                        {
                                            description = "A table containing the attribute's name, it's data type, and the number of components in the attribute, in the form of {name, datatype, components}.",
                                            name = "attribute",
                                            type = "table"
                                        },
                                        {
                                            description = "Additional vertex attribute format tables.",
                                            name = "...",
                                            type = "table"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    description = "The total number of vertices the Mesh will use.",
                                    name = "vertexcount",
                                    type = "number"
                                },
                                {
                                    default = "\"fan\"",
                                    description = "How the vertices are used when drawing. The default mode \"fan\" is sufficient for simple convex polygons.",
                                    name = "mode",
                                    type = "MeshDrawMode"
                                },
                                {
                                    default = "\"dynamic\"",
                                    description = "The expected usage of the Mesh. The specified usage mode affects the Mesh's memory usage and performance.",
                                    name = "usage",
                                    type = "SpriteBatchUsage"
                                }
                            },
                            description = "Creates a Mesh with custom vertex attributes and the specified number of vertices.",
                            returns = {
                                {
                                    description = "The new Mesh.",
                                    name = "mesh",
                                    type = "Mesh"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Image from a filepath, FileData, an ImageData, or a CompressedImageData, and optionally generates or specifies mipmaps for the image.",
                    descriptiont = {
                        de = "Erstellt ein neues Image aus einem Dateipfad, einer FileData oder aus einer ImageData",
                        jp = "ファイルパス、 FileData, ImageData または CompressedImageData から新規 Imageの作成を行い、さらに画像に対して任意で mipmap を作成または指定します。",
                        ru = "Создает новое изображение, загрузив из указанного пути к файлу, из объекта File или из ImageData."
                    },
                    minidescriptiont = {
                        de = "Erstellt ein neues Bild.",
                        jp = "Image の新規作成。",
                        pt = "Cria uma nova Imagem.",
                        ru = "Создает новое изображение."
                    },
                    name = "newImage",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filepath to the image file.",
                                    descriptiont = {
                                        de = "Der Pfad zur Bilddatei.",
                                        jp = "画像ファイルのファイルパス。",
                                        pt = "O caminho para o arquivo de imagem.",
                                        ru = "Путь к файлу."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "An Image object which can be drawn on screen.",
                                    descriptiont = {
                                        de = "Ein Bildobjekt welches auf den Bildschirm gezeichnet werden kann.",
                                        jp = "画面上で描画できる Image オブジェクト。",
                                        pt = "Um objeto Imagem que pode ser desenhado na tela.",
                                        ru = "Изображение, которое может быть нарисовано на экране."
                                    },
                                    name = "image",
                                    type = "Image"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "An ImageData object. The Image will use this ImageData to reload itself when love.window.setMode is called.",
                                    descriptiont = {
                                        jp = "ImageData オブジェクト。この ImageData は love.window.setMode が呼び出されたときに Image を ImageData へ再読み込みするために使用されます。",
                                        pt = "Um objeto DadoDeImagem. A imagem usará este DadoDeImagem para se recarregar quando  love.window.setMode for chamada.",
                                        ru = "Объект ImageData."
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                }
                            },
                            returns = {
                                {
                                    description = "An Image object which can be drawn on screen.",
                                    descriptiont = {
                                        jp = "画面上で描画できる Image オブジェクト。",
                                        pt = "Um objeto Imagem que pode ser desenhado na tela.",
                                        ru = "Изображение, которое может быть нарисовано на экране."
                                    },
                                    name = "image",
                                    type = "Image"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A CompressedImageData object. The Image will use this CompressedImageData to reload itself when love.window.setMode is called.",
                                    name = "compressedImageData",
                                    type = "CompressedImageData"
                                }
                            },
                            returns = {
                                {
                                    description = "An Image object which can be drawn on screen.",
                                    name = "image",
                                    type = "Image"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The filepath to the image file (or a FileData or ImageData or CompressedImageData object).",
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    description = "A table containing the following fields:",
                                    name = "flags",
                                    table = {
                                        {
                                            default = "false",
                                            description = "True if the image's pixels should be interpreted as being linear RGB rather than sRGB-encoded, if gamma-correct rendering is enabled. Has no effect otherwise.",
                                            name = "linear",
                                            type = "boolean"
                                        },
                                        {
                                            default = "false",
                                            description = "If true, mipmaps for the image will be automatically generated (or taken from the images's file if possible, if the image originated from a CompressedImageData). If this value is a table, it should contain a list of other filenames of images of the same format that have progressively half-sized dimensions, all the way down to 1x1. Those images will be used as this Image's mipmap levels.",
                                            name = "mipmaps",
                                            type = "boolean or table"
                                        }
                                    },
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "An Image object which can be drawn on screen.",
                                    name = "image",
                                    type = "Image"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Font by loading a specifically formatted image.\n\nIn versions prior to 0.9.0, LÖVE expects ISO 8859-1 encoding for the glyphs string.",
                    descriptiont = {
                        jp = "特別な形式の画像から読み込んで Font を新規作成します。\n\nversions 0.9.0 以前で、 LÖVE はグリフ文字列において ISO 8859-1 エンコーディングを要求します。",
                        pt = "Cria uma nova Fonte carregando uma imagem no formato apropriado. Pode ter até 256 glifos.",
                        ru = "Создает шрифт, загрузив изображение специального формата."
                    },
                    minidescriptiont = {
                        jp = "特別な形式の画像から読み込んで Font を新規作成します。",
                        pt = "Cria uma nova Fonte carregando uma imagem formatada.",
                        ru = "Создает шрифт, загрузив изображение специального формата."
                    },
                    name = "newImageFont",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filepath to the image file.",
                                    descriptiont = {
                                        jp = "画像ファイルのファイルパス。",
                                        pt = "O caminho para o arquivo de imagem.",
                                        ru = "Путь к файлу с изображением шрифта."
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    description = "A string of the characters in the image in order from left to right.",
                                    descriptiont = {
                                        jp = "画像ファイルのファイルパス。",
                                        pt = "Um string dos caracteres na imagem, na ordem da esquerda para a direita.",
                                        ru = "Строка с символами, которые находятся на изображении."
                                    },
                                    name = "glyphs",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        jp = "画面へテキストを描画するために使用できる Font オブジェクト。",
                                        pt = "Um objeto Fonte que pode ser usado para desenhar texto na tela.",
                                        ru = "Объект шрифта, который может быть использован для рисования на экране."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The ImageData object to create the font from.",
                                    descriptiont = {
                                        pt = "O objeto DadoDeImagem a partir do qual se deve criar a fonte."
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                },
                                {
                                    description = "A string of the characters in the image in order from left to right.",
                                    descriptiont = {
                                        pt = "Um string dos caracteres na imagem, na ordem da esquerda para a direita."
                                    },
                                    name = "glyphs",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        pt = "Um objeto Fonte que pode ser usado para desenhar texto na tela."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The filepath to the image file.",
                                    descriptiont = {
                                        jp = "画像ファイルのファイルパス。"
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    description = "A string of the characters in the image in order from left to right.",
                                    descriptiont = {
                                        jp = "画像ファイルのファイルパス。"
                                    },
                                    name = "glyphs",
                                    type = "string"
                                },
                                {
                                    default = "0",
                                    description = "Additional spacing (positive or negative) to apply to each glyph in the Font.",
                                    descriptiont = {
                                        jp = "Font で各グリフに適用される追加の間隔(整数または負数)。"
                                    },
                                    name = "extraspacing",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A Font object which can be used to draw text on screen.",
                                    descriptiont = {
                                        jp = "画面へテキストを描画するために使用できる Font オブジェクト。"
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new ParticleSystem.",
                    descriptiont = {
                        de = "Erstellt ein neues Partikelsystem.",
                        jp = "ParticleSystem の新規作成。",
                        pt = "Cria um novo SistemaDePartículas.",
                        ru = "Создает систему частиц."
                    },
                    minidescriptiont = {
                        de = "Erstellt ein neues Partikelsystem.",
                        jp = "ParticleSystem の新規作成。",
                        pt = "Cria um novo SistemaDePartículas.",
                        ru = "Создает систему частиц."
                    },
                    name = "newParticleSystem",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The Image or Canvas to use.",
                                    descriptiont = {
                                        jp = "使用するテクスチャ(Image または Canvas) です。",
                                        pt = "A textura (Imagem ou Pintura) a ser usada."
                                    },
                                    name = "texture",
                                    type = "Texture"
                                },
                                {
                                    default = "1000",
                                    description = "The max number of particles at the same time.",
                                    descriptiont = {
                                        jp = "同時に使用するパーティクルの最大数。",
                                        pt = "O número máximo de partículas ao mesmo tempo."
                                    },
                                    name = "buffer",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new ParticleSystem.",
                                    descriptiont = {
                                        jp = "新規の ParticleSystem です。",
                                        pt = "Um novo SistemaDePartículas."
                                    },
                                    name = "system",
                                    type = "ParticleSystem"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Shader object for hardware-accelerated vertex and pixel effects. A Shader contains either vertex shader code, pixel shader code, or both.\n\nVertex shader code must contain at least one function, named position, which is the function that will produce transformed vertex positions of drawn objects in screen-space.\n\nPixel shader code must contain at least one function, named effect, which is the function that will produce the color which is blended onto the screen for each pixel a drawn object touches.",
                    descriptiont = {
                        jp = "ハードウェアにより加速化された頂点またはピクセル・エフェクトに対して Shader オブジェクトを新規作成します。Shader には頂点シェーダーのコード、ピクセル・シェーダーのコード、のいずれか、または両方が含まれています。\n\nShader は描画時にビデオカードにて実行される小型のプログラムです。頂点シェーダーは各頂点に対して一括で実行されます (例えば、 Image では頂点が４つあります。 － 角ごとに一つずつ。 Mesh では、さらに存在する場合があります)。ピクセル・シェーダーは描画されたオブジェクトが関係する画面上の各ピクセルに対して一括で実行します。全てのオブジェクトの頂点が頂点シェーダーにより処理された後にピクセル・シェーダーのコードは実行されます。",
                        pt = "Cria um novo objeto Shader para efeitos de vértice e de pixel com aceleração de hardware. Um Shader contém código de shader de vértice, código de shader de pixel, ou ambos.\n\nShaders são pequenos programas que rodam na placa de vídeo ao desenhar. Shaders de vértice são rodados uma vez para cada vértice (por exemplo, uma imagem tem 4 vértices - um em cada canto. Uma Malha pode ter muito mais.) Shaders de pixel rodam uma vez para cada pixel na tela que o objeto desenhado toca. O código do shader de pixel é executado depois que todos os vértices do objeto tenham sido processados pelo shader de vértice."
                    },
                    minidescriptiont = {
                        jp = "Shader オブジェクトを新規作成します。",
                        pt = "Cria um novo Shader."
                    },
                    name = "newShader",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The pixel shader or vertex shader code, or a filename pointing to a file with the code.",
                                    descriptiont = {
                                        jp = "ピクセル・シェーダーまたは頂点シェーダーのコード、またはコードのあるファイルを指すファイルの名称。",
                                        pt = "O código do shader de pixel ou de vértice, ou um nome de arquivo apontando para um arquivo com o código."
                                    },
                                    name = "code",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A Shader object for use in drawing operations.",
                                    descriptiont = {
                                        jp = "描画操作で使用する Shader オブジェクト。",
                                        pt = "Um objeto Shader usado em operações de desenho."
                                    },
                                    name = "shader",
                                    type = "Shader"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The pixel shader code, or a filename pointing to a file with the code.",
                                    name = "pixelcode",
                                    type = "string"
                                },
                                {
                                    description = "The vertex shader code, or a filename pointing to a file with the code.",
                                    name = "vertexcode",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A Shader object for use in drawing operations.",
                                    name = "shader",
                                    type = "Shader"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Font.",
                    descriptiont = {
                        jp = "描画可能な Text (テキスト) オブジェクトを新規作成します。"
                    },
                    minidescriptiont = {
                        jp = "描画可能な Text (テキスト) オブジェクトを新規作成します。"
                    },
                    name = "newText",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The font to use for the text.",
                                    name = "font",
                                    type = "Font"
                                },
                                {
                                    default = "nil",
                                    description = "The initial string of text that the new Text object will contain. May be nil.",
                                    name = "textstring",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The new drawable Text object.",
                                    name = "text",
                                    type = "Text"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Quad.\n\nThe purpose of a Quad is to describe the result of the following transformation on any drawable object. The object is first scaled to dimensions sw * sh. The Quad then describes the rectangular area of dimensions width * height whose upper left corner is at position (x, y) inside the scaled object.",
                    descriptiont = {
                        de = "Erstellt ein neues Quad.",
                        jp = "Quad の新規作成。",
                        pt = "Cria um novo Quad.",
                        ru = "Создает новый текстурный прямоугольник."
                    },
                    minidescriptiont = {
                        de = "Erstellt ein neues Quad.",
                        jp = "Quad を新規作成します。",
                        pt = "Cria um novo Quad.",
                        ru = "Создает новый текстурный прямоугольник."
                    },
                    name = "newQuad",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The top-left position along the x-axis.",
                                    descriptiont = {
                                        de = "Die obere linke Position des Quads auf der x-Achse.",
                                        jp = "Image における左上からの x-軸座標。",
                                        pt = "A posição superior esquerda ao longo do eixo x.",
                                        ru = "Координата левого верхнего угла по X оси."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The top-left position along the y-axis.",
                                    descriptiont = {
                                        de = "Die obere linke Position des Quads auf der y-Achse.",
                                        jp = "Image における左上からの y-軸座標。",
                                        pt = "A posição superior esquerda ao longo do eixo y.",
                                        ru = "Координата левого верхнего угла по Y оси."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The width of the Quad.",
                                    descriptiont = {
                                        de = "Die Breite des Quads.",
                                        jp = "Image における Quad の幅。 (必ず 0 以上にしてください)",
                                        pt = "A largura do Quad. (Tem que ser maior que 0.)",
                                        ru = "Ширина прямоугольника."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the Quad.",
                                    descriptiont = {
                                        de = "Die Höhe des Quads.",
                                        jp = "Image における Quad の高さ。 (必ず 0 以上にしてください)",
                                        pt = "A altura do Quad. (Tem que ser maior que 0.)",
                                        ru = "Высота прямоугольника."
                                    },
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    description = "The reference width, the width of the Image.",
                                    descriptiont = {
                                        de = "Die Breite des Bildes.",
                                        jp = "Image の幅であり、基準の幅です。 (必ず 0 以上にしてください)",
                                        pt = "A largura de referência, a largura da Imagem. (Tem que ser maior que 0.)",
                                        ru = "Отношение по ширине."
                                    },
                                    name = "sw",
                                    type = "number"
                                },
                                {
                                    description = "The reference height, the height of the Image.",
                                    descriptiont = {
                                        de = "Die Höhe des Bildes.",
                                        jp = "Image の高さであり、基準の高さです。 (必ず 0 以上にしてください)",
                                        pt = "A altura de referência, a altura da Imagem. (Tem que ser maior que 0.)",
                                        ru = "Отношение по высоте."
                                    },
                                    name = "sh",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new Quad.",
                                    descriptiont = {
                                        de = "Das neue Quad.",
                                        jp = "新規 Quad です。",
                                        pt = "O novo Quad.",
                                        ru = "Новый прямоугольник."
                                    },
                                    name = "quad",
                                    type = "Quad"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a screenshot and returns the image data.",
                    descriptiont = {
                        jp = "画面撮影したものを作成して画像データとして返します。",
                        pt = "Captura a tela e retorna o dado de imagem.",
                        ru = "Создает скриншот."
                    },
                    minidescriptiont = {
                        jp = "画面撮影したものを作成して ImageData として返します。",
                        pt = "Cria uma captura e retorna o DadoDeImagem.",
                        ru = "Создает скриншот."
                    },
                    name = "newScreenshot",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "false",
                                    description = "Whether to include the screen's alpha channel in the ImageData. If false, the screenshot will be fully opaque.",
                                    descriptiont = {
                                        jp = "ImageData へ画面の透過チャンネルを含めるかどうか。 false であれば、画面撮影の透過成分は完全に不透明になります。",
                                        pt = "Se se deve incluir ou não o canal alfa da tela no DadoDeImagem. Se falso, a captura será totalmente opaca."
                                    },
                                    name = "copyAlpha",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The image data of the screenshot.",
                                    descriptiont = {
                                        jp = "画面撮影の画像データ。",
                                        pt = "O dado de imagem da captura."
                                    },
                                    name = "screenshot",
                                    type = "ImageData"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new SpriteBatch object.",
                    descriptiont = {
                        de = "Erstellt einen neuen SpriteBatch.",
                        jp = "SpriteBatch オブジェクトの新規作成。",
                        pt = "Cria um novo objeto LoteDeSprites.",
                        ru = "Создает  группу спрайтов."
                    },
                    minidescriptiont = {
                        de = "Erstellt einen neuen SpriteBatch.",
                        jp = "SpriteBatch オブジェクトの新規作成。",
                        pt = "Cria um novo LoteDeSprites.",
                        ru = "Создает  группу спрайтов."
                    },
                    name = "newSpriteBatch",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The Image or Canvas to use for the sprites.",
                                    descriptiont = {
                                        de = "Das Bild oder Canvas welches für die Sprites verwendet werden soll.",
                                        jp = "スプライトとして使用する Image または Canvas です。",
                                        pt = "A Imagem ou Pintura a ser usada nos sprites."
                                    },
                                    name = "texture",
                                    type = "Texture"
                                },
                                {
                                    default = "1000",
                                    description = "The max number of sprites.",
                                    descriptiont = {
                                        de = "Die maximale Anzahl an Sprites.",
                                        jp = "SpriteBatch が随時有することができるスプライトの最大数。",
                                        pt = "O número máximo de sprites."
                                    },
                                    name = "maxsprites",
                                    type = "number"
                                },
                                {
                                    default = "\"dynamic\"",
                                    description = "The expected usage of the SpriteBatch. The specified usage mode affects the SpriteBatch's memory usage and performance.",
                                    descriptiont = {
                                        de = "Der erwartete Verwendungszweck für den SpriteBatch.",
                                        jp = "SpriteBatch で予想される使用方法。指定された使用方法の方式は SpriteBatch におけるメモリの使用状況と性能に影響を与えます。",
                                        pt = "O modo de uso esperado do LoteDeSprites."
                                    },
                                    name = "usage",
                                    type = "SpriteBatchUsage"
                                }
                            },
                            returns = {
                                {
                                    description = "The new SpriteBatch.",
                                    descriptiont = {
                                        de = "Der neue SpriteBatch.",
                                        jp = "新規 SpriteBatch です。",
                                        pt = "O novo LoteDeSprites."
                                    },
                                    name = "spriteBatch",
                                    type = "SpriteBatch"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new drawable Video. Currently only Ogg Theora video files are supported.",
                    descriptiont = {
                        jp = "描画可能な Video を新規作成します。現在のところ Ogg Theora 形式の動画ファイルのみ対応しています。"
                    },
                    minidescriptiont = {
                        jp = "描画可能な Video を新規作成します。"
                    },
                    name = "newVideo",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The file path to the Ogg Theora video file.",
                                    descriptiont = {
                                        jp = "Ogg Theora 形式の動画ファイルへのファイルパス。"
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    default = "nil",
                                    description = "Whether to try to load the video's audio into an audio Source. If not explicitly set to true or false, it will try without causing an error if the video has no audio.",
                                    descriptiont = {
                                        jp = "Video の音声へ音声 Source を読み込むべきかどうかを指定します。明示的に true または false に設定されないとき、 Video に音声がない場合であってもエラーは発生しません。"
                                    },
                                    name = "loadaudio",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Video.",
                                    descriptiont = {
                                        jp = "新規 Video."
                                    },
                                    name = "video",
                                    type = "Video"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A video stream object.",
                                    descriptiont = {
                                        jp = "VideoStream オブジェクト。"
                                    },
                                    name = "videostream",
                                    type = "VideoStream"
                                },
                                {
                                    default = "nil",
                                    description = "Whether to try to load the video's audio into an audio Source. If not explicitly set to true or false, it will try without causing an error if the video has no audio.",
                                    descriptiont = {
                                        jp = "Video の音声へ音声 Source を読み込むべきかどうかを指定します。明示的に true または false に設定されないとき、 Video に音声がない場合であってもエラーは発生しません。"
                                    },
                                    name = "loadaudio",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Video.",
                                    descriptiont = {
                                        jp = "新規 Video."
                                    },
                                    name = "video",
                                    type = "Video"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Resets the current coordinate transformation.\n\nThis function is always used to reverse any previous calls to love.graphics.rotate, love.graphics.scale, love.graphics.shear or love.graphics.translate. It returns the current transformation state to its defaults.",
                    descriptiont = {
                        jp = "現在の座標変換を初期状態へ戻します。\n\nこの関数は以前に呼ばれた love.graphics.rotate, love.graphics.scale, love.graphics.shear または love.graphics.translate の全てに対して破棄するために常時使用されます。これは現在の座標状態を標準へ復帰します。",
                        pt = "Reinicia a transformação de coordenadas atual.\n\nEsta função é sempre usada para reverter quaisquer chamadas anteriores a love.graphics.rotate, love.graphics.scale, love.graphics.shear ou love.graphics.translate. Retorna o estado de transformação atual ao estado padrão."
                    },
                    minidescriptiont = {
                        jp = "現在の座標変換を初期状態へ戻します。",
                        pt = "Reinicia a transformação de coordenadas atual."
                    },
                    name = "origin",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Draws one or more points.",
                    descriptiont = {
                        jp = "一つ以上の点を描画します。"
                    },
                    minidescriptiont = {
                        jp = "一つ以上の点を描画します。"
                    },
                    name = "points",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The position of the first point on the x-axis.",
                                    descriptiont = {
                                        jp = "x-軸において最初の点の位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the first point on the y-axis.",
                                    descriptiont = {
                                        jp = "y-軸において最初の点の位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The x and y coordinates of additional points.",
                                    descriptiont = {
                                        jp = "追加の点において x および y 座標。"
                                    },
                                    name = "...",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table containing multiple point positions, in the form of {x, y, ...}.",
                                    name = "points",
                                    table = {
                                        {
                                            description = "The position of the first point on the x-axis.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the first point on the y-axis.",
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The x and y coordinates of additional points.",
                                            name = "...",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table containing multiple individually colored points, in the form of {point, ...}. Each table contains the position and color of a point in the form of {x, y, r, g, b, a}. The color components are optional.",
                                    name = "points",
                                    table = {
                                        {
                                            description = "A table containing the position and color of the first point, in the form of {x, y, r, g, b, a}. The color components are optional.",
                                            name = "point",
                                            type = "table"
                                        },
                                        {
                                            description = "Additional tables containing the position and color of more points, in the form of {x, y, r, g, b, a}. The color components are optional.",
                                            name = "...",
                                            type = "table"
                                        }
                                    },
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draw a polygon.\n\nFollowing the mode argument, this function can accept multiple numeric arguments or a single table of numeric arguments. In either case the arguments are interpreted as alternating x and y coordinates of the polygon's vertices.\n\nWhen in fill mode, the polygon must be convex and simple or rendering artifacts may occur.",
                    descriptiont = {
                        de = "Zeichnet ein Vieleck (Polygon).\n\nDiese Funktion nimmt nach dem Zeichenmodus-Argument weitere numerische Argumente oder einen Table mit numerischen Werten entgegen. Diese Werte werden sodann zum Zeichnen des Polygons genutzt, wobei immer von wechselnden x und y Werten ausgegangen wird.\n\nWenn der \"gefüllte\" Zeichenmodus verwendet wird, dann muss das Polygon sowohl convex als auch einfach sein. Ansonsten können Renderartifakte entstehen. Seit love.math.triangulate und love.math.isConvex verwendet werden.",
                        jp = "多角形を描画します。\n\nmode 引数に続いて、この関数へ複数の数値引数または数値から成る単体のテーブル引数を解釈できます。いずれの場合も、引数は多角形の頂点の x と y 座標が交互に解釈されます。",
                        pt = "Desenha um polígono.\n\nApós o argumento modo, esta função pode aceitar múltiplos argumentos numéricos ou uma única tabela de argumentos numéricos. Em ambos casos, os argumentos são interpretados alternadamente como coordenadas x e y dos vértices do polígono.\n\n''Nota: quando no modo '''fill''', o polígono deve ser convexo e simples ou poderão ocorrer artefatos de renderização. love.math.triangulate e love.math.isConvex podem ser usados no 0.9.0 ou posteriores.''",
                        ru = "Рисует многоугольник.\n\nПосле аргумента \"mode\", эта функция может принимать несколько числовых аргументов или одну таблицу с числовыми аргументами. В каждом случае аргументы воспринимаются как X и Y координаты углов многоугольника.\n\n''Примечание: когда используется режим '''fill''', многоугольник должен быть выпуклым и простым, иначе могут возникнуть артефакты при рисовании.''"
                    },
                    minidescriptiont = {
                        de = "Zeichnet ein Polygon.",
                        jp = "多角形を描画します。",
                        pt = "Desenha um polígono.",
                        ru = "Рисует многоугольник."
                    },
                    name = "polygon",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "How to draw the polygon.",
                                    descriptiont = {
                                        de = "Bestimmt wie das Polygon gezeichnet werden soll.",
                                        jp = "多角形の描画方法。",
                                        pt = "Como o polígono será desenhado."
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The vertices of the polygon.",
                                    descriptiont = {
                                        de = "Die Vertices des Polygons.",
                                        jp = "多角形の頂点。",
                                        pt = "Os vértices do polígono."
                                    },
                                    name = "...",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "How to draw the polygon.",
                                    descriptiont = {
                                        de = "Bestimmt wie das Polygon gezeichnet werden soll.",
                                        jp = "多角形の描画方法。",
                                        pt = "Como o polígono será desenhado.",
                                        ru = "Как нарисовать многоугольник"
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The vertices of the polygon as a table.",
                                    descriptiont = {
                                        de = "Die Vertices des Polygons in einem Table.",
                                        jp = "多角形の頂点をテーブルで表記したもの。",
                                        pt = "Os vértices do polígono em uma tabela.",
                                        ru = "Таблица с координатами вершин многоугольника."
                                    },
                                    name = "vertices",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Pops the current coordinate transformation from the transformation stack.\n\nThis function is always used to reverse a previous push operation. It returns the current transformation state to what it was before the last preceding push. For an example, see the description of love.graphics.push.",
                    descriptiont = {
                        jp = "現在の座標変換を変換スタックから復帰します。\n\nこの関数は以前の待避操作から回復するために常時使用されます。それは現在の変換状態を最後に待避する前の状態へ復帰します。",
                        pt = "Desempilha a transformação de coordenadas atual da pilha de transformações.\n\nEsta função é sempre usada para reverter uma operação de empilhamento anterior. Ela retorna o estado de transformações atual ao que era antes do empilhamento mais recente.",
                        ru = "Достает состояние координатной системы из стека и устанавливает его в качестве текущего.\n\nЭта функция всегда используется после операции добавления состояния в стек (love.graphics.push). Она возвращает то состояние координат, которое было добавлено в стек последним. Пример можно найти в описании love.graphics.push."
                    },
                    minidescriptiont = {
                        jp = "現在の座標変換を変換スタックから復帰します。",
                        pt = "Desempilha a transformação de coordenadas atual da pilha de transformações.",
                        ru = "Достает состояние координатной системы из стека."
                    },
                    name = "pop",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Displays the results of drawing operations on the screen.\n\nThis function is used when writing your own love.run function. It presents all the results of your drawing operations on the screen. See the example in love.run for a typical use of this function.",
                    descriptiont = {
                        de = "Zeigt das Ergebnis der bisherigen Zeichenoperationen auf dem Bildschirm.\n\nDiese Funktion wird nur relevant, wenn man eine benutzerdefinierte love.run-Funktion schreiben möchte. Sie präsentiert das Ergebnis aller Zeichenoperationen auf dem Bildschirm. Ein Beispiel zur Verwendung dieser Funktion findet sich in der vorgegebenen love.run-Funktion.",
                        jp = "画面への描画操作結果を表示します。\n\nこの関数は自分で love.run 関数を書く場合に使用します。これにより画面への描画結果を全て表示します。この関数の典型的な使用法については love.run の用例を参照してください。",
                        pt = "Mostra os resultados de operações de desenho na tela.\n\nEsta função é usada quando você está escrevendo sua própria função  love.run. Ela apresenta todos os resultados das suas operações de desenho na tela. Veja o exemplo em love.run de um uso típico dessa função.",
                        ru = "Отображает на экране результаты операций рисования.\n\nЭта функция используется, когда вы используете собственную функцию  love.run. Она выводит на экран все результаты операций рисования. В примерах для  love.run можно посмотреть как обычно используется эта функция."
                    },
                    minidescriptiont = {
                        de = "Zeigt das Ergebnis der bisherigen Zeichenoperationen auf dem Bildschirm.",
                        jp = "画面への描画操作結果を表示します。",
                        pt = "Mostra os resultados de operações de desenho na tela.",
                        ru = "Отображает на экране результаты операций рисования."
                    },
                    name = "present",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Draws text on screen. If no Font is set, one will be created and set (once) if needed.\n\nAs of LOVE 0.7.1, when using translation and scaling functions while drawing text, this function assumes the scale occurs first. If you don't script with this in mind, the text won't be in the right position, or possibly even on screen.\n\nlove.graphics.print and love.graphics.printf both suppport UTF-8 encoding. You'll also need a proper Font for special characters.",
                    descriptiont = {
                        de = "Zeichnet einen Text auf den Bildschirm. Wenn kein Font spezifiziert ist, wird ein Standard-Font erstellt und verwendet.\n\nVerschiebungen und Skalierungen des Koordinatensystems, werden seit LÖVE 0.7.1 beim Zeichnen des Textes  berücksichtigt. Dies sollte man beachten, da es sonst vorkommen kann, dass der Text an der falschen Stelle oder gar nicht auf dem Bildschirm gezeichnet wird.\n\nSowohl love.graphics.print als auch love.graphics.printf unterstützen beide UTF-8 Encoding. Für Spezialcharaktere wird ein passender Font benötigt.",
                        jp = "画面へテキストを描画します。 Font が設定されていない場合は、必要ならば(一括で)作成と設定をしてください。\n\nLÖVE 0.7.1 において、変換および尺度変更の関数を使用してテキストを描画する場合は、この関数では最初に尺度変更が発生すると仮定します。このことをスクリプトで注意しない場合は、テキストは正しい位置に表示されないか、または恐らく画面に表示されません。\n\nlove.graphics.print および love.graphics.printf の両方ともに UTF-8 文字コードに対応しています。さらに特殊文字用の適切な Font が必要です。",
                        pt = "Desenha texto na tela. Se nenhuma Fonte estiver configurada, uma irá ser criada e configurada (uma vez) se necessário.\n\nDesde o LOVE 0.7.1, quando se usam funções de translação e redimensionamento ao desenhar texto, esta função supõe que o redimensionamento ocorra primeiro. Se você não programar com isso em mente, o texto não ficará na posição certa, ou talvez nem apareça na tela.\n\nAmbos love.graphics.print e love.graphics.printf suportam codificação UTF-8. Você também vai precisar de uma Fonte apropriada para caracteres especiais.",
                        ru = "Рисует текст на экране. Если Font не установлен, он будет создан и установлен, если необходимо."
                    },
                    minidescriptiont = {
                        de = "Zeichnet einen Text auf den Bildschirm.",
                        jp = "画面へテキストを描画します。 Font が設定されていない場合は、必要ならば(一括で)作成と設定をしてください。",
                        pt = "Desenha texto na tela. Se nenhuma Fonte estiver configurada, uma será configurada.",
                        ru = "Рисует текст на экране."
                    },
                    name = "print",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The text to draw.",
                                    descriptiont = {
                                        de = "Der Text der gezeichnet werden soll.",
                                        jp = "テキスト文字列。",
                                        pt = "O texto a ser desenhado."
                                    },
                                    name = "text",
                                    type = "string"
                                },
                                {
                                    description = "The position to draw the object (x-axis).",
                                    descriptiont = {
                                        de = "Die x-Position an der gezeichnet werden soll.",
                                        jp = "オブジェクトの描画位置 (x-軸)。",
                                        pt = "A posição em que o objeto será desenhado (eixo x)."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position to draw the object (y-axis).",
                                    descriptiont = {
                                        de = "Die y-Position an der gezeichnet werden soll.",
                                        jp = "オブジェクトの描画位置 (y-軸)。",
                                        pt = "A posição em que o objeto será desenhado (eixo y)."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Orientation (radians).",
                                    descriptiont = {
                                        de = "Die Ausrichtung in Radianten.",
                                        jp = "方向 (弧度)。",
                                        pt = "Orientação (radianos)."
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "Scale factor (x-axis).",
                                    descriptiont = {
                                        de = "Skalierungsfaktor (x-Achse).",
                                        jp = "尺度変更係数 (x-軸)。",
                                        pt = "Fator de escala (eixo x)."
                                    },
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "Scale factor (y-axis).",
                                    descriptiont = {
                                        de = "Skalierungsfaktor (y-Achse).",
                                        jp = "尺度変更係数 (y-軸)。",
                                        pt = "Fator de escala (eixo y)."
                                    },
                                    name = "sy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (x-axis).",
                                    descriptiont = {
                                        de = "Ursprungsverschiebung (x-Achse).",
                                        jp = "原点の支距 (x-軸)。",
                                        pt = "Deslocamento da origem (eixo x)."
                                    },
                                    name = "ox",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (y-axis).",
                                    descriptiont = {
                                        de = "Ursprungsverschiebung (y-Achse).",
                                        jp = "原点の支距 (y-軸)。",
                                        pt = "Deslocamento da origem (eixo y)."
                                    },
                                    name = "oy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shear factor (x-axis).",
                                    descriptiont = {
                                        de = "Scherungsfaktor (x-Achse).",
                                        jp = "剪断係数 (x-軸)。",
                                        pt = "Fator de inclinação (eixo x)."
                                    },
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shear factor (y-axis).",
                                    descriptiont = {
                                        de = "Scherungsfaktor (y-Achse).",
                                        jp = "剪断係数 (y-軸)。",
                                        pt = "Fator de inclinação (eixo y)."
                                    },
                                    name = "ky",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                de = "In Version love.graphics.print beim ersten '\\0' (Null) Charakter. Dies kann zu Problemen führen, wenn man zum Beispiel Tastaturinput an einen String anfügt, da einige davon Multibyte-Charaktere sind und unter Umständen Null-Bytes enthalten.",
                                pt = "Nas versões 0.8.0 e anteriores, love.graphics.print para no primeiro caracter \"\\0\" (nulo). Isso pode dar problemas se você for acrescentar texto digitado pelo usuário para formar seu string, já que alguns desses caracteres serão unicode multibyte, provavelmente contendo bytes nulos."
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table containing colors and strings to add to the object, in the form of {color1, string1, color2, string2, ...}.",
                                    name = "coloredtext",
                                    table = {
                                        {
                                            description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                            name = "color1",
                                            type = "table"
                                        },
                                        {
                                            description = "A string of text which has a color specified by the previous color.",
                                            name = "string1",
                                            type = "string"
                                        },
                                        {
                                            description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                            name = "color2",
                                            type = "table"
                                        },
                                        {
                                            description = "A string of text which has a color specified by the previous color.",
                                            name = "string2",
                                            type = "string"
                                        },
                                        {
                                            description = "Additional colors and strings.",
                                            name = "...",
                                            type = "tables and strings"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    description = "The position of the new text on the x-axis.",
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the new text on the y-axis.",
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The orientation of the object in radians.",
                                    name = "angle",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "Scale factor on the x-axis.",
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "Scale factor on the y-axis.",
                                    name = "sy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset on the x-axis.",
                                    name = "ox",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset on the y-axis.",
                                    name = "oy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing / skew factor on the x-axis.",
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing / skew factor on the y-axis.",
                                    name = "ky",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draws formatted text, with word wrap and alignment.\n\nSee additional notes in love.graphics.print.\n\nIn version 0.9.2 and earlier, wrapping was implemented by breaking up words by spaces and putting them back together to make sure things fit nicely within the limit provided. However, due to the way this is done, extra spaces between words would end up missing when printed on the screen, and some lines could overflow past the provided wrap limit. In version 0.10.0 and newer this is no longer the case.",
                    descriptiont = {
                        de = "Zeichnet formatierten Text mit Zeilenumbrüchen und Textausrichtung.",
                        jp = "語句の折り返しと整列を行い、整形したテキストを描画します。\n\n追加の注記は love.graphics.print を参照してください。\n\nversion 0.9.2 以前において、折り返しの実装は空白による語句の分割および、指定された制限範囲内に上手く合わさるのを確実にするために後方へ配置します。しかしながら、この方法では、この時点で実行終了してしまうが故に、語句間への空白の追加は完了して不足するので、画面へ表示されたときには、一部の行は与えられた制限を超過してしまい文字溢れを起こしてしまいます。この症状は version 0.10.0 以降では修正済です。",
                        pt = "Desenha texto formatado, com quebra de linha e alinhamento.\n\nVeja notas adicionais em love.graphics.print.",
                        ru = "Рисует форматированный текст с переносом слов и выравниванием."
                    },
                    minidescriptiont = {
                        de = "Zeichnet formatierten Text mit Zeilenumbrüchen und Textausrichtung.",
                        jp = "語句の折り返しと整列を行い、整形したテキストを描画します。",
                        pt = "Desenha texto formatado, com quebra de linha e alinhamento.",
                        ru = "Рисует форматированный текст с переносом слов и выравниванием."
                    },
                    name = "printf",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "A text string.",
                                    descriptiont = {
                                        de = "Ein String.",
                                        jp = "テキスト文字列。",
                                        pt = "O string de texto."
                                    },
                                    name = "text",
                                    type = "string"
                                },
                                {
                                    description = "The position on the x-axis.",
                                    descriptiont = {
                                        de = "Die Position auf der x-Achse.",
                                        jp = "x-軸の座標での位置。",
                                        pt = "A posição no eixo x."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position on the y-axis.",
                                    descriptiont = {
                                        de = "Die Position auf der y-Achse.",
                                        jp = "y-軸の座標での位置。",
                                        pt = "A posição no eixo y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "Wrap the line after this many horizontal pixels.",
                                    descriptiont = {
                                        de = "Bestimmt nach wievielen Pixeln die Zeile umgebrochen werden soll.",
                                        jp = "この水平ピクセルの後に行を折り返す長さ。",
                                        pt = "Quebrar a linha depois deste tanto de pixels."
                                    },
                                    name = "limit",
                                    type = "number"
                                },
                                {
                                    default = "\"left\"",
                                    description = "The alignment.",
                                    descriptiont = {
                                        de = "Der Modus zur Ausrichtung des Strings.",
                                        jp = "テキストの揃え方。",
                                        pt = "O alinhamento."
                                    },
                                    name = "align",
                                    type = "AlignMode"
                                },
                                {
                                    default = "0",
                                    description = "Orientation (radians).",
                                    descriptiont = {
                                        de = "Ausrichtung (Radianten).",
                                        jp = "方向 (弧度)。",
                                        pt = "Orientação (radianos)."
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "Scale factor (x-axis).",
                                    descriptiont = {
                                        de = "Skalierungsfaktor (x-Achse).",
                                        jp = "尺度変更係数 (x-軸)。",
                                        pt = "Fator de escala (eixo x)."
                                    },
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "Scale factor (y-axis).",
                                    descriptiont = {
                                        de = "Skalierungsfaktor (y-Achse).",
                                        jp = "尺度変更係数 (y-軸)。",
                                        pt = "Fator de escala (eixo y)."
                                    },
                                    name = "sy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (x-axis).",
                                    descriptiont = {
                                        de = "Verschiebung des Ursprungs in Pixeln (x-Achse).",
                                        jp = "原点の支距 (x-軸)。",
                                        pt = "Deslocamento da origem (eixo x)."
                                    },
                                    name = "ox",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset (y-axis).",
                                    descriptiont = {
                                        de = "Verschiebung des Ursprungs in Pixeln (y-Achse).",
                                        jp = "原点の支距 (y-軸)。",
                                        pt = "Deslocamento da origem (eixo y)."
                                    },
                                    name = "oy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shear factor (x-axis).",
                                    descriptiont = {
                                        de = "Scherfaktor (x-Achse).",
                                        jp = "剪断係数 (x-軸)。",
                                        pt = "Fator de inclinação (eixo x)."
                                    },
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shear factor (y-axis).",
                                    descriptiont = {
                                        de = "Scherfaktor (y-Achse).",
                                        jp = "剪断係数 (y-軸)。",
                                        pt = "Fator de inclinação (eixo y)."
                                    },
                                    name = "ky",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                de = "Zu beachten ist, dass die Begrenzung die Position des Texts bei den Ausrichtungsmodi 'center' und 'right' beeinflusst.\n\n&lt;source lang=\"lua\"&gt;\n\nlove.graphics.printf(\"This text is aligned center\",100, 100, 200,\"center\") -- center your text around x = 200/2 + 100 = 200\n\nlove.graphics.printf(\"This text is aligned right\",100, 100, 200,\"right\") -- align right to x = 100 + 200 = 300\n\n&lt;/source&gt;",
                                pt = "Repare que o argumento limite afeta a posição do seu texto, com alinhamentos centralizados (\"center\") e à direita (\"right\").\n\n&lt;source lang=\"lua\"&gt;\n\nlove.graphics.printf(\"Este texto está centralizado\",100, 100, 200,\"center\") -- centraliza seu texto ao redor de x = 200/2 + 100 = 200\n\nlove.graphics.printf(\"Este texto está alinhado à direita\",100, 100, 200,\"right\") -- alinha à direita até x = 100 + 200 = 300\n\n&lt;/source&gt;"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A table containing colors and strings to add to the object, in the form of {color1, string1, color2, string2, ...}.",
                                    name = "coloredtext",
                                    table = {
                                        {
                                            description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                            name = "color1",
                                            type = "table"
                                        },
                                        {
                                            description = "A string of text which has a color specified by the previous color.",
                                            name = "string1",
                                            type = "string"
                                        },
                                        {
                                            description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                            name = "color2",
                                            type = "table"
                                        },
                                        {
                                            description = "A string of text which has a color specified by the previous color.",
                                            name = "string2",
                                            type = "string"
                                        },
                                        {
                                            description = "Additional colors and strings.",
                                            name = "...",
                                            type = "tables and strings"
                                        }
                                    },
                                    type = "table"
                                },
                                {
                                    description = "The position of the new text on the x-axis.",
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the new text on the y-axis.",
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The maximum width in pixels of the text before it gets automatically wrapped to a new line.",
                                    name = "wraplimit",
                                    type = "number"
                                },
                                {
                                    description = "The alignment of the text.",
                                    name = "align",
                                    type = "AlignMode"
                                },
                                {
                                    default = "0",
                                    description = "The orientation of the object in radians.",
                                    name = "angle",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "Scale factor on the x-axis.",
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "Scale factor on the y-axis.",
                                    name = "sy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset on the x-axis.",
                                    name = "ox",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Origin offset on the y-axis.",
                                    name = "oy",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing / skew factor on the x-axis.",
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "Shearing / skew factor on the y-axis.",
                                    name = "ky",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Copies and pushes the current coordinate transformation to the transformation stack.\n\nThis function is always used to prepare for a corresponding pop operation later. It stores the current coordinate transformation state into the transformation stack and keeps it active. Later changes to the transformation can be undone by using the pop operation, which returns the coordinate transform to the state it was in before calling push.",
                    descriptiont = {
                        jp = "現在の座標変換を変換スタックへコピーおよび待避します。\n\nこの関数はその後に対応する復帰操作の準備をするために常に使用されます。これは変換スタックへ現在の座標状態を格納して保持したままにしておきます。変換による変更後は復帰操作を使用することにより元に戻すことができ、待避操作を呼び出す前の座標変換の状態へ復帰します。",
                        pt = "Copia e empilha a transformação de coordenadas atual na pilha de transformações.\n\nEsta função é sempre usada para preparar uma operação de desempilhamento posterior correspondente. Ela salva o estado de transformação de coordenadas atual na pilha de transformações e o mantém ativo. Mudanças posteriores à transformação podem ser desfeitas usando a operação de desempilhamento, que retorna a transformação de coordenadas ao estado em que estava antes de se chamar o empilhamento.",
                        ru = "Копирует и вставляет текущее координатное преобразование в стек.\n\nЭта функция всегда используется перед последующим вызовом функции love.graphics.pop. Она сохраняет текущие координатные преобразования в стек. Последующие изменения координатных преобразований могут быть отменены функцией \"pop\", которая достает из стека последнее добавленное туда состояние координатных преобразований."
                    },
                    minidescriptiont = {
                        jp = "現在の座標変換を変換スタックへコピーおよび待避します。",
                        pt = "Copia e empilha a transformação de coordenadas atual na pilha de transformações.",
                        ru = "Копирует и вставляет текущее координатное преобразование в стек."
                    },
                    name = "push",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "\"transform\"",
                                    description = "The type of stack to push (e.g. just transformation state, or all love.graphics state).",
                                    descriptiont = {
                                        jp = "待避を行うスタックの種類 (例えば単純な変換状態、または love.graphics の全状態)。"
                                    },
                                    name = "stack",
                                    type = "StackType"
                                }
                            },
                            descriptiont = {
                                jp = "スタックへ特定の種類における状態を待避します。"
                            }
                        }
                    }
                },
                {
                    description = "Draws a rectangle.",
                    descriptiont = {
                        de = "Zeichnet ein Rechteck.",
                        jp = "長方形を描画します。",
                        pt = "Desenha um retângulo."
                    },
                    minidescriptiont = {
                        de = "Zeichnet ein Rechteck.",
                        jp = "長方形を描画します。",
                        pt = "Desenha um retângulo.",
                        ru = "Рисует прямоугольник."
                    },
                    name = "rectangle",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "How to draw the rectangle.",
                                    descriptiont = {
                                        de = "Bestimmt wie das Rechteck gezeichnet werden soll.",
                                        jp = "長方形の描画方法。",
                                        pt = "Como desenhar o retângulo.",
                                        ru = "В каком режиме рисовать прямоугольник."
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of top-left corner along the x-axis.",
                                    descriptiont = {
                                        de = "Die Position der oberen-linken Ecke auf der x-Achse.",
                                        jp = "左上角から見た x-軸の座標。",
                                        pt = "A posição do canto superior esquerdo ao longo do eixo x.",
                                        ru = "X координата прямоугольника."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of top-left corner along the y-axis.",
                                    descriptiont = {
                                        de = "Die Position der oberen-linken Ecke auf der y-Achse.",
                                        jp = "左上角から見た y-軸の座標。",
                                        pt = "A posição do canto superior esquerdo ao longo do eixo y.",
                                        ru = "Y координата прямоугольника."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "Width of the rectangle.",
                                    descriptiont = {
                                        de = "Die Breite des Rechtecks.",
                                        jp = "長方形の幅。",
                                        pt = "A largura do retângulo.",
                                        ru = "Ширина прямоугольника."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "Height of the rectangle.",
                                    descriptiont = {
                                        de = "Die Höhe des Rechtecks.",
                                        jp = "長方形の高さ。",
                                        pt = "A altura do retângulo.",
                                        ru = "Высота прямоугольника."
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                ru = "Рисует прямоугольник."
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "How to draw the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の描画方法。",
                                        ru = "В каком режиме рисовать прямоугольник."
                                    },
                                    name = "mode",
                                    type = "DrawMode"
                                },
                                {
                                    description = "The position of top-left corner along the x-axis.",
                                    descriptiont = {
                                        jp = "左上角から見た x-軸の座標。",
                                        ru = "X координата прямоугольника."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of top-left corner along the y-axis.",
                                    descriptiont = {
                                        jp = "左上角から見た y-軸の座標。",
                                        ru = "Y координата прямоугольника."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "Width of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の幅。",
                                        ru = "Ширина прямоугольника."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "Height of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の高さ。",
                                        ru = "Высота прямоугольника."
                                    },
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    description = "The x-axis radius of each round corner. Cannot be greater than half the rectangle's width.",
                                    descriptiont = {
                                        jp = "x-軸によるそれぞれの丸角の半径。長方形の幅の半分より大きくできません。",
                                        ru = "Радиус всех закругленных углов по оси x. Не может быть больше половины ширины прямоугольника."
                                    },
                                    name = "rx",
                                    type = "number"
                                },
                                {
                                    default = "rx",
                                    description = "The y-axis radius of each round corner. Cannot be greater than half the rectangle's height.",
                                    descriptiont = {
                                        jp = "y-軸によるそれぞれの丸角の半径。長方形の幅の半分より大きくできません。",
                                        ru = "Радиус всех закругленных углов по оси y. Не может быть больше половины высоты прямоугольника."
                                    },
                                    name = "ry",
                                    type = "number"
                                },
                                {
                                    default = "nil",
                                    description = "The number of segments used for drawing the round corners. A default amount will be chosen if no number is given.",
                                    descriptiont = {
                                        jp = "丸角を描画するために使用される線分の数。数値未指定時はデフォルト値が選択されます。",
                                        ru = "Количество сегментов используемых для рисования закругленных углов. A default amount will be chosen if no number is given."
                                    },
                                    name = "segments",
                                    type = "number"
                                }
                            },
                            description = "Draws a rectangle with rounded corners.",
                            descriptiont = {
                                jp = "長方形を丸角で描画します。",
                                ru = "Рисует прямоугольник с закругленными углами."
                            }
                        }
                    }
                },
                {
                    description = "Resets the current graphics settings.\n\nCalling reset makes the current drawing color white, the current background color black, resets any active Canvas or Shader, and removes any scissor settings. It sets the BlendMode to alpha. It also sets both the point and line drawing modes to smooth and their sizes to 1.0.",
                    descriptiont = {
                        jp = "現在のグラフィック設定を初期状態に戻します。\n\nこの関数を呼ぶと現在の描画色は白色、現在の背景色は黒色に設定され、有効な Canvas または Shader は全て無効、および全ての切り抜きは削除されます。BlendMode は alpha へ設定され、 色成分マスク は全て有効になり、 ワイヤーフレーム・モード は無効および現在のグラフィックス変換は origin へ初期化します。点と線に関しては両方とも描画方法を &lt;tt&gt;smooth&lt;/tt&gt; および大きさは &lt;tt&gt;1.0&lt;/tt&gt; へ設定します。",
                        pt = "Reinicia as configurações gráficas atuais.\n\nChamar o reset torna branca a cor de desenho atual, preta a cor de fundo atual, desativa todas Pinturas ou Shaders, e remove todas configurações de recorte. Configura o ModoDeMistura como &lt;tt&gt;alfa&lt;/tt&gt;, ativa todas máscaras de componente de cor, desativa o modo de estrutura de arame e reconfigura o modo de transformação gráfica atual de volta à origem. Também configura ambos modos de desenho de ponto e de linha como &lt;tt&gt;smooth&lt;/tt&gt; (suave) e seus tamanhos como &lt;tt&gt;1.0&lt;/tt&gt;.",
                        ru = "Сбрасывает текущие графические настройки.\n\nУстанавливает цвет рисования на белый, цвет фона на черный и убирает любые настройки отсечения. Устанавливает BlendMode на &lt;tt&gt;alpha&lt;/tt&gt;, а ColorMode на &lt;tt&gt;modulate&lt;/tt&gt;. Также устанавливает режим рисования точек и линий на &lt;tt&gt;smooth&lt;/tt&gt; и их размер на &lt;tt&gt;1.0&lt;/tt&gt; . Наконец, убирает все настройки для пунктира."
                    },
                    minidescriptiont = {
                        jp = "現在のグラフィック設定を初期状態に戻します。",
                        pt = "Reinicia as configurações gráficas atuais.",
                        ru = "Сбрасывает текущие графические настройки."
                    },
                    name = "reset",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Rotates the coordinate system in two dimensions.\n\nCalling this function affects all future drawing operations by rotating the coordinate system around the origin by the given amount of radians. This change lasts until love.draw exits.",
                    descriptiont = {
                        jp = "二次元座標系を回転させます。\n\nこの関数を呼び出すと指定された弧度の量により原点の周囲にある座標系の回転を行うため以降の全描画操作に影響します。この変更は love.draw() の終端まで継続します。",
                        pt = "Rotaciona o sistema de coordenadas em duas dimensões.\n\nA chamada desta função afeta todas as operações futuras de desenho, rotacionando o sistema de coordenadas em torno da origem, de acordo com a medida em radianos. Essa mudança dura até a saída da função love.draw().",
                        ru = "Вращает координатную систему в двух измерениях.\n\nЭта функция влияет на все будущие операции рисования, вращая систему координат вокруг начала координат на заданное количество в радианах. Это изменение длится до завершения работы love.draw()."
                    },
                    minidescriptiont = {
                        jp = "二次元座標系を回転させます。",
                        pt = "Rotaciona o sistema de coordenadas em duas dimensões.",
                        ru = "Вращает координатную систему в двух измерениях."
                    },
                    name = "rotate",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The amount to rotate the coordinate system in radians.",
                                    descriptiont = {
                                        jp = "弧度による座標系の回転量。",
                                        pt = "O tanto que se deve rotacionar o sistema de coordenadas, em radianos.",
                                        ru = "Значение, на которое нужно повернуть координатную систему (в радианах)."
                                    },
                                    name = "angle",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Scales the coordinate system in two dimensions.\n\nBy default the coordinate system in LÖVE corresponds to the display pixels in horizontal and vertical directions one-to-one, and the x-axis increases towards the right while the y-axis increases downwards. Scaling the coordinate system changes this relation.\n\nAfter scaling by sx and sy, all coordinates are treated as if they were multiplied by sx and sy. Every result of a drawing operation is also correspondingly scaled, so scaling by (2, 2) for example would mean making everything twice as large in both x- and y-directions. Scaling by a negative value flips the coordinate system in the corresponding direction, which also means everything will be drawn flipped or upside down, or both. Scaling by zero is not a useful operation.\n\nScale and translate are not commutative operations, therefore, calling them in different orders will change the outcome.\n\nScaling lasts until love.draw exits.",
                    descriptiont = {
                        jp = "二次元座標系を尺度変更(拡大・縮小)します。\n\n標準において LÖVE の座標系はディスプレイの水平および垂直方向のピクセルと一対一で対応しており、 X 軸は右方向へ拡大する一方で Y 軸は下方向へ拡大します。この関係を座標系の尺度変更では変更します。\n\nsx および sy により尺度変更された後に、全座標に対しての処理として sx および sy の乗算が実行されます。描画操作における結果の全てにおいても対応して尺度変更される故に、例えば尺度変更が (2, 2) のときは大きな x および y 方向の両方に対して二倍にしたものを作成することを意味します。負数値による尺度変更は対応する方向へ座標系を反転するため、それらは反転または上下逆さま、または両方がどのように描画されるかを意味します。 0 による尺度変更は有用な操作ではありません。\n\n尺度変更および平行移動は交換可能な操作ではないため、それ故に、様々な順序で呼び出すと結果が変更されます。\n\n尺度変更は love.draw() の終端まで継続します。",
                        pt = "Redimensiona o sistema de coordenadas em duas dimensões.\n\nPor padrão, o sistema de coordenadas do LÖVE corresponde aos pixels da tela nas direções horizontal e vertical, na proporção de um para um, e o eixo x cresce para a direita, enquanto o eixo y cresce para baixo. Redimensionar o sistema de coordenadas muda essa relação.\n\nDepois de alterar a escala em ex e ey, tratam-se todas as coordenadas como se fossem multiplicadas por ex e ey. Todos os resultados de operações de desenho também são redimensionados proporcionalmente, então uma escala de (2, 2) por exemplo significaria desenhar tudo com o dobro do tamanho tanto na direção x quanto na y. Redimensionar de acordo com um valor negativo vira o sistema de coordenadas na direção correspondente, o que significa que tudo será desenhado virado ou de ponta cabeça, ou ambos. Redimensionar por zero não é uma operação útil.\n\nRedimensionamento e translação não são operações comutativas, portanto chamá-las em ordens diferentes afetará o resultado.\n\nO redimensionamento dura até a saída da função love.draw().",
                        ru = "Масштабирует систему координат в двух измерениях.\n\nПо умолчанию система координат в LOVE соответствует отображениям пикселей в горизонтальном и вертикальном направлениях один к одному, ось х направлена вправо, а ось y вниз. Масштабирование системы координат изменяет это соотношение.\n\nПосле масштабирования по sx и sy, все координаты рассматриваются как если бы они были умножены на sx и sy. Каждый результат операции рисования также масштабируются, поэтому масштабирование (2, 2), для примера, будет означать, что рисоваться все будет увеличенным в 2 раза и по оси x и по оси y. Масштабирование на отрицательное значение переворачивает систему координат, что означает, что все будет рисоваться вверх ногами  и/или зеркально отраженным по горизонтали. Масштабирование на ноль не приведет ни к чему хорошему.\n\nМасштабирование действует до тех пор, пока love.draw() не завершит работу."
                    },
                    minidescriptiont = {
                        jp = "二次元座標系を尺度変更(拡大・縮小)します。",
                        pt = "Redimensiona o sistema de coordenadas em duas dimensões.",
                        ru = "Масштабирует систему координат в двух измерениях."
                    },
                    name = "scale",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The scaling in the direction of the x-axis.",
                                    descriptiont = {
                                        pt = "O redimensionamento na direção do eixo x.",
                                        ru = "Масштабирование по x-оси."
                                    },
                                    name = "sx",
                                    type = "number"
                                },
                                {
                                    default = "sx",
                                    description = "The scaling in the direction of the y-axis. If omitted, it defaults to same as parameter sx.",
                                    descriptiont = {
                                        pt = "O redimensionamento na direção do eixo y. Se omitido, por padrão, será igual ao parâmetro ex.",
                                        ru = "Масштабирование по y-оси. Если этот аргумент пропущен, то по умолчанию он берется равным sx."
                                    },
                                    name = "sy",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the background color.",
                    descriptiont = {
                        de = "Bestimmt die Hintergrundfarbe.",
                        jp = "背景色を設定します。",
                        pt = "Configura a cor de fundo.",
                        ru = "Устанавливает цвет фона."
                    },
                    minidescriptiont = {
                        de = "Bestimmt die Hintergrundfarbe.",
                        jp = "背景色を設定します。",
                        pt = "Configura a cor de fundo.",
                        ru = "Устанавливает цвет фона."
                    },
                    name = "setBackgroundColor",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The red component (0-255).",
                                    descriptiont = {
                                        de = "Der rote Farbanteil (0-255).",
                                        jp = "赤色の成分 (0-255)",
                                        pt = "A componente vermelha (0-255)."
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    description = "The green component (0-255).",
                                    descriptiont = {
                                        de = "Der grüne Farbanteil (0-255).",
                                        jp = "緑色の成分 (0-255)",
                                        pt = "A componente verde (0-255)."
                                    },
                                    name = "g",
                                    type = "number"
                                },
                                {
                                    description = "The blue component (0-255).",
                                    descriptiont = {
                                        de = "Der blaue Farbanteil (0-255).",
                                        jp = "青色の成分 (0-255)",
                                        pt = "A componente azul (0-255)."
                                    },
                                    name = "b",
                                    type = "number"
                                },
                                {
                                    default = "255",
                                    description = "The alpha component (0-255).",
                                    descriptiont = {
                                        de = "Die Transparenz (0-255).",
                                        jp = "透過の成分 (0-255)",
                                        pt = "A componente alfa (0-255)."
                                    },
                                    name = "a",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A numerical indexed table with the red, green and blue values as numbers. Alpha is 255 if it is not in the table",
                                    descriptiont = {
                                        de = "Ein numerisch indizierter Table mit drei Nummern welche die roten, grünen und blauen Farbanteile sowie die Transparenz der Farbe bestimmen.",
                                        jp = "赤、緑、青および透過の number 値で構成された数字の索引テーブル。",
                                        pt = "Uma tabela com índice numérico com os valores de vermelho, verde, azul e alfa como números.",
                                        ru = "Индексированная числовыми значениями таблица, содержащая красную, зеленую и синюю компоненты цвета."
                                    },
                                    name = "rgba",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the blending mode.",
                    descriptiont = {
                        jp = "混合方式を設定します。",
                        pt = "Configura o modo de mistura.",
                        ru = "Устанавливает режим смешивания."
                    },
                    minidescriptiont = {
                        jp = "混合方式を設定します。",
                        pt = "Configura modo de mistura.",
                        ru = "Устанавливает режим смешивания."
                    },
                    name = "setBlendMode",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The blend mode to use.",
                                    descriptiont = {
                                        jp = "使用する混合方式。",
                                        pt = "O modo de mistura a ser utilizado.",
                                        ru = "Какой режим смешивания использовать."
                                    },
                                    name = "mode",
                                    type = "BlendMode"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The blend mode to use.",
                                    descriptiont = {
                                        jp = "使用する混合方式。"
                                    },
                                    name = "mode",
                                    type = "BlendMode"
                                },
                                {
                                    default = "\"alphamultiply\"",
                                    description = "What to do with the alpha of drawn objects when blending.",
                                    descriptiont = {
                                        jp = "混合時に描画されたオブジェクトの透過をどう扱うか。"
                                    },
                                    name = "alphamode",
                                    type = "BlendAlphaMode"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Captures drawing operations to a Canvas.",
                    descriptiont = {
                        de = "Bestimmt ein neues Renderziel.",
                        jp = "Canvas へ描画操作を取り込みます。"
                    },
                    minidescriptiont = {
                        de = "Bestimmt ein neues Renderziel.",
                        jp = "Canvas へ描画操作を取り込みます。",
                        pt = "Captura operações de desenho em uma Pintura"
                    },
                    name = "setCanvas",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "A render target.",
                                    descriptiont = {
                                        de = "Das neue Renderziel.",
                                        jp = "新規対象。",
                                        pt = "O novo alvo."
                                    },
                                    name = "canvas",
                                    type = "Canvas"
                                }
                            },
                            description = "Sets the render target to a specified Canvas. All drawing operations until the next love.graphics.setCanvas call will be redirected to the Canvas and not shown on the screen.",
                            descriptiont = {
                                de = "Alle Zeichenoperationen, welche nach love.graphics.setCanvas (Deutsch) ausgeführt werden, erscheinen nicht auf dem Bildschirm sondern werden auf das Canvas (Deutsch) umgeleitet.",
                                jp = "指定された Canvas へ表示対象を設定します。全ての描画操作は次の ''love.graphics.setCanvas'' が呼ばれるまで指定された Canvas へ転送されますが画面には表示されません。",
                                pt = "Configura a Pintura especificada como alvo da renderização. Todas operações de desenho até a próxima chamada de ''love.graphics.setCanvas'' serão redirecionadas à Pintura e não serão mostradas na tela."
                            }
                        },
                        {
                            description = "Resets the render target to the screen, i.e. re-enables drawing to the screen.",
                            descriptiont = {
                                de = "Setzt das Renderziel zurück. Alle Zeichenoperationen werden nun wieder direkt auf den Bildschirm gezeichnet.",
                                jp = "複数同時に Canvas の表示対象を設定します。全ての描画操作は次の ''love.graphics.setCanvas'' が呼ばれるまで指定されたキャンバスへ転送されますが画面には表示されません。",
                                pt = "Reconfigura a tela como alvo da renderização, isso é, reabilita o desenho na tela."
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first render target.",
                                    descriptiont = {
                                        de = "Das erste Renderziel.",
                                        pt = "O primeiro alvo de renderização."
                                    },
                                    name = "canvas1",
                                    type = "Canvas"
                                },
                                {
                                    description = "The second render target.",
                                    descriptiont = {
                                        de = "Das zweite Renderziel.",
                                        pt = "O segundo alvo de renderização."
                                    },
                                    name = "canvas2",
                                    type = "Canvas"
                                },
                                {
                                    description = "More canvases.",
                                    descriptiont = {
                                        de = "Weitere Ziele.",
                                        pt = "Mais pinturas."
                                    },
                                    name = "...",
                                    type = "Canvas"
                                }
                            },
                            description = "Sets the render target to multiple simultaneous Canvases. All drawing operations until the next love.graphics.setCanvas call will be redirected to the specified canvases and not shown on the screen.",
                            descriptiont = {
                                de = "Bestimmt gleichzeitig mehrere Offscreen-Buffer als Renderziele. \n\nNormalerweise würde auf all diese Buff der gleiche Inhalt geschrieben werden. Dies kann sich jedoch ändern, wenn sogenannte pixel shader (Deutsch) eingesetzt werden.\n\nDie Canvas (Deutsch) Argumente müssen alle die gleiche Breite und Höhe, sowie den gleichen TextureMode (Deutsch) haben. Nicht alle Computer unterstützen multiple Renderziele. Dies kann per love.graphics.isSupported (Deutsch) überprüft werden. \n\n== Beispiele ==\n\n=== Auf eine Leinwand zeichnen ===\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n    -- Wir erstellen eine neue Leinwand.\n\n    canvas = love.graphics.newCanvas();\n\n    -- Alle Zeichenoperationen werden von hier an auf die Leinwand umgeleitet. \n\n    love.graphics.setCanvas(canvas);\n\n    -- Wir zeichnen ein farbiges Rechteck.\n\n    love.graphics.setColor(230, 240, 120);\n\n    love.graphics.rectangle('fill', 0, 0, 100, 100);\n\n    -- Deaktivieren der Leinwand. \n\n    love.graphics.setCanvas()\n\nend\n\nfunction love.draw()\n\n    -- Wir zeichnen die Leinwand auf den Bildschirm.\n\n    love.graphics.setColor(255, 255, 255)\n\n    love.graphics.draw(canvas, 200, 100, 0, .5, .5)\n\nend\n\n&lt;/source&gt;",
                                pt = "Configura Pinturas múltiplas como alvo de renderização simultânea. Todas operações de desenho até a próxima chamada de ''love.graphics.setCanvas'' serão redirecionadas às Pinturas e não serão mostradas na tela.\n\nNormalmente, a mesma coisa será desenhada em cada tela, mas isso pode ser mudado se um shader de pixel for usado com a  função effects, em vez do effect comum.\n\nTodos os argumentos pintura precisam ter a mesma largura e altura e o mesmo tipo de textura. Nem todos computadores que suportam Pinturas suportam alvos de renderização múltiplos. Se love.graphics.isSupported(\"multicanvas\") retornar verdadeiro, pelo menos 4 pinturas ativas simultâneas são suportadas.\n\n== Exemplos ==\n\n=== Desenhar em uma pintura ===\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n -- criar pintura\n\n pintura = love.graphics.newCanvas()\n\n -- direcionar operações de desenho para a pintura\n\n love.graphics.setCanvas(pintura)\n\n -- desenhar quadrado colorido na pintura\n\n love.graphics.setColor(230,240,120)\n\n love.graphics.rectangle('fill',0,0,100,100)\n\n -- reabilitar desenho na tela principal\n\n love.graphics.setCanvas()\n\nend\n\nfunction love.draw()\n\n -- desenhar pintura redimensionada na tela\n\n love.graphics.setColor(255,255,255)\n\n love.graphics.draw(pintura, 200,100, 0, .5,.5)\n\nend\n\n&lt;/source&gt;"
                            }
                        }
                    }
                },
                {
                    description = "Sets the color used for drawing.",
                    descriptiont = {
                        jp = "描画に使用する色を設定します。",
                        pt = "Configura a cor a ser utilizada para desenhar.",
                        ru = "Устанавливает цвет, используемый для рисования."
                    },
                    minidescriptiont = {
                        jp = "描画に使用する色を設定します。",
                        pt = "Configura a cor a ser utilizada para desenhar.",
                        ru = "Устанавливает цвет, используемый для рисования."
                    },
                    name = "setColor",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The amount of red.",
                                    descriptiont = {
                                        jp = "赤の量。",
                                        pt = "A quantidade de vermelho.",
                                        ru = "Красная компонента."
                                    },
                                    name = "red",
                                    type = "number"
                                },
                                {
                                    description = "The amount of green.",
                                    descriptiont = {
                                        jp = "緑の量。",
                                        pt = "A quantidade de verde.",
                                        ru = "Зеленая компонента."
                                    },
                                    name = "green",
                                    type = "number"
                                },
                                {
                                    description = "The amount of blue.",
                                    descriptiont = {
                                        jp = "青の量。",
                                        pt = "A quantidade de azul.",
                                        ru = "Синяя компонента."
                                    },
                                    name = "blue",
                                    type = "number"
                                },
                                {
                                    description = "The amount of alpha. The alpha value will be applied to all subsequent draw operations, even the drawing of an image.",
                                    descriptiont = {
                                        jp = "透過の量。設定後に画像の描画であっても、透過値は全ての描画操作へ適用されます。",
                                        pt = "A quantidade de alfa. O valor alfa será aplicado a todas operações de desenho subsequentes, até mesmo o desenho de uma imagem.",
                                        ru = "Альфа компонента. Это значение прозрачности будет применяться ко всем последующим операциям рисования, даже к отображению рисунка."
                                    },
                                    name = "alpha",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A numerical indexed table with the red, green, blue and alpha values as numbers. The alpha is optional and defaults to 255 if it is left out.",
                                    descriptiont = {
                                        jp = "赤、緑、青および透過の number 値で構成された数字の索引テーブル。透過は選択制であり無指定時は標準で 255 を設定します。",
                                        pt = "Uma tabela com índice numérico com os valores de vermelho, verde, azul e alfa como números. O alfa é opcional e seu valor padrão será 255 se não for indicado. ",
                                        ru = "Индексированная числовыми значениями таблица, содержащая красную, зеленую, синюю и альфа компоненты цвета. Если значение альфа компоненты не передано, то оно считается равным 255."
                                    },
                                    name = "rgba",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the color mask. Enables or disables specific color components when rendering and clearing the screen. For example, if red is set to false, no further changes will be made to the red component of any pixels.\n\nEnables all color components when called without arguments.",
                    descriptiont = {
                        jp = "色マスクの設定。画面への表示および消去時に特定の色の成分を有効または無効にします。例えば、'''赤'''を '''false''' へ設定したとき、それ以降は全てのピクセルにある赤の成分への変更は一切行われなくなります。",
                        pt = "Configura a máscara de cor. Ativa ou desativa componentes de cor específicos ao renderizar e limpar a tela. Por exemplo, se '''vermelho''' estiver configurado como '''falso''', não será feita mais nenhuma mudança no componente vermelho de qualquer pixel."
                    },
                    minidescriptiont = {
                        jp = "色マスクの設定。画面への表示および消去時に特定の色の成分を有効または無効にします。",
                        pt = "Configura a máscara de cor. Ativa ou desativa componentes de cor específicos ao renderizar."
                    },
                    name = "setColorMask",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Render red component.",
                                    descriptiont = {
                                        jp = "表示を行う赤の成分。",
                                        pt = "Renderizar componente vermelho."
                                    },
                                    name = "red",
                                    type = "boolean"
                                },
                                {
                                    description = "Render green component.",
                                    descriptiont = {
                                        jp = "表示を行う緑の成分。",
                                        pt = "Renderizar componente verde."
                                    },
                                    name = "green",
                                    type = "boolean"
                                },
                                {
                                    description = "Render blue component.",
                                    descriptiont = {
                                        jp = "表示を行う青の成分。",
                                        pt = "Renderizar componente azul."
                                    },
                                    name = "blue",
                                    type = "boolean"
                                },
                                {
                                    description = "Render alpha component.",
                                    descriptiont = {
                                        jp = "表示を行う透過の成分。",
                                        pt = "Renderizar componente alfa."
                                    },
                                    name = "alpha",
                                    type = "boolean"
                                }
                            },
                            description = "Enables color masking for the specified color components.",
                            descriptiont = {
                                jp = "指定された色の成分に対して色マスクを有効にします。"
                            }
                        },
                        {
                            description = "Disables color masking.",
                            descriptiont = {
                                jp = "色マスクを無効にします。",
                                pt = "Ativa todos componentes de cor."
                            }
                        }
                    }
                },
                {
                    description = "Sets the default scaling filters used with Images, Canvases, and Fonts.\n\nThis function does not apply retroactively to loaded images.",
                    descriptiont = {
                        jp = "Image, Canvas, および Font で使用される標準の尺度変更フィルタを設定します。",
                        pt = "Configura os filtros de redimensionamento padrão usados com Imagens, Pinturas e Fontes."
                    },
                    minidescriptiont = {
                        jp = "Image, Canvas, および Font で使用される標準の尺度変更フィルタを設定します。",
                        pt = "Configura os filtros de redimensionamento padrão usados com Imagens, Pinturas e Fontes."
                    },
                    name = "setDefaultFilter",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Filter mode used when scaling the image down.",
                                    descriptiont = {
                                        jp = "画像の縮小に使うフィルタのモード。",
                                        pt = "Modo de filtragem usado ao reduzir a imagem."
                                    },
                                    name = "min",
                                    type = "FilterMode"
                                },
                                {
                                    default = "min",
                                    description = "Filter mode used when scaling the image up.",
                                    descriptiont = {
                                        jp = "画像の拡大に使うフィルタのモード。",
                                        pt = "Modo de filtragem usado ao ampliar a imagem."
                                    },
                                    name = "mag",
                                    type = "FilterMode"
                                },
                                {
                                    default = "1",
                                    description = "Maximum amount of Anisotropic Filtering used.",
                                    descriptiont = {
                                        jp = "Anisotropic (異方性) フィルタの最大使用量。",
                                        pt = "Quantidade máxima de Filtragem Anisotrópica usada."
                                    },
                                    name = "anisotropy",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                pt = "Esta função não se aplica retroativamente a imagens carregadas."
                            }
                        }
                    }
                },
                {
                    description = "Set an already-loaded Font as the current font or create and load a new one from the file and size.\n\nIt's recommended that Font objects are created with love.graphics.newFont in the loading stage and then passed to this function in the drawing stage.",
                    descriptiont = {
                        jp = "既に読み込んだ Font を現在のフォントに設定するかファイルと大きさを指定して読み込んでから新規作成します。\n\nFont オブジェクトは読み込み段階で love.graphics.newFont にて作成してから描画段階で当関数へ渡すことを推奨します。",
                        pt = "Configura como fonte atual uma Fonte já carregada ou cria e carrega uma nova a partir do arquivo e do tamanho.\n\nÉ recomendado criar objetos Fonte com love.graphics.newFont no estágio de carregamento e então passá-los a esta função no estágio de desenho.",
                        ru = "Устанавливает загруженный шрифт в качестве текущего.\n\nЭта функция не создает шрифт, а устанавливает его в качестве текущего, так что она может быть использована в love.draw()."
                    },
                    minidescriptiont = {
                        jp = "既に読み込んだフォントを現在のフォントとして設定します。",
                        pt = "Configura uma Fonte já carregada como a fonte atual.",
                        ru = "Устанавливает загруженный шрифт в качестве текущего."
                    },
                    name = "setFont",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The Font object to use.",
                                    descriptiont = {
                                        jp = "使用する Font オブジェクト。",
                                        pt = "O objeto Fonte a ser usado.",
                                        ru = "Объект шрифта, который надо использовать."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the line join style.",
                    descriptiont = {
                        jp = "線の連結方法を設定します。利用可能な連結方法は LineJoin を参照してください。",
                        pt = "Configura o estilo de junção de linha. Veja em JunçãoDeLinha as opções possíveis."
                    },
                    minidescriptiont = {
                        jp = "線の連結方法を設定します。",
                        pt = "Configura o estilo de junção de linha."
                    },
                    name = "setLineJoin",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The LineJoin to use.",
                                    descriptiont = {
                                        jp = "使用する LineJoin を指定します。",
                                        pt = "A JunçãoDeLinha a ser usada."
                                    },
                                    name = "join",
                                    type = "LineJoin"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the line style.",
                    descriptiont = {
                        de = "Bestimmt den Stil in dem Linien gezeichnet werden.",
                        jp = "線の描画方法を設定します。",
                        pt = "Configura o estilo de linha.",
                        ru = "Устанавливает стиль для линии."
                    },
                    minidescriptiont = {
                        de = "Bestimmt den Stil in dem Linien gezeichnet werden.",
                        jp = "線の描画方法を設定します。",
                        pt = "Configura o estilo de linha.",
                        ru = "Устанавливает стиль для линии."
                    },
                    name = "setLineStyle",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The LineStyle to use.",
                                    descriptiont = {
                                        de = "Der Linienstil welcher benutzt werden soll.",
                                        jp = "使用する LineStyle を指定します。線の方式には smooth および rough があります。",
                                        pt = "O EstiloDeLinha a ser usado. Estilos de linha incluem smooth (suave) e rough (grosseiro).",
                                        ru = "Стиль для линии, который нужно использовать."
                                    },
                                    name = "style",
                                    type = "LineStyle"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the line width.",
                    descriptiont = {
                        de = "Bestimmt die Breite mit der Linien gezeichnet werden sollen.",
                        jp = "線の幅を設定します。",
                        pt = "Configura a espessura da linha.",
                        ru = "Устанавливает ширину линии."
                    },
                    minidescriptiont = {
                        de = "Bestimmt die Breite mit der Linien gezeichnet werden sollen.",
                        jp = "線の幅を設定します。",
                        pt = "Configura a espessura da linha.",
                        ru = "Устанавливает ширину линии."
                    },
                    name = "setLineWidth",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The width of the line.",
                                    descriptiont = {
                                        de = "Die Breite der Linie.",
                                        jp = "線の幅。",
                                        pt = "A espessura da linha.",
                                        ru = "Ширина линии."
                                    },
                                    name = "width",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates and sets a new font.",
                    descriptiont = {
                        jp = "Font の作成と設定を行います。",
                        pt = "Cria e configura uma nova Fonte."
                    },
                    minidescriptiont = {
                        jp = "Font の作成と設定を行います。",
                        pt = "Cria e configura uma nova Fonte."
                    },
                    name = "setNewFont",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The path and name of the file with the font.",
                                    descriptiont = {
                                        jp = "フォントファイルのパスと名前。",
                                        pt = "O caminho e nome do arquivo contendo a fonte."
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    default = "12",
                                    description = "The size of the font.",
                                    descriptiont = {
                                        jp = "フォントの大きさ。",
                                        pt = "O tamanho da fonte."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new font.",
                                    descriptiont = {
                                        jp = "新規 Font オブジェクト。",
                                        pt = "A nova fonte."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A File with the font.",
                                    descriptiont = {
                                        jp = "File で指定したフォント。",
                                        pt = "Um Arquivo contendo a fonte."
                                    },
                                    name = "file",
                                    type = "File"
                                },
                                {
                                    default = "12",
                                    description = "The size of the font.",
                                    descriptiont = {
                                        jp = "フォントの大きさ。",
                                        pt = "O tamanho da fonte."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new font.",
                                    descriptiont = {
                                        jp = "新規 Font オブジェクト。",
                                        pt = "A nova fonte."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A Data with the font.",
                                    descriptiont = {
                                        jp = "Data で指定したフォント。",
                                        pt = "Um Dado contendo a fonte."
                                    },
                                    name = "data",
                                    type = "Data"
                                },
                                {
                                    default = "12",
                                    description = "The size of the font.",
                                    descriptiont = {
                                        jp = "フォントの大きさ。",
                                        pt = "O tamanho da fonte."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new font.",
                                    descriptiont = {
                                        jp = "新規 Font オブジェクト。",
                                        pt = "A nova fonte."
                                    },
                                    name = "font",
                                    type = "Font"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets or resets a Shader as the current pixel effect or vertex shaders. All drawing operations until the next love.graphics.setShader will be drawn using the Shader object specified.\n\nDisables the shaders when called without arguments.",
                    descriptiont = {
                        jp = "現在のピクセルエフェクトまたは頂点シェーダーへ Shader を設定するか初期状態に戻します。全ての描画操作は次の ''love.graphics.setShader'' が呼ばれるまで指定された Shader オブジェクトを使用して描画されます。",
                        pt = "Configura ou desconfigura um Shader como o efeito de pixel ou shader de vértice atual. Todas operações de desenho até o próximo ''love.graphics.setShader'' serão desenhadas usando o objeto Shader especificado."
                    },
                    minidescriptiont = {
                        jp = "シェーダーを通ることで描画操作の経路を決定します。",
                        pt = "Passa operações de desenho por um shader."
                    },
                    name = "setShader",
                    variants = {
                        {
                            descriptiont = {
                                pt = "Desativa shaders, permitindo operações de desenho sem filtro.\n\n== Exemplos ==\n\n=== Desenhar um retângulo usado um shader de efeito de pixel ===\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n efeito = love.graphics.newShader \n\n extern number time;\n\n vec4 effect(vec4 color, Image texture, vec2 texture_coords, vec2 pixel_coords)\n\n {\n\n return vec4((1.0+sin(time))/2.0, abs(cos(time)), abs(sin(time)), 1.0);\n\n }\n\n \n\nend\n\nfunction love.draw()\n\n -- branco chato\n\n love.graphics.setShader()\n\n love.graphics.rectangle('fill', 10,10,780,285)\n\n -- OLHA QUE CORES BONITAS!\n\n love.graphics.setShader(efeito)\n\n love.graphics.rectangle('fill', 10,305,780,285)\n\nend\n\nlocal t = 0\n\nfunction love.update(dt)\n\n t = t + dt\n\n efeito:send(\"time\", t)\n\nend\n\n&lt;/source&gt;"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The new shader.",
                                    descriptiont = {
                                        jp = "新規シェーダー。",
                                        pt = "O novo shader."
                                    },
                                    name = "shader",
                                    type = "Shader"
                                }
                            },
                            descriptiont = {
                                pt = "Configura o Shader especificado como o shader atual. Todas operações de desenho até o próximo ''love.graphics.setShader'' serão desenhadas usando o objeto Shader especificado."
                            }
                        }
                    }
                },
                {
                    description = "Sets the point size.",
                    descriptiont = {
                        de = "Bestimmt die Größe mit welcher Punkte gezeichnet werden.\n\n&lt;source lang=\"lua\"&gt;\n\nlove.graphics.setPointSize( size )\n\n&lt;/source&gt;",
                        jp = "点の大きさを設定します。",
                        pt = "Configura o tamanho de ponto.",
                        ru = "Устанавливает размер точки."
                    },
                    minidescriptiont = {
                        de = "Bestimmt die Größe mit welcher Punkte gezeichnet werden.",
                        jp = "点の大きさを設定します。",
                        pt = "Configura o tamanho de ponto.",
                        ru = "Устанавливает размер точки."
                    },
                    name = "setPointSize",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new point size.",
                                    descriptiont = {
                                        de = "Die neue Größe.",
                                        jp = "新しい点の大きさ。",
                                        pt = "O novo tamanho de ponto.",
                                        ru = "Новый размер точки."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets or disables scissor.\n\nThe scissor limits the drawing area to a specified rectangle. This affects all graphics calls, including love.graphics.clear.",
                    descriptiont = {
                        jp = "切り抜きの設定または解除。\n\n切り抜きは指定した長方形の範囲で描画領域を制限します。これは love.graphics.clear を含む、全てのグラフィック関連の呼び出しに影響を及ぼします。\n\n切り抜きの範囲はグラフィックの変換には影響を及ぼしません (translate, scale, ...)。",
                        pt = "Configura ou desativa o recorte.\n\nO recorte limita a área de desenho a um retângulo especificado. Isso afeta todas as chamadas gráficas, incluindo love.graphics.clear. \n\nAs dimensões do recorte não são afetadas por transformações gráficas (translação, redimensionamento, ...).",
                        ru = "Устанавливает или сбрасывает зону отсечения.\n\nЗона отсечения ограничивает область рисования в определенном прямоугольнике. Это влияет на все графические функции, включая love.graphics.clear."
                    },
                    minidescriptiont = {
                        jp = "切り抜きの設定または解除。",
                        pt = "Configura ou desativa o recorte.",
                        ru = "Устанавливает или сбрасывает зону отсечения."
                    },
                    name = "setScissor",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The X coordinate of upper left corner.",
                                    descriptiont = {
                                        jp = "左上端の x 座標。",
                                        pt = "A coordenada x do canto superior esquerdo.",
                                        ru = "x координата левого верхнего угла."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The Y coordinate of upper left corner.",
                                    descriptiont = {
                                        jp = "左上端の y 座標。",
                                        pt = "A coordenada y do canto superior esquerdo.",
                                        ru = "y координата левого верхнего угла."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The width of clipping rectangle.",
                                    descriptiont = {
                                        jp = "長方形として切り抜く幅。",
                                        pt = "A largura do retângulo.",
                                        ru = "Ширина зоны отсечения."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of clipping rectangle.",
                                    descriptiont = {
                                        jp = "長方形として切り抜く高さ。",
                                        pt = "A altura do retângulo.",
                                        ru = "Высота зоны отсечения."
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            },
                            description = "Limits the drawing area to a specified rectangle.",
                            descriptiont = {
                                jp = "指定された長方形にて描画領域を制限します。"
                            }
                        },
                        {
                            description = "Disables scissor.",
                            descriptiont = {
                                jp = "切り抜きの解除。",
                                pt = "Desativa recorte."
                            }
                        }
                    }
                },
                {
                    description = "Configures or disables stencil testing.\n\nWhen stencil testing is enabled, the geometry of everything that is drawn afterward will be clipped / stencilled out based on a comparison between the arguments of this function and the stencil value of each pixel that the geometry touches. The stencil values of pixels are affected via love.graphics.stencil.\n\nEach Canvas has its own per-pixel stencil values.",
                    descriptiont = {
                        jp = "ステンシルにおけるテストを構成または無効にします。\n\nステンシルテストが有効な時、全ての形状は本関数の引数および形状に接触している各ピクセルのステンシル値との間による比較に基づきクリップ / ステンシル処理されてから描画されます。ピクセルのステンシル値は love.graphics.stencil による影響を受けます。\n\n各々の Canvas はピクセルごとにステンシル値を独自に有しています。"
                    },
                    minidescriptiont = {
                        jp = "ステンシルにおけるテストを構成または無効にします。"
                    },
                    name = "setStencilTest",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The type of comparison to make for each pixel.",
                                    descriptiont = {
                                        jp = "各ピクセルの比較方法。"
                                    },
                                    name = "comparemode",
                                    type = "CompareMode"
                                },
                                {
                                    description = "The value to use when comparing with the stencil value of each pixel. Must be between 0 and 255.",
                                    descriptiont = {
                                        jp = "各ピクセルのステンシル値を比較する時に使用される値。範囲は 0 から 255 までの間にする必要があります。"
                                    },
                                    name = "comparevalue",
                                    type = "number"
                                }
                            }
                        },
                        {
                            description = "Disables stencil testing.",
                            descriptiont = {
                                jp = "ステンシルのテストを無効にします。"
                            }
                        }
                    }
                },
                {
                    description = "Sets whether wireframe lines will be used when drawing.\n\nWireframe mode should only be used for debugging. The lines drawn with it enabled do not behave like regular love.graphics lines: their widths don't scale with the coordinate transformations or with love.graphics.setLineWidth, and they don't use the smooth LineStyle.",
                    descriptiont = {
                        jp = "描画時にワイヤーフレーム・モードを使用するために設定します。",
                        pt = "Configura se o modo de estrutura de arame será usado ou não ao desenhar."
                    },
                    minidescriptiont = {
                        jp = "描画時にワイヤーフレーム・モードを使用するために設定します。",
                        pt = "Configura se o modo de estrutura de arame será usado ou não ao desenhar."
                    },
                    name = "setWireframe",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "True to enable wireframe mode when drawing, false to disable it.",
                                    descriptiont = {
                                        jp = "True ならば描画時にワイヤーフレーム・モードを有効にしますが、 false ならば無効にします。",
                                        pt = "Verdadeiro para ativar o modo de estrutura de arame ao desenhar, falso para desativá-lo."
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Shears the coordinate system.",
                    descriptiont = {
                        jp = "座標系の剪断(せんだん)。",
                        pt = "Inclina o sistema de coordenadas."
                    },
                    minidescriptiont = {
                        jp = "座標系の剪断(せんだん)。",
                        pt = "Inclina o sistema de coordenadas."
                    },
                    name = "shear",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The shear factor on the x-axis.",
                                    descriptiont = {
                                        jp = "x-軸の剪断係数。",
                                        pt = "O fator de inclinação do eixo x."
                                    },
                                    name = "kx",
                                    type = "number"
                                },
                                {
                                    description = "The shear factor on the y-axis.",
                                    descriptiont = {
                                        jp = "y-軸の剪断係数。",
                                        pt = "O fator de inclinação do eixo y."
                                    },
                                    name = "ky",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Draws geometry as a stencil.\n\nThe geometry drawn by the supplied function sets invisible stencil values of pixels, instead of setting pixel colors. The stencil values of pixels can act like a mask / stencil - love.graphics.setStencilTest can be used afterward to determine how further rendering is affected by the stencil values in each pixel.\n\nEach Canvas has its own per-pixel stencil values. Stencil values are within the range of [0, 255].",
                    descriptiont = {
                        jp = "ステンシルとして幾何学的形状を描きます。\n\n幾何学的形状はピクセルの色を設定する代わりに、与えられた関数へ不可視のピクセル値を設定することにより描画されます。ピクセルのステンシル値は、マスク / ステンシルのように機能させることができます。 ― love.graphics.setStencilTest は、以降の描画で各ピクセルにおいてステンシル値により、どのような影響を受けるのを決定するために使用することができます。\n\n各 Canvas は個別にピクセルごとのステンシル値を有しています。ステンシル値は 255 の範囲内です。"
                    },
                    minidescriptiont = {
                        jp = "ステンシルとして幾何学的形状を描きます。"
                    },
                    name = "stencil",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Function which draws geometry. The stencil values of pixels, rather than the color of each pixel, will be affected by the geometry.",
                                    descriptiont = {
                                        jp = "幾何学的形状を描画するための関数。ピクセルのステンシル値は、各ピクセルの色よりも幾何学的形状の影響を受けます。"
                                    },
                                    name = "stencilfunction",
                                    type = "function"
                                },
                                {
                                    default = "\"replace\"",
                                    description = "How to modify any stencil values of pixels that are touched by what's drawn in the stencil function.",
                                    descriptiont = {
                                        jp = "ステンシル関数で描画されたものに接触しているピクセルに対して任意のステンシル値で変更する方法。"
                                    },
                                    name = "action",
                                    type = "StencilAction"
                                },
                                {
                                    default = "1",
                                    description = "The new stencil value to use for pixels if the \"replace\" stencil action is used. Has no effect with other stencil actions. Must be between 0 and 255.",
                                    descriptiont = {
                                        jp = " \"replace\" によるステンシルの動作で使用される場合にピクセルに対して使用される新規ステンシル値。その他のステンシルに対する動作には影響はありません。値の範囲は 0 から 255 までにする必要があります。"
                                    },
                                    name = "value",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "True to preserve old stencil values of pixels, false to re-set every pixel's stencil value to 0 before executing the stencil function. love.graphics.clear will also re-set all stencil values.",
                                    descriptiont = {
                                        jp = "true ならばピクセルの古いステンシル値を保存しますが、 false ならばステンシル値の実行前に、全てのピクセルにステンシル値を 0 にして初期状態へ戻します。同様に love.graphics.clear (日本語) は全てのステンシル値に対して初期状態へ戻します。"
                                    },
                                    name = "keepvalues",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Translates the coordinate system in two dimensions.\n\nWhen this function is called with two numbers, dx, and dy, all the following drawing operations take effect as if their x and y coordinates were x+dx and y+dy.\n\nScale and translate are not commutative operations, therefore, calling them in different orders will change the outcome.\n\nThis change lasts until love.graphics.clear is called (which is called automatically before love.draw in the default love.run function), or a love.graphics.pop reverts to a previous coordinate system state.\n\nTranslating using whole numbers will prevent tearing/blurring of images and fonts draw after translating.",
                    descriptiont = {
                        jp = "二次元座標系を平行移動します。\n\nこの関数が dx と dy の二つの数値を付けて呼ばれたとき、 x と y の座標に対して x+dx と y+dy が実行されるため以降の全描画操作に対して効果が適用されます。\n\n尺度変更および平行移動は交換可能な操作ではないため、それ故に、様々な順序で呼び出すと結果が変更されます。\n\nこの変更は love.draw() の終端まで継続あるいは以前の love.graphics.push に対する love.graphics.pop により復帰します。\n\n平行移動を全体の数値に使用することで画像の破断・ブレを防止でき、平行移動後にフォントの描画が行なわれます。",
                        pt = "Translada o sistema de coordenadas em duas dimensões.\n\nQuando esta função é chamada com dois números, dx e dy, todas as operações de desenho seguintes funcionam como se suas coordenadas x e y fossem x+dx e y+dy. \n\nRedimensionamento e translação não são operações comutativas, portanto chamá-las em ordens diferentes afetará o resultado.\n\nEssa mudança dura até a saída de love.draw ou então até que um love.graphics.pop restabeleça um love.graphics.push anterior.\n\nTransladar usando números inteiros evitará a distorção de imagens e fontes desenhadas depois da translação.",
                        ru = "Перемещает координатную систему в двух измерениях.\n\nКогда эта функция вызывается с двумя параметрами dx и dy, все следующие операции рисования будут происходить со смещением их x и y координат на dx и dy. Это отменяется по завершению работы функции love.draw()."
                    },
                    minidescriptiont = {
                        jp = "二次元座標系を平行移動します。",
                        pt = "Translada o sistema de coordenadas em duas dimensões.",
                        ru = "Перемещает координатную систему в двух измерениях."
                    },
                    name = "translate",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The translation relative to the x-axis.",
                                    descriptiont = {
                                        jp = "X 軸と関連する平行移動。",
                                        pt = "A translação em relação ao eixo x.",
                                        ru = "Перемещение по x оси."
                                    },
                                    name = "dx",
                                    type = "number"
                                },
                                {
                                    description = "The translation relative to the y-axis.",
                                    descriptiont = {
                                        jp = "Y 軸と関連する平行移動。",
                                        pt = "A translação em relação ao eixo y.",
                                        ru = "Перемещение по y оси."
                                    },
                                    name = "dy",
                                    type = "number"
                                }
                            }
                        }
                    }
                }
            },
            name = "graphics",
            types = {
                {
                    constructors = {
                        "newCanvas"
                    },
                    description = "A Canvas is used for off-screen rendering. Think of it as an invisible screen that you can draw to, but that will not be visible until you draw it to the actual visible screen. It is also known as \"render to texture\".\n\nBy drawing things that do not change position often (such as background items) to the Canvas, and then drawing the entire Canvas instead of each item, you can reduce the number of draw operations performed each frame.\n\nIn versions prior to 0.10.0, not all graphics cards that LÖVE supported could use Canvases. love.graphics.isSupported(\"canvas\") could be used to check for support at runtime.",
                    descriptiont = {
                        de = "Ein Offscreen-Buffer welcher für das sogenannte \"Off-screen Rendering\" verwendet wird.\n\nEin Offscreen-Buffer ist ein Speicher, in dem Bildschirminhalt aufgebaut werden kann ohne diesen sofort dem Nutzer zu zeigen. Der gleichbedeutende Begriff \"Canvas\" (dt.: Leinwand) ist treffend gewählt. Vorstellen kann man sich das Ganze als Arbeitsfläche auf der man abseits des eigentlichen Bildschirminhalts den nächsten Inhalt vorbereiten kann. Ist diese Leinwand schließlich fertig bemalt, schickt man sie komplett an den Bildschirm.\n\nDer Vorteil ist, dass man komplexe statische Szenen wie zum Beispiel Hintergründe, welche sich aus vielen einzelnen Bildern zusammensetzen zunächst in den Offscreen-Buffer schreiben und diesen dann schließlich komplett als eigene Einheit zeichnen kann. Das bedeutet, dass man anstatt vieler kleiner Zeichenoperationen nur noch eine einzige durchführen muss, was insbesondere die Performance deutlich positiv beeinflusst. \n\nEin Nachteil von Canvases ist, dass sie anfällig für das sogenannte  power of 2 syndrome sind. Dies betrifft jedoch vor allem ältere Grafikkarten. Die meisten moderneren Grafikkarten, welche Offscreen-Buffer unterstützen, sollten auch non-PO2 Texturen unterstützen. Um sicher zu gehen, kann man dies aber auch mit love.graphics.isSupported(\"npot\") überprüfen und den Nutzer gegebenenfalls mit einer Fehlermeldung informieren.",
                        jp = "Canvas (キャンバス、画布) は画面外表示で使用されます。つまり描画はできるが可視の実画面に描画されるまでは表示されない不可視の画面と考えることができます。さらに \"テクスチャの表示\" としても知られています。\n\nCanvas へ座標を変更せず頻繁に描画を行うとき(例えば背景にあるアイテム)、各アイテムごとではなく Canvas へ全て描画することにより、各フレームの描画操作の実行回数を削減できます。\n\nVersion 0.10.0 以前は、 LÖVE により対応している全てのグラフィックスカードで Canvas を使用できるとは限りません。\n\nlove.graphics.isSupported(\"canvas\") は実行時に対応状況を調べるために使用できます。"
                    },
                    functions = {
                        {
                            description = "Gets the width and height of the Canvas.",
                            descriptiont = {
                                de = "Gibt die Breite und Höhe des Canvas zurück.",
                                jp = "Canvas の幅と高さを取得します。"
                            },
                            minidescriptiont = {
                                de = "Gibt die Breite und Höhe des Canvas zurück.",
                                jp = "Canvas の幅と高さを取得します。"
                            },
                            name = "getDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the Canvas, in pixels.",
                                            descriptiont = {
                                                de = "Die Breite des Canvas in Pixeln.",
                                                jp = "ピクセル単位での Canvas の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the Canvas, in pixels.",
                                            descriptiont = {
                                                de = "Die Höhe des Canvas in Pixeln.",
                                                jp = "ピクセル単位での Canvas の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the filter mode of the Canvas.",
                            descriptiont = {
                                de = "Gibt den Filtermodus des Canvas zurück.",
                                jp = "Canvas のフィルタ方式を取得します。"
                            },
                            minidescriptiont = {
                                de = "Gibt den Filtermodus des Canvas zurück.",
                                jp = "Canvas のフィルタ方式を取得します。"
                            },
                            name = "getFilter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Filter mode used when minifying the canvas.",
                                            descriptiont = {
                                                de = "Der Filter welcher beim Verkleinern des Canvas benutzt wird.",
                                                jp = "キャンバスの縮小に使うフィルタのモード。"
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "Filter mode used when magnifying the canvas.",
                                            descriptiont = {
                                                de = "Der Filter welcher beim Vergrößern des Canvas benutzt wird.",
                                                jp = "キャンバスの拡大に使うフィルタのモード。"
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "Maximum amount of anisotropic filtering used.",
                                            descriptiont = {
                                                de = "Der Maximalwert welcher zum anisotropen Filtern benutzt wird.",
                                                jp = "Anisotropic(異方性)フィルタの最大使用量。"
                                            },
                                            name = "anisotropy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the texture format of the Canvas.",
                            descriptiont = {
                                jp = "Canvas のテクスチャ形式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Canvas のテクスチャ形式を取得します。"
                            },
                            name = "getFormat",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The format of the Canvas.",
                                            descriptiont = {
                                                jp = "Canvas の形式。"
                                            },
                                            name = "format",
                                            type = "CanvasFormat"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the Canvas.",
                            descriptiont = {
                                de = "Gibt die Höhe des Canvas zurück.",
                                jp = "Canvas の高さを取得します。"
                            },
                            minidescriptiont = {
                                de = "Gibt die Höhe des Canvas zurück.",
                                jp = "Canvas の高さを取得します。"
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the Canvas, in pixels.",
                                            descriptiont = {
                                                de = "Die Höhe des Canvas in Pixeln.",
                                                jp = "ピクセル単位での Canvas の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the number of multisample antialiasing (MSAA) samples used when drawing to the Canvas.\n\nThis may be different than the number used as an argument to love.graphics.newCanvas if the system running LÖVE doesn't support that number.",
                            descriptiont = {
                                jp = "Canvas の描画時に使用するマルチサンプル・アンチエイリアシング (Multi Sample Anti-Alias : MSAA) のサンプル数を取得します。\n\nこれは LÖVE を実行するシステムが当数値に非対応であるならば love.graphics.newCanvas の引数に使用される数値と異なる場合があります。"
                            },
                            minidescriptiont = {
                                jp = "Canvas の描画時に使用するマルチサンプル・アンチエイリアシング (Multi Sample Anti-Alias : MSAA) のサンプル数を取得します。"
                            },
                            name = "getMSAA",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of multisample antialiasing samples used by the canvas when drawing to it.",
                                            descriptiont = {
                                                jp = "Canvas の描画時に使用するマルチサンプル・アンチエイリアシングのサンプル数。"
                                            },
                                            name = "samples",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width of the Canvas.",
                            descriptiont = {
                                de = "Gibt die Breite des Canvas (Deutsch) zurück.",
                                jp = "Canvas の幅を取得します。"
                            },
                            minidescriptiont = {
                                de = "Gibt die Breite des Canvas zurück.",
                                jp = "Canvas の幅を取得します。"
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the Canvas, in pixels.",
                                            descriptiont = {
                                                de = "Die Breite des Canvas in Pixeln.",
                                                jp = "ピクセル単位での Canvas の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the wrapping properties of a Canvas.\n\nThis function returns the currently set horizontal and vertical wrapping modes for the Canvas.",
                            descriptiont = {
                                de = "Gibt die Zeilenumbrucheigenschaften eines Canvas zurück.\n\nDiese Funktion gibt die aktuellen horizontalen und vertikalen Zeilenumbruch-Modi für ein Canvas zurück.",
                                jp = "Canvas の加工特性を取得します。\n\nこの関数は Canvas に現在設定されている水平および垂直方向の加工方式を返します。"
                            },
                            minidescriptiont = {
                                de = "Gibt die Zeilenumbrucheigenschaften eines Canvas zurück.",
                                jp = "Canvas の加工特性を取得します。"
                            },
                            name = "getWrap",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Horizontal wrapping mode of the Canvas.",
                                            descriptiont = {
                                                de = "Der horizontale Zeilenumbruchmodus des Canvas.",
                                                jp = "Canvas の水平方向の加工方式。"
                                            },
                                            name = "horizontal",
                                            type = "WrapMode"
                                        },
                                        {
                                            description = "Vertical wrapping mode of the Canvas.",
                                            descriptiont = {
                                                de = "Der vertikale Zeilenumbruchmodus des Canvas.",
                                                jp = "Canvas の垂直方向の加工方式。"
                                            },
                                            name = "vertical",
                                            type = "WrapMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Generates ImageData from the contents of the Canvas.",
                            descriptiont = {
                                jp = "Canvas の内容から ImageData を生成します。"
                            },
                            minidescriptiont = {
                                jp = "Canvas の内容から ImageData を生成します。"
                            },
                            name = "newImageData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The image data stored in the Canvas.",
                                            descriptiont = {
                                                jp = "Canvas の内容から作成した新規 ImageData です。"
                                            },
                                            name = "data",
                                            type = "ImageData"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The x-axis of the top-left corner of the area within the Canvas to capture.",
                                            descriptiont = {
                                                jp = "取り込み対象の Canvas 内にある領域の左上角を始点とした x 軸です。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-axis of the top-left corner of the area within the Canvas to capture.",
                                            descriptiont = {
                                                jp = "取り込み対象の Canvas 内にある領域の左上角を始点とした y 軸です。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The width of the area within the Canvas to capture.",
                                            descriptiont = {
                                                jp = "取り込み対象の Canvas 内に対する領域の幅"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the area within the Canvas to capture.",
                                            descriptiont = {
                                                jp = "取り込み対象の Canvas 内に対する領域の高さ"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The new ImageData made from the Canvas' contents.",
                                            descriptiont = {
                                                jp = "Canvas の内容から作成した新規 ImageData です。"
                                            },
                                            name = "data",
                                            type = "ImageData"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Render to the Canvas using a function.",
                            descriptiont = {
                                de = "Zeichnet mit Hilfe einer Funktion in einen Offscreen-Buffer.",
                                jp = "Canvas へ表示するために関数を使用します。\n\nこれは love.graphics.setCanvas への略記法であり、\n\n&lt;source lang=\"lua\"&gt;\n\ncanvas:renderTo( func )\n\n&lt;/source&gt;\n\nは下記と同じです。\n\n&lt;source lang=\"lua\"&gt;\n\nlove.graphics.setCanvas( canvas )\n\nfunc()\n\nlove.graphics.setCanvas()\n\n&lt;/source&gt;"
                            },
                            minidescriptiont = {
                                de = "Zeichnet mit Hilfe einer Funktion in einen Offscreen-Buffer.",
                                jp = "Canvas へ表示するために関数を使用します。"
                            },
                            name = "renderTo",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "A function performing drawing operations.",
                                            descriptiont = {
                                                de = "Eine Funktion welche die erforderlichen Zeichenoperationen übernimmt.",
                                                jp = "描画操作を行う関数。"
                                            },
                                            name = "func",
                                            type = "function"
                                        }
                                    },
                                    descriptiont = {
                                        de = "Faktisch besteht kein Unterschied zwischen Canvas:renderTo und love.graphics.setCanvas. Beide führen zum selben Ergebnis.\n\n== Beispiele ==\n\n=== Verwendung einer anonymen Funktion ===\n\nIn diesem Beispiel nutzen wir eine anonyme Funktion und Canvas:renderTo um direkt auf ein Canvas zu zeichnen.\n\n&lt;source lang=\"lua\"&gt;\n\nlocal canvas;\n\nfunction love.load()\n\n   -- Wir erstellen eine neue Leinwand.\n\n    canvas = love.graphics.newCanvas(800, 600);\n\n    local logo = love.graphics.newImage('logo.png');\n\n    -- Wir füllen die Leinwand mit LÖVE logos mit Hilfe einer anonymen Funktion.\n\n    canvas:renderTo(function()\n\n        for _ = 1, 10000 do\n\n            love.graphics.draw(logo, love.math.random(0, 800), love.math.random(0, 600), math.rad(love.math.random(0, 360)));\n\n        end\n\n    end)\n\nend\n\nfunction love.draw()\n\n    love.graphics.draw(canvas);\n\nend\n\n&lt;/source&gt;"
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the filter of the Canvas.",
                            descriptiont = {
                                de = "Bestimmt den Filtermodus für ein Canvas.",
                                jp = "Canvas の フィルタ方式 を設定します。"
                            },
                            minidescriptiont = {
                                de = "Bestimmt den Filtermodus für ein Canvas.",
                                jp = "Canvas の フィルタ方式 を設定します。"
                            },
                            name = "setFilter",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "How to scale a canvas down.",
                                            descriptiont = {
                                                de = "Der Filter welcher beim Verkleinern des Canvas benutzt werden soll.",
                                                jp = "Canvas の縮小に使うフィルタの方式。"
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "min",
                                            description = "How to scale a canvas up.",
                                            descriptiont = {
                                                de = "Der Filter welcher beim Vergrößern des Canvas benutzt werden soll.",
                                                jp = "Canvas の拡大に使うフィルタの方式。"
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "1",
                                            description = "Maximum amount of anisotropic filtering used.",
                                            descriptiont = {
                                                de = "Der Maximalwert welcher zum anisotropen Filtern benutzt werden soll.",
                                                jp = "Anisotropic (異方性)フィルタの最大使用量。"
                                            },
                                            name = "anisotropy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the wrapping properties of a Canvas.\n\nThis function sets the way the edges of a Canvas are treated if it is scaled or rotated. If the WrapMode is set to \"clamp\", the edge will not be interpolated. If set to \"repeat\", the edge will be interpolated with the pixels on the opposing side of the framebuffer.",
                            descriptiont = {
                                jp = "Canvas の加工特性を設定します。\n\nこの関数は回転または尺度変更時における Canvas の角の取り扱い方を設定します。 WrapMode に 'clamp' が設定されたときは、角の補間を行いません。 'repeat' が設定されたときはキャンバスの反対側にあるピクセルにより角を補完します。"
                            },
                            minidescriptiont = {
                                jp = "Canvas の加工特性を設定します。"
                            },
                            name = "setWrap",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Horizontal wrapping mode of the Canvas.",
                                            descriptiont = {
                                                jp = "Canvas の水平方向の加工方式。"
                                            },
                                            name = "horizontal",
                                            type = "WrapMode"
                                        },
                                        {
                                            default = "horizontal",
                                            description = "Vertical wrapping mode of the Canvas.",
                                            descriptiont = {
                                                jp = "Canvas の垂直方向の加工方式。"
                                            },
                                            name = "vertical",
                                            type = "WrapMode"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Canvas",
                    parenttype = "Texture",
                    supertypes = {
                        "Object",
                        "Drawable",
                        "Texture"
                    }
                },
                {
                    constructors = {
                        "newFont",
                        "newImageFont",
                        "setNewFont"
                    },
                    description = "Defines the shape of characters than can be drawn onto the screen.",
                    descriptiont = {
                        de = "Definiert das Aussehen von Charakteren welche auf den Bildschirm gezeichnet werden.",
                        jp = "画面に描写できる文字の字形を定義します。",
                        pt = "Pode ser usado para desenhar texto na tela.",
                        ru = "Может быть использован для рисования текста на экране."
                    },
                    functions = {
                        {
                            description = "Gets the ascent of the Font. The ascent spans the distance between the baseline and the top of the glyph that reaches farthest from the baseline.",
                            descriptiont = {
                                jp = "フォントの勾配を取得します。\n\n基線および基線から最も遠い範囲のグリフの上部との間の距離を勾配として計ります。"
                            },
                            minidescriptiont = {
                                jp = "フォントの勾配を取得します。"
                            },
                            name = "getAscent",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The ascent of the Font in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位でのフォントの勾配。"
                                            },
                                            name = "ascent",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the baseline of the Font. Most scripts share the notion of a baseline: an imaginary horizontal line on which characters rest. In some scripts, parts of glyphs lie below the baseline.",
                            descriptiont = {
                                jp = "フォントの基線を取得します。\n\nほとんどのスクリプトにおいて基線の概念を共有します: 文字に基づく仮想水平行です。一部のスクリプトにおいて、グリフの部分は、基線より下に位置します。"
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位でのフォントの基線を取得します。"
                            },
                            name = "getBaseline",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The baseline of the Font in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位でのフォントの基線。"
                                            },
                                            name = "baseline",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the descent of the Font. The descent spans the distance between the baseline and the lowest descending glyph in a typeface.",
                            descriptiont = {
                                jp = "フォントの傾斜を取得します。\n\n基線および書体にあるグリフの最も低い傾斜との間の距離を傾斜として計ります。"
                            },
                            minidescriptiont = {
                                jp = "フォントの傾斜を取得します。"
                            },
                            name = "getDescent",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The descent of the Font in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位でのフォントの傾斜。"
                                            },
                                            name = "descent",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the filter mode for a font.",
                            descriptiont = {
                                jp = "フォントのフィルタ方式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "フォントのフィルタ方式を取得します。"
                            },
                            name = "getFilter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Filter mode used when minifying the font.",
                                            descriptiont = {
                                                jp = "フォントの縮小に使うフィルタのモード。"
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "Filter mode used when magnifying the font.",
                                            descriptiont = {
                                                jp = "フォントの拡大に使うフィルタのモード。"
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "Maximum amount of anisotropic filtering used.",
                                            descriptiont = {
                                                jp = "Anisotropic(異方性)フィルタの最大使用量。"
                                            },
                                            name = "anisotropy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the Font. The height of the font is the size including any spacing; the height which it will need.",
                            descriptiont = {
                                jp = "フォントの高さを取得します。\n\n全ての空白を含んだ大きさがフォントの高さになります。つまり必要な高さです。",
                                pt = "Obtém a altura da Fonte.\n\nA altura da fonte é o tamanho incluindo qualquer espaço; a altura que ela irá precisar."
                            },
                            minidescriptiont = {
                                jp = "フォントの高さを取得します。",
                                pt = "Obtém a altura da Fonte em pixels."
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the Font in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位でのフォントの高さ。",
                                                pt = "A altura da Fonte em pixels."
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the line height. This will be the value previously set by Font:setLineHeight, or 1.0 by default.",
                            descriptiont = {
                                de = "Gibt die Zeilenhöhe zurück. \n\nDies wird der Wert sein, welcher vorher mit Font:setLineHeight gesetzt wurde, ansonsten 1.0.",
                                jp = "行の高さを取得します。\n\nこの値は以前に Font:setLineHeight により設定されたもの、または標準値の  1.0 です。",
                                pt = "Obtém a altura da linha.\n\nSerá o valor previamente configurado por Font:setLineHeight (Português), ou 1.0 por padrão."
                            },
                            minidescriptiont = {
                                de = "Gibt die Zeilenhöhe zurück.",
                                jp = "行の高さを取得します。",
                                pt = "Obtém a altura da linha."
                            },
                            name = "getLineHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The current line height.",
                                            descriptiont = {
                                                de = "Die aktuelle Zeilenhöhe.",
                                                jp = "行の現在の高さ。",
                                                pt = "A altura atual da linha."
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Determines the horizontal size a line of text needs. Does not support line-breaks.",
                            descriptiont = {
                                jp = "テキストの行で求められる水平方向の大きさを判定します。\n\n改行には対応していません。",
                                pt = "Obtém o tamanho horizontal que uma linha de texto precisa.\n\nNão suporta quebra de linha."
                            },
                            minidescriptiont = {
                                jp = "テキストの行で求められる水平方向の大きさを判定します。",
                                pt = "Obtém o tamanho horizontal que uma linha de texto precisa."
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "A line of text.",
                                            descriptiont = {
                                                jp = "文字列。"
                                            },
                                            name = "line",
                                            type = "string"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The width of the line.",
                                            descriptiont = {
                                                jp = "行の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets formatting information for text, given a wrap limit.\n\nThis function accounts for newlines correctly (i.e. '\\n').",
                            descriptiont = {
                                jp = "折り返し制限の設定情報、テキストに対する書式情報を取得します。\n\nこの関数は改行を正確に計算します(つまり '\\n')。"
                            },
                            minidescriptiont = {
                                jp = "折り返し制限の設定情報、テキストに対する書式情報を取得します。"
                            },
                            name = "getWrap",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The text that will be wrapped.",
                                            descriptiont = {
                                                jp = "折り返すテキスト。"
                                            },
                                            name = "text",
                                            type = "string"
                                        },
                                        {
                                            description = "The maximum width in pixels of each line that text is allowed before wrapping.",
                                            descriptiont = {
                                                jp = "折り返す前にテキストで許容される各行のピクセル単位による''テキスト''最大幅。"
                                            },
                                            name = "wraplimit",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The maximum width of the wrapped text.",
                                            descriptiont = {
                                                jp = "折り返されたテキストの最大幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "A sequence containing each line of text that was wrapped.",
                                            descriptiont = {
                                                jp = "折り返されたテキストの各行を有するシーケンス。"
                                            },
                                            name = "wrappedtext",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the font can render a particular character.",
                            descriptiont = {
                                jp = "フォントが文字または文字列として表示できるか取得します。"
                            },
                            minidescriptiont = {
                                jp = "フォントが文字または文字列として表示できるか取得します。"
                            },
                            name = "hasGlyphs",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "A unicode character.",
                                            descriptiont = {
                                                jp = "UTF-8 で符号化された Unicode 文字列。"
                                            },
                                            name = "character",
                                            type = "string"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Whether the font can render the glyph represented by the character.",
                                            descriptiont = {
                                                jp = "フォントが文字列内にある全ての UTF-8 文字を表示できるかどうか。"
                                            },
                                            name = "hasglyph",
                                            type = "boolean"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A unicode codepoint number.",
                                            name = "codepoint",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Whether the font can render the glyph represented by the codepoint number.",
                                            name = "hasglyph",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the fallback fonts. When the Font doesn't contain a glyph, it will substitute the glyph from the next subsequent fallback Fonts. This is akin to setting a \"font stack\" in Cascading Style Sheets (CSS).",
                            descriptiont = {
                                jp = "代替フォントを設定します。フォントがグリフを有していない場合は、次に存在する別の代替フォントからグリフを代用します。 これは Cascading Style Sheets (CSS) で \"フォントスタック\" を設定するのと類似しています。"
                            },
                            minidescriptiont = {
                                jp = "フォントが特定の文字を有していない場合に使用する他のフォントを設定します。"
                            },
                            name = "setFallbacks",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The first fallback Font to use.",
                                            descriptiont = {
                                                jp = "使用する最初の代替フォント"
                                            },
                                            name = "fallbackfont1",
                                            type = "Font"
                                        },
                                        {
                                            description = "Additional fallback Fonts.",
                                            descriptiont = {
                                                jp = "追加の代替フォント"
                                            },
                                            name = "...",
                                            type = "Font"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the filter mode for a font.",
                            descriptiont = {
                                jp = "フォントのフィルタ方式を設定します。"
                            },
                            minidescriptiont = {
                                jp = "フォントのフィルタ方式を設定します。"
                            },
                            name = "setFilter",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "How to scale a font down.",
                                            descriptiont = {
                                                jp = "フォントの縮小に使うフィルタのモード。"
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "min",
                                            description = "How to scale a font up.",
                                            descriptiont = {
                                                jp = "フォントの拡大に使うフィルタのモード。"
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "1",
                                            description = "Maximum amount of anisotropic filtering used.",
                                            descriptiont = {
                                                jp = "Anisotropic(異方性)フィルタの最大使用量。"
                                            },
                                            name = "anisotropy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the line height. When rendering the font in lines the actual height will be determined by the line height multiplied by the height of the font. The default is 1.0.",
                            descriptiont = {
                                de = "Bestimmt die Zeilenhöhe des Font.\n\nWenn der Font gerendert wird, wird die tatsächliche Höhe von der Zeilenhöhe multipliziert mit der Höhe des Font bestimmt.\n\nDer Standardwert für die Zeilenhöhe ist 1.0.",
                                jp = "行の高さを設定します。\n\nフォントの表示時における実際の行の高さは\n\nフォントの高さに行の高さを乗算したものにより決定されます。 \n\n標準値は 1.0 です。",
                                pt = "Configura a altura da linha.\n\nQuando renderiza a fonte na linha a altura atual será determinada pela altura da linha multiplicada pela altura da fonte.\n\nO padrão é 1.0."
                            },
                            minidescriptiont = {
                                de = "Bestimmt die Zeilenhöhe des Font.",
                                jp = "行の高さを設定します。",
                                pt = "Configura a altura da linha."
                            },
                            name = "setLineHeight",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new line height.",
                                            descriptiont = {
                                                de = "Die neue Zeilenhöhe.",
                                                jp = "新しい行の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Pode ser usado para desenhar texto na tela."
                    },
                    name = "Font",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newMesh"
                    },
                    description = "A 2D polygon mesh used for drawing arbitrary textured shapes.",
                    descriptiont = {
                        de = "Ein zweidimensionales Polygonnetz zum Zeichnen von beliebig geformten Texturobjekten.",
                        jp = "二次元ポリゴンメッシュはテクスチャが貼られた図形の描画に使用されます。"
                    },
                    functions = {
                        {
                            description = "Attaches a vertex attribute from a different Mesh onto this Mesh, for use when drawing. This can be used to share vertex attribute data between several different Meshes.",
                            descriptiont = {
                                jp = "描画時に使用するために、この Mesh と異なる Mesh から頂点属性を付加します。これは幾つか異なる Mesh 間で頂点属性データを共有するために使用することができます。"
                            },
                            minidescriptiont = {
                                jp = "描画時に使用するために、この Mesh と異なる Mesh から頂点属性を付加します。"
                            },
                            name = "attachAttribute",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The name of the vertex attribute to attach.",
                                            descriptiont = {
                                                jp = "付加を行う頂点属性の名称。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "The Mesh to get the vertex attribute from.",
                                            descriptiont = {
                                                jp = "頂点属性の取得を行う Mesh です。"
                                            },
                                            name = "mesh",
                                            type = "Mesh"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the mode used when drawing the Mesh.",
                            descriptiont = {
                                jp = "Mesh の描画に使用する方式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh の描画に使用する方式を取得します。"
                            },
                            name = "getDrawMode",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The mode used when drawing the Mesh.",
                                            descriptiont = {
                                                jp = "Mesh の描画に使用する方式。"
                                            },
                                            name = "mode",
                                            type = "MeshDrawMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the range of vertices used when drawing the Mesh.\n\nIf the Mesh's draw range has not been set previously with Mesh:setDrawRange, this function will return nil.",
                            descriptiont = {
                                jp = "Mesh の描画時に使用される頂点の範囲を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh の描画時に使用される頂点の範囲を取得します。"
                            },
                            name = "getDrawRange",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The index of the first vertex used when drawing, or the index of the first value in the vertex map used if one is set for this Mesh.",
                                            descriptiont = {
                                                jp = "描画時に使用される最初の頂点の索引または、この Mesh に一つ設定されている場合に頂点マップにある最初の値の索引を使用します。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The index of the last vertex used when drawing, or the index of the last value in the vertex map used if one is set for this Mesh.",
                                            descriptiont = {
                                                jp = "描画時に使用される最後の頂点の索引または、この Mesh に一つ設定されている場合に頂点マップにある最後の値の索引を使用します。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the texture (Image or Canvas) used when drawing the Mesh.",
                            descriptiont = {
                                jp = "Mesh の描画時に使用するテクスチャ (Image または Canvas) を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh の描画時に使用するテクスチャ (Image または Canvas) を取得します。"
                            },
                            name = "getTexture",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Image or Canvas to texture the Mesh with when drawing, or nil if none is set.",
                                            descriptiont = {
                                                jp = "Mesh の描画時にテクスチャとして使用する Image か Canvas, または nil ならば何も設定されていません。"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the properties of a vertex in the Mesh.",
                            descriptiont = {
                                jp = "Mesh にある頂点の特性を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh にある頂点の特性を取得します。"
                            },
                            name = "getVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex you want to retrieve the information for.",
                                            descriptiont = {
                                                jp = "情報の検索を行う頂点の索引。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The first component of the first vertex attribute in the specified vertex.",
                                            descriptiont = {
                                                jp = "指定された頂点にある最初の頂点属性における第一要素。"
                                            },
                                            name = "attributecomponent",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional components of all vertex attributes in the specified vertex.",
                                            descriptiont = {
                                                jp = "指定された頂点にある全頂点属性の追加要素。"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex you want to retrieve the information for.",
                                            descriptiont = {
                                                jp = "情報の検索を行う頂点の索引。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        jp = "カスタム頂点形式を作成されなかった標準的な Mesh の頂点要素を取得します。"
                                    },
                                    returns = {
                                        {
                                            description = "The position of the vertex on the x-axis.",
                                            descriptiont = {
                                                jp = "頂点の位置における x-座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the vertex on the y-axis.",
                                            descriptiont = {
                                                jp = "頂点の位置における y-座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The horizontal component of the texture coordinate.",
                                            descriptiont = {
                                                jp = "テクスチャの座標として水平の要素。"
                                            },
                                            name = "u",
                                            type = "number"
                                        },
                                        {
                                            description = "The vertical component of the texture coordinate.",
                                            descriptiont = {
                                                jp = "テクスチャの座標として垂直の要素。"
                                            },
                                            name = "v",
                                            type = "number"
                                        },
                                        {
                                            description = "The red component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として赤の要素。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            description = "The green component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として緑の要素。"
                                            },
                                            name = "g",
                                            type = "number"
                                        },
                                        {
                                            description = "The blue component of the vertex's color.",
                                            descriptiont = {
                                                jp = "The 頂点の色として青色の成分。"
                                            },
                                            name = "b",
                                            type = "number"
                                        },
                                        {
                                            description = "The alpha component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として透過の要素。"
                                            },
                                            name = "a",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the properties of a specific attribute within a vertex in the Mesh.\n\nMeshes without a custom vertex format specified in love.graphics.newMesh have position as their first attribute, texture coordinates as their second attribute, and color as their third attribute.",
                            descriptiont = {
                                jp = "Mesh において頂点内にある特定属性の特性を取得します。\n\nlove.graphics.newMesh (日本語) によりカスタム頂点形式で指定された Mesh を除き、\n\n最初の属性は位置を、二番目の属性はテクスチャ座標を、そして三番目の属性は色を有しています。"
                            },
                            minidescriptiont = {
                                jp = "Mesh において頂点内にある特定属性の特性を取得します。"
                            },
                            name = "getVertexAttribute",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex to be modified.",
                                            descriptiont = {
                                                jp = "変更を行う頂点の索引。"
                                            },
                                            name = "vertexindex",
                                            type = "number"
                                        },
                                        {
                                            description = "The index of the attribute within the vertex to be modified.",
                                            descriptiont = {
                                                jp = "変更を行う頂点にある属性の索引。"
                                            },
                                            name = "attributeindex",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The value of the first component of the attribute.",
                                            descriptiont = {
                                                jp = "属性の第一要素に対する値。"
                                            },
                                            name = "value1",
                                            type = "number"
                                        },
                                        {
                                            description = "The value of the second component of the attribute.",
                                            descriptiont = {
                                                jp = "属性の第二要素に対する値。"
                                            },
                                            name = "value2",
                                            type = "number"
                                        },
                                        {
                                            description = "Any additional vertex attribute components.",
                                            descriptiont = {
                                                jp = "任意による追加の頂点属性要素。"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the total number of vertices in the Mesh.",
                            descriptiont = {
                                jp = "Mesh にある頂点の合計数を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh にある頂点の合計数を取得します。"
                            },
                            name = "getVertexCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The total number of vertices in this Mesh.",
                                            descriptiont = {
                                                jp = "Mesh にある頂点の合計数。"
                                            },
                                            name = "num",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the vertex format that the Mesh was created with.",
                            descriptiont = {
                                jp = "作成された Mesh の頂点形式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "作成された Mesh の頂点形式を取得します。"
                            },
                            name = "getVertexFormat",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The vertex format of the Mesh, which is a table containing tables for each vertex attribute the Mesh was created with, in the form of {attribute, ...}.",
                                            name = "format",
                                            table = {
                                                {
                                                    description = "A table containing the attribute's name, it's data type, and the number of components in the attribute, in the form of {name, datatype, components}.",
                                                    name = "attribute",
                                                    type = "table"
                                                },
                                                {
                                                    description = "Additional vertex attributes in the Mesh.",
                                                    name = "...",
                                                    type = "table"
                                                }
                                            },
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the vertex map for the Mesh. The vertex map describes the order in which the vertices are used when the Mesh is drawn. The vertices, vertex map, and mesh draw mode work together to determine what exactly is displayed on the screen.\n\nIf no vertex map has been set previously via Mesh:setVertexMap, then this function will return nil in LÖVE 0.10.0+, or an empty table in 0.9.2 and older.",
                            descriptiont = {
                                jp = "Mesh に対して頂点マップを取得します。頂点マップは Mesh が描画される時に頂点を使用する順序を記述します。頂点、頂点マップと Mesh 描画方式は画面で対象を正確に表示するか決定するために連携動作します。\n\nMesh:setVertexMap で頂点マップが以前に設定されていない場合は、この関数は LÖVE nil を、または 0.9.2 以前ではからテーブルを返します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh に対して頂点マップを取得します。"
                            },
                            name = "getVertexMap",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A table containing a list of vertex indices used when drawing.",
                                            descriptiont = {
                                                jp = "描画時に使用する頂点の索引一覧があるテーブル。"
                                            },
                                            name = "map",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether a specific vertex attribute in the Mesh is enabled. Vertex data from disabled attributes is not used when drawing the Mesh.",
                            descriptiont = {
                                jp = "Mesh にある特定の頂点属性が有効または無効であるかを取得します。無効にされた属性の頂点データは Mesh の描画時に使用されません。"
                            },
                            minidescriptiont = {
                                jp = "Mesh にある特定の頂点属性が有効または無効であるかを取得します。"
                            },
                            name = "isAttributeEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The name of the vertex attribute to enable or disable.",
                                            descriptiont = {
                                                jp = "有効または無効にする頂点属性の名称。"
                                            },
                                            name = "name",
                                            type = "string"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Whether the vertex attribute is used when drawing this Mesh.",
                                            descriptiont = {
                                                jp = "この Mesh を描画する場合に頂点属性を使用するか否か。"
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Enables or disables a specific vertex attribute in the Mesh. Vertex data from disabled attributes is not used when drawing the Mesh.",
                            descriptiont = {
                                jp = "Mesh にある特定の頂点属性を有効または無効にします。無効にされた属性の頂点データは Mesh の描画時に使用されません。"
                            },
                            minidescriptiont = {
                                jp = "Mesh にある特定の頂点属性を有効または無効にします。"
                            },
                            name = "setAttributeEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The name of the vertex attribute to enable or disable.",
                                            descriptiont = {
                                                jp = "有効または無効にする頂点属性の名称。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "Whether the vertex attribute is used when drawing this Mesh.",
                                            descriptiont = {
                                                jp = "この Mesh を描画する場合に頂点属性を使用するか否か。"
                                            },
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the mode used when drawing the Mesh.",
                            descriptiont = {
                                jp = "Mesh の描画に使用する方式を設定します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh の描画に使用する方式を設定します。"
                            },
                            name = "setDrawMode",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The mode to use when drawing the Mesh.",
                                            descriptiont = {
                                                jp = "Mesh の描画に使用する方式。"
                                            },
                                            name = "mode",
                                            type = "MeshDrawMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Restricts the drawn vertices of the Mesh to a subset of the total.\n\nIf a vertex map is used with the Mesh, this method will set a subset of the values in the vertex map array to use, instead of a subset of the total vertices in the Mesh.\n\nFor example, if Mesh:setVertexMap(1, 2, 3, 1, 3, 4) and Mesh:setDrawRange(4, 6) are called, vertices 1, 3, and 4 will be drawn.",
                            descriptiont = {
                                jp = "合計の部分集合に対して Mesh における頂点の描画を制限します。"
                            },
                            minidescriptiont = {
                                jp = "合計の部分集合に対して Mesh における頂点の描画を制限します。"
                            },
                            name = "setDrawRange",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the first vertex to use when drawing, or the index of the first value in the vertex map to use if one is set for this Mesh.",
                                            descriptiont = {
                                                jp = "描画時に使用される最初の頂点の索引または、この Mesh に一つ設定されている場合に頂点マップにある最初の値の索引を使用します。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The index of the last vertex to use when drawing, or the index of the last value in the vertex map to use if one is set for this Mesh.",
                                            descriptiont = {
                                                jp = "描画時に使用される最後の頂点の索引または、この Mesh に一つ設定されている場合に頂点マップにある最後の値の索引を使用します。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    description = "Allows all vertices in the Mesh to be drawn.",
                                    descriptiont = {
                                        jp = "Mesh にある頂点を全て描画できるようにします。"
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the texture (Image or Canvas) used when drawing the Mesh.\n\nWhen called without an argument disables the texture. Untextured meshes have a white color by default.",
                            descriptiont = {
                                jp = "Mesh の描画時に使用するテクスチャ (Image または Canvas) を設定します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh の描画時に使用するテクスチャ (Image または Canvas) を設定します。"
                            },
                            name = "setTexture",
                            variants = {
                                {},
                                {
                                    arguments = {
                                        {
                                            description = "The Image or Canvas to texture the Mesh with when drawing.",
                                            descriptiont = {
                                                jp = "Mesh の描画時にテクスチャとして使用する Image または Canvas です。"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the properties of a vertex in the Mesh.",
                            descriptiont = {
                                jp = "Mesh にある頂点の特性を設定します。"
                            },
                            minidescriptiont = {
                                jp = "Mesh にある頂点の特性を設定します。"
                            },
                            name = "setVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex you want to modify.",
                                            descriptiont = {
                                                jp = "変更したい頂点の索引。"
                                            },
                                            name = "index",
                                            type = "number"
                                        },
                                        {
                                            description = "The first component of the first vertex attribute in the specified vertex.",
                                            descriptiont = {
                                                jp = "指定された頂点にある最初の頂点属性における第一要素。"
                                            },
                                            name = "attributecomponent",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional components of all vertex attributes in the specified vertex.",
                                            descriptiont = {
                                                jp = "指定された頂点にある全頂点属性の追加要素。"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex you want to modify.",
                                            name = "index",
                                            type = "number"
                                        },
                                        {
                                            description = "A table with vertex information, in the form of {attributecomponent, ...}.",
                                            name = "vertex",
                                            table = {
                                                {
                                                    description = "The first component of the first vertex attribute in the specified vertex.",
                                                    name = "attributecomponent",
                                                    type = "number"
                                                },
                                                {
                                                    description = "Additional components of all vertex attributes in the specified vertex.",
                                                    name = "...",
                                                    type = "number"
                                                }
                                            },
                                            type = "table"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex you want to modify.",
                                            descriptiont = {
                                                jp = "変更したい頂点の索引。"
                                            },
                                            name = "index",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the vertex on the x-axis.",
                                            descriptiont = {
                                                jp = "頂点の位置として x-軸。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the vertex on the y-axis.",
                                            descriptiont = {
                                                jp = "頂点の位置として y-軸。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The horizontal component of the texture coordinate.",
                                            descriptiont = {
                                                jp = "テクスチャの座標として水平の要素。"
                                            },
                                            name = "u",
                                            type = "number"
                                        },
                                        {
                                            description = "The vertical component of the texture coordinate.",
                                            descriptiont = {
                                                jp = "テクスチャの座標として垂直の要素。"
                                            },
                                            name = "v",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The red component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として赤色の成分。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The green component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として緑色の成分。"
                                            },
                                            name = "g",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The blue component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として青色の成分。"
                                            },
                                            name = "b",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The alpha component of the vertex's color.",
                                            descriptiont = {
                                                jp = "頂点の色として透過の成分。"
                                            },
                                            name = "a",
                                            type = "number"
                                        }
                                    },
                                    description = "Sets the vertex components of a Mesh that wasn't created with a custom vertex format.",
                                    descriptiont = {
                                        jp = "カスタム頂点形式で作成されなかった Mesh の頂点要素を設定します。"
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex you want to modify.",
                                            name = "index",
                                            type = "number"
                                        },
                                        {
                                            description = "A table with vertex information.",
                                            name = "vertex",
                                            table = {
                                                {
                                                    description = "The position of the vertex on the x-axis.",
                                                    name = "[1]",
                                                    type = "number"
                                                },
                                                {
                                                    description = "The position of the vertex on the y-axis.",
                                                    name = "[2]",
                                                    type = "number"
                                                },
                                                {
                                                    description = "The horizontal component of the texture coordinate.",
                                                    name = "[3]",
                                                    type = "number"
                                                },
                                                {
                                                    description = "The vertical component of the texture coordinate.",
                                                    name = "[4]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The red component of the vertex's color.",
                                                    name = "[5]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The green component of the vertex's color.",
                                                    name = "[6]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The blue component of the vertex's color.",
                                                    name = "[7]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The alpha component of the vertex's color.",
                                                    name = "[8]",
                                                    type = "number"
                                                }
                                            },
                                            type = "table"
                                        }
                                    },
                                    description = "Sets the vertex components of a Mesh that wasn't created with a custom vertex format."
                                }
                            }
                        },
                        {
                            description = "Sets the properties of a specific attribute within a vertex in the Mesh.\n\nMeshes without a custom vertex format specified in love.graphics.newMesh have position as their first attribute, texture coordinates as their second attribute, and color as their third attribute.",
                            descriptiont = {
                                jp = "Mesh において頂点内にある特定属性の特性を設定します。\n\nlove.graphics.newMesh (日本語) によりカスタム頂点形式で指定された Mesh を除き、\n\n最初の属性は位置を、二番目の属性はテクスチャ座標を、そして三番目の属性は色を有しています。"
                            },
                            minidescriptiont = {
                                jp = "Mesh において頂点内にある特定属性の特性を設定します。"
                            },
                            name = "setVertexAttribute",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the the vertex to be modified.",
                                            descriptiont = {
                                                jp = "変更を行う頂点の索引。"
                                            },
                                            name = "vertexindex",
                                            type = "number"
                                        },
                                        {
                                            description = "The index of the attribute within the vertex to be modified.",
                                            descriptiont = {
                                                jp = "変更を行う頂点にある属性の索引。"
                                            },
                                            name = "attributeindex",
                                            type = "number"
                                        },
                                        {
                                            description = "The value of the first component of the attribute.",
                                            descriptiont = {
                                                jp = "属性の第一要素に対する新規値。"
                                            },
                                            name = "value1",
                                            type = "number"
                                        },
                                        {
                                            description = "The value of the second component of the attribute.",
                                            descriptiont = {
                                                jp = "属性の第二要素に対する新規値。"
                                            },
                                            name = "value2",
                                            type = "number"
                                        },
                                        {
                                            description = "Any additional vertex attribute components.",
                                            descriptiont = {
                                                jp = "任意による追加の頂点属性要素。"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the vertex map for the Mesh. The vertex map describes the order in which the vertices are used when the Mesh is drawn. The vertices, vertex map, and mesh draw mode work together to determine what exactly is displayed on the screen.\n\nThe vertex map allows you to re-order or reuse vertices when drawing without changing the actual vertex parameters or duplicating vertices. It is especially useful when combined with different Mesh Draw Modes.",
                            descriptiont = {
                                jp = "Mesh に対して頂点マップを設定します。頂点マップは Mesh の描画時における頂点の使用順序について記述します。頂点、頂点マップ、および Mesh の描画方式はどのように対象が正確に画面へ表示されるか決定するために動作します。\n\n頂点マップは描画時に頂点の再利用また並び替えを頂点の引数または頂点の複製といった実際の変更なしで可能にします。これは異なる Mesh の描画方式と組み合わせたときに特に有用です。"
                            },
                            minidescriptiont = {
                                jp = "Mesh に対して頂点マップを設定します。"
                            },
                            name = "setVertexMap",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "A table containing a list of vertex indices to use when drawing. Values must be in the range of [1, Mesh:getVertexCount()].",
                                            descriptiont = {
                                                jp = "描画時に使用する頂点の索引一覧があるテーブル。必ず値の範囲は Mesh:getVertexCount() にしてください。"
                                            },
                                            name = "map",
                                            type = "table"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The index of the first vertex to use when drawing. Must be in the range of [1, Mesh:getVertexCount()].",
                                            descriptiont = {
                                                jp = "描画時に使用する一番目の頂点の索引。必ず値の範囲は Mesh:getVertexCount() にしてください。"
                                            },
                                            name = "vi1",
                                            type = "number"
                                        },
                                        {
                                            description = "The index of the second vertex to use when drawing.",
                                            descriptiont = {
                                                jp = "描画時に使用する二番目の頂点の索引。"
                                            },
                                            name = "vi2",
                                            type = "number"
                                        },
                                        {
                                            description = "The index of the third vertex to use when drawing.",
                                            descriptiont = {
                                                jp = "描画時に使用する三番目の頂点の索引。"
                                            },
                                            name = "vi3",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Replaces a range of vertices in the Mesh with new ones. The total number of vertices in a Mesh cannot be changed after it has been created.",
                            descriptiont = {
                                jp = "新規 Mesh により頂点の範囲を変更します。 Mesh による頂点の総数は作成後に変更できません。これはループ内で Mesh:setVertex を呼び出すよりも多くの場合はより効率的です。"
                            },
                            minidescriptiont = {
                                jp = "新規 Mesh により頂点の範囲を変更します。"
                            },
                            name = "setVertices",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The table filled with vertex information tables for each vertex, in the form of {vertex, ...} where each vertex is a table in the form of {attributecomponent, ...}.",
                                            name = "vertices",
                                            table = {
                                                {
                                                    description = "The first component of the first vertex attribute in the vertex.",
                                                    name = "attributecomponent",
                                                    type = "number"
                                                },
                                                {
                                                    description = "Additional components of all vertex attributes in the vertex.",
                                                    name = "...",
                                                    type = "number"
                                                },
                                                {
                                                    default = "1",
                                                    description = "The index of the first vertex to replace.",
                                                    name = "startvertex",
                                                    type = "number"
                                                }
                                            },
                                            type = "table"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The table filled with vertex information tables for each vertex as follows:",
                                            name = "vertices",
                                            table = {
                                                {
                                                    description = "The position of the vertex on the x-axis.",
                                                    name = "[1]",
                                                    type = "number"
                                                },
                                                {
                                                    description = "The position of the vertex on the y-axis.",
                                                    name = "[2]",
                                                    type = "number"
                                                },
                                                {
                                                    description = "The horizontal component of the texture coordinate. Texture coordinates are normally in the range of [0, 1], but can be greater or less (see WrapMode).",
                                                    name = "[3]",
                                                    type = "number"
                                                },
                                                {
                                                    description = "The vertical component of the texture coordinate. Texture coordinates are normally in the range of [0, 1], but can be greater or less (see WrapMode).",
                                                    name = "[4]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The red color component.",
                                                    name = "[5]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The green color component.",
                                                    name = "[6]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The blue color component.",
                                                    name = "[7]",
                                                    type = "number"
                                                },
                                                {
                                                    default = "255",
                                                    description = "The alpha color component.",
                                                    name = "[8]",
                                                    type = "number"
                                                }
                                            },
                                            type = "table"
                                        }
                                    },
                                    description = "Sets the vertex components of a Mesh that wasn't created with a custom vertex format."
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Mesh",
                    parenttype = "Drawable",
                    supertypes = {
                        "Drawable",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newImage"
                    },
                    description = "Drawable image type.",
                    descriptiont = {
                        de = "Ein Bild, welches gezeichnet werden kann.",
                        jp = "描画可能な画像の型。",
                        pt = "Tipo de imagens que podem ser desenhadas.",
                        ru = "Изображение."
                    },
                    functions = {
                        {
                            description = "Gets the original ImageData or CompressedImageData used to create the Image.\n\nAll Images keep a reference to the Data that was used to create the Image. The Data is used to refresh the Image when love.window.setMode or Image:refresh is called.",
                            descriptiont = {
                                jp = "元の ImageData または CompressedData から取得したものを使用して画像を作成します。\n\n全ての画像は参照用の Data として保持したまま画像を作成するために使用されます。 love.window.setMode または Image:refresh が呼ばれたときに画像の再読込をするために Data は使用されます。"
                            },
                            minidescriptiont = {
                                jp = "元の ImageData または CompressedData から取得したものを使用して画像の作成します。"
                            },
                            name = "getData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The original ImageData used to create the Image, if the image is not compressed.",
                                            descriptiont = {
                                                jp = "元の ImageData を使用して作成された圧縮画像。"
                                            },
                                            name = "data",
                                            type = "ImageData"
                                        }
                                    }
                                },
                                {
                                    returns = {
                                        {
                                            description = "The original CompressedImageData used to create the Image, if the image is compressed.",
                                            name = "data",
                                            type = "CompressedImageData"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width and height of the Image.",
                            descriptiont = {
                                jp = "画像の幅と高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "画像の幅と高さを取得します。"
                            },
                            name = "getDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the Image, in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位による画像の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the Image, in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位での画像の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the filter mode for an image.",
                            descriptiont = {
                                de = "Gibt den Filtermodus eines Bildes zurück.",
                                jp = "画像のフィルタ方式を取得します。",
                                pt = "Obtém o modo de filtro de uma imagem."
                            },
                            minidescriptiont = {
                                de = "Gibt den Filtermodus eines Bildes zurück.",
                                jp = "画像のフィルタ方式を取得します。",
                                pt = "Obtém o modo de filtro de uma imagem."
                            },
                            name = "getFilter",
                            variants = {
                                {
                                    descriptiont = {
                                        de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nmin, mag = Image:getFilter( )\n\n&lt;/source&gt;"
                                    },
                                    returns = {
                                        {
                                            description = "Filter mode used when minifying the image.",
                                            descriptiont = {
                                                de = "Benutzter Filtermodus beim Verkleinern eines Bildes.",
                                                jp = "画像の縮小に使うフィルタの方式。",
                                                pt = "Modo de filtro usado quando a imagem é minimizada."
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "Filter mode used when magnifying the image.",
                                            descriptiont = {
                                                de = "Benutzter Filtermodus beim Vergrößern eines Bildes.",
                                                jp = "画像の拡大に使うフィルタの方式。",
                                                pt = "Modo de filtro usado quando a imagem é mazimizada."
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the flags used when the image was created.",
                            descriptiont = {
                                jp = "Image が作成されたときに使用されるフラグを取得します。"
                            },
                            minidescriptiont = {
                                jp = "Image が作成されたときに使用されるフラグを取得します。"
                            },
                            name = "getFlags",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A table with ImageFlag keys.",
                                            descriptiont = {
                                                jp = "ImageFlag キーを有するテーブル。"
                                            },
                                            name = "flags",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the Image.",
                            descriptiont = {
                                jp = "画像の高さを取得します。",
                                pt = "Retorna a altura de uma imagem."
                            },
                            minidescriptiont = {
                                jp = "画像の高さを取得します。",
                                pt = "Retorna a altura de uma imagem."
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the Image, in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位での画像の高さ。",
                                                pt = "A altura da imagem, em pixels."
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the mipmap filter mode for an Image.",
                            descriptiont = {
                                jp = "Image に対して mipmap フィルタの方式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Image に対して mipmap フィルタの方式を取得します。"
                            },
                            name = "getMipmapFilter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The filter mode used in between mipmap levels. nil if mipmap filtering is not enabled.",
                                            descriptiont = {
                                                jp = "mipmap レベルとの間で使用されるフィルタ方式。 nil ならば mipmap フィルタは有効になっていません。"
                                            },
                                            name = "mode",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "Value used to determine whether the image should use more or less detailed mipmap levels than normal when drawing.",
                                            descriptiont = {
                                                jp = "描画時に通常よりもより多くまたはより少なく詳細な mipmap レベルを画像へ使用すべきかどうかで使う値を決定します。"
                                            },
                                            name = "sharpness",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width of the Image.",
                            descriptiont = {
                                jp = "画像の幅を取得します。",
                                pt = "Retorna a largura de uma imagem."
                            },
                            minidescriptiont = {
                                jp = "画像の幅を取得します。",
                                pt = "Retorna a largura de uma imagem."
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the Image, in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位での画像の幅。",
                                                pt = "A largura da imagem, em pixels."
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the wrapping properties of an Image.\n\nThis function returns the currently set horizontal and vertical wrapping modes for the image.",
                            descriptiont = {
                                jp = "Image の加工特性を取得します。\n\nこの関数は Image に現在設定されている水平および垂直方向の加工方式を返します。",
                                pt = "Obtém as propriedades de acondicionamento de uma imagem.\n\nEsta função retorna a atual configuração horizontal e vertical modo de acondionamento de uma imagem."
                            },
                            minidescriptiont = {
                                jp = "Image の加工特性を取得します。",
                                pt = "Obtém as propriedades de acondicionamento de uma imagem."
                            },
                            name = "getWrap",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Horizontal wrapping mode of the image.",
                                            descriptiont = {
                                                jp = "Image の水平方向の加工方式。",
                                                pt = "Acondicionamento horizontal de uma imagem."
                                            },
                                            name = "horizontal",
                                            type = "WrapMode"
                                        },
                                        {
                                            description = "Vertical wrapping mode of the image.",
                                            descriptiont = {
                                                jp = "Image の垂直方向の加工方式。",
                                                pt = "Acondicionamento vertical de uma imagem."
                                            },
                                            name = "vertical",
                                            type = "WrapMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Reloads the Image's contents from the ImageData or CompressedImageData used to create the image.",
                            descriptiont = {
                                jp = "画像の作成に用いるために ImageData または CompressedData から画像の内容を再読込します。"
                            },
                            minidescriptiont = {
                                jp = "画像の作成に用いるために ImageData または CompressedData から画像の内容を再読込します。"
                            },
                            name = "refresh",
                            variants = {
                                {},
                                {
                                    arguments = {
                                        {
                                            description = "The x-axis of the top-left corner of the area within the Image to reload.",
                                            descriptiont = {
                                                jp = "再読み込みを行う画像領域内における右上角の x-軸。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-axis of the top-left corner of the area within the Image to reload.",
                                            descriptiont = {
                                                jp = "再読み込みを行う画像領域内における右上角の x-軸。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The width of the area within the Image to reload.",
                                            descriptiont = {
                                                jp = "再読み込みを行う画像領域内における幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the area within the Image to reload.",
                                            descriptiont = {
                                                jp = "再読み込みを行う画像領域内における高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the filter mode for an image.",
                            descriptiont = {
                                jp = "画像のフィルタ方式を設定します。",
                                ru = "Устанавливает режим фильтрации для изображения."
                            },
                            minidescriptiont = {
                                jp = "画像のフィルタ方式を設定します。",
                                ru = "Устанавливает режим фильтрации для изображения."
                            },
                            name = "setFilter",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "How to scale an image down.",
                                            descriptiont = {
                                                jp = "画像の縮小に使うフィルタの方式。",
                                                ru = "Фильтрация при уменьшении."
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "min",
                                            description = "How to scale an image up.",
                                            descriptiont = {
                                                jp = "画像の拡大に使うフィルタの方式。",
                                                ru = "Фильтрация при увеличении."
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the mipmap filter mode for an Image.\n\nMipmapping is useful when drawing an image at a reduced scale. It can improve performance and reduce aliasing issues.\n\nIn 0.10.0 and newer, the Image must be created with the mipmaps flag enabled for the mipmap filter to have any effect.",
                            descriptiont = {
                                jp = "Image に対して mipmap フィルタの方式を設定します。\n\nミップマップ (Mipmap) は縮尺での描画時に有用です。これにより性能およびエイリアシングの問題を改善できます。\n\n作成する必要があります。"
                            },
                            minidescriptiont = {
                                jp = "Image に対して mipmap フィルタの方式を設定します。"
                            },
                            name = "setMipmapFilter",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The filter mode to use in between mipmap levels. \"nearest\" will often give better performance.",
                                            descriptiont = {
                                                jp = "mipmap レベルとの間で使用されるフィルタ方式。 \"nearest\" であれば大抵はより良い性能になります。"
                                            },
                                            name = "filtermode",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "0",
                                            description = "A positive sharpness value makes the image use a more detailed mipmap level when drawing, at the expense of performance. A negative value does the reverse.",
                                            descriptiont = {
                                                jp = "性能を犠牲にして描画を行う場合に、正数による鮮鋭度の値としてより詳細な mipmap レベルを画像に使用します。負数値では反転を行います。"
                                            },
                                            name = "sharpness",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    description = "Disables mipmap filtering.",
                                    descriptiont = {
                                        jp = "mipmap フィルタを無効にします。"
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the wrapping properties of an Image.\n\nThis function sets the way an Image is repeated when it is drawn with a Quad that is larger than the image's extent. An image may be clamped or set to repeat in both horizontal and vertical directions. Clamped images appear only once, but repeated ones repeat as many times as there is room in the Quad.\n\nIf you use a Quad that is larger than the image extent and do not use repeated tiling, there may be an unwanted visual effect of the image stretching all the way to fill the Quad. If this is the case, setting Image:getWrap(\"repeat\", \"repeat\") for all the images to be repeated, and using Quad of appropriate size will result in the best visual appearance.",
                            descriptiont = {
                                jp = "Image の加工特性を設定します。\n\nこの関数は画像の範囲より大きい Quad で画像を反復して描画する方法を設定します。画像へ clamped または repeat を設定して垂直および水平方向の両方を反復できます。 Clamped では画像が一度だけ現れますが、repeate では Quad に余白がある限り何度も繰り返します。\n\n重要な注意。Quad へ全て詰め込むために画像を伸張を行ってしまうため望まない視覚効果が発生する場合があります。この場合は、 &lt;tt&gt;Image:setWrap(\"repeat\", \"repeat\")&lt;/tt&gt; を設定することで画像は全て繰り返し描画され、適切な大きさの Quad を使用することで視覚的に最良の外観になります。",
                                pt = "Configura a propriedade de acondicionamento de uma imagem.\n\nEsta função configura a maneira que uma imagem é repetida qual é desenhada com um Quad que é maior do que uma imagem estendida. Uma imagem pode ser pinçada ou configurada para repetir nas direções horizontal e vertical. Imagens pinçadas aparecem somente uma vez, mas as repetidas aparecem tantas vezes quantas couber em um Quad.\n\nObs.: Se usar um Quad que é mais largo que uma imagem estendida e não uma cobertura repetida, poderá ocorrer efeitos visuais inesperados como alongamento para preencher todo o Qud. Se este for o caso configure &lt;tt&gt;Image:getWrap(\"repeat\", \"repeat\")&lt;/tt&gt; para que toda a imagem seja repetida além de usar um Quad de tamanho apropriado para obter uma resultado de melhor aparência visual."
                            },
                            minidescriptiont = {
                                jp = "Image の加工特性を設定します。",
                                pt = "Configura a propriedade de acondicionamento de uma imagem."
                            },
                            name = "setWrap",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Horizontal wrapping mode of the image.",
                                            descriptiont = {
                                                jp = "Image の水平方向の加工方式。",
                                                pt = "Modo de acondicionamento horizontal de uma imagem."
                                            },
                                            name = "horizontal",
                                            type = "WrapMode"
                                        },
                                        {
                                            default = "horizontal",
                                            description = "Vertical wrapping mode of the image.",
                                            descriptiont = {
                                                jp = "Image の垂直方向の加工方式。",
                                                pt = "Modo de acondicionamento vertical de uma imagem."
                                            },
                                            name = "vertical",
                                            type = "WrapMode"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Tipo de imagens que podem ser desenhadas."
                    },
                    name = "Image",
                    parenttype = "Texture",
                    supertypes = {
                        "Object",
                        "Drawable",
                        "Texture"
                    }
                },
                {
                    constructors = {
                        "newParticleSystem"
                    },
                    description = "Used to create cool effects, like fire. The particle systems are created and drawn on the screen using functions in love.graphics. They also need to be updated in the update(dt) callback for you to see any changes in the particles emitted.",
                    descriptiont = {
                        de = "Partikelsysteme können dazu benutzt werden viele verschiedene Effekte wie Feuer oder Rauch zu erzeugen.",
                        jp = "ParticleSystemは 火炎または煙幕などのパーティクル(粒子)による視覚効果を作成するために使用することができます。\n\nパーティクル・システムは love.graphics.newParticleSystem を使用して作成します。その他なんらかの 描画可能 なものと同様に love.graphics.draw を使用して画面へ描画することができます。さらに、放射されたパーティクルのあらゆる変更を確認するために love.update コールバックにてパーティクル・システムの更新を行う必要があります。\n\nパーティクル・システムは setParticleLifetime および setEmissionRate を呼び出すまでパーティクルを一切作成しません。",
                        pt = "Usado para criar efeitos legais, como fogo.\n\nOs sistemas de partículas são criados e desenhados na tela usando funções do love.graphics. Eles também precisam ser atualizados no callback update(dt) para que as mudanças mas partículas emitidas sejam vistas.",
                        ru = "Используется для создания различных эффектов вроде огня.\n\nСистема частиц создается и выводится на экран с помощью функций из love.graphics. Также они должны быть обновлены в функции update(dt), если вы намереваетесь увидеть хоть какие-то изменения по времени."
                    },
                    functions = {
                        {
                            description = "Creates an identical copy of the ParticleSystem in the stopped state.\n\nCloned ParticleSystem inherit all the set-able state of the original ParticleSystem, but they are initialized stopped.",
                            descriptiont = {
                                de = "Erstellt eine identische Kopie eines bereits existierenden Partikelsystems. ",
                                jp = "ParticleSystem の同一複製物を停止状態に設定して作成します。"
                            },
                            minidescriptiont = {
                                de = "Erstellt eine identische Kopie eines bereits existierenden Partikelsystems.",
                                jp = "ParticleSystem の同一複製物を停止状態に設定して作成します。"
                            },
                            name = "clone",
                            variants = {
                                {
                                    descriptiont = {
                                        de = "Der Klon erbt alle vorgebbaren Eigenschaften des Originals, befindet sich jedoch zunächst im gestoppten Zustand."
                                    },
                                    returns = {
                                        {
                                            description = "The new identical copy of this ParticleSystem.",
                                            descriptiont = {
                                                de = "Eine neue identische Kopie des Partikelsystems.",
                                                jp = "この ParticleSystem の新規同一複製物。"
                                            },
                                            name = "particlesystem",
                                            type = "ParticleSystem"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Emits a burst of particles from the particle emitter.",
                            descriptiont = {
                                de = "Stößt einen Partikelhaufen aus.",
                                jp = "パーティクル・エミッタからパーティクルの爆発を放射します。"
                            },
                            minidescriptiont = {
                                de = "Stößt einen Partikelhaufen aus.",
                                jp = "パーティクル・エミッタからパーティクルの爆発を放射します。"
                            },
                            name = "emit",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The amount of particles to emit. The number of emitted particles will be truncated if the particle system's max buffer size is reached.",
                                            descriptiont = {
                                                de = "Die Anzahl von Partikeln welche ausgestoßen werden sollen. Die Nummer wird automatisch verringert, wenn sie die erlaubte Anzahl übersteigt.",
                                                jp = "パーティクルの放射量。パーティクル・システムのバッファの大きさが最大まで到達した場合は、パーティクルの放射数は切り詰められます。"
                                            },
                                            name = "numparticles",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the amount of particles that are currently in the system.",
                            descriptiont = {
                                de = "Gibt die Anzahl von Partikeln zurück, welche gerade im System sind.",
                                jp = "システムにあるパーティクルの現在量を取得します。"
                            },
                            minidescriptiont = {
                                de = "Gibt die Anzahl von Partikeln zurück, welche gerade im System sind.",
                                jp = "システムにあるパーティクルの現在量を取得します。"
                            },
                            name = "getCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The current number of live particles.",
                                            descriptiont = {
                                                de = "Die Anzahl der \"lebenden\" Partikel.",
                                                jp = "現在活動中のパーティクルの数。"
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the area-based spawn parameters for the particles.",
                            descriptiont = {
                                jp = "パーティクルの領域に基づく生産引数を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの領域に基づく生産引数を取得します。"
                            },
                            name = "getAreaSpread",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The type of distribution for new particles.",
                                            descriptiont = {
                                                jp = "パーティクルにおける分布の種類。"
                                            },
                                            name = "distribution",
                                            type = "AreaSpreadDistribution"
                                        },
                                        {
                                            description = "The maximum spawn distance from the emitter along the x-axis for uniform distribution, or the standard deviation along the x-axis for normal distribution.",
                                            descriptiont = {
                                                jp = "一様偏差によるX-軸のエミッタからの距離または標準偏差による X-軸の正規分布を大量生産します。"
                                            },
                                            name = "dx",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum spawn distance from the emitter along the y-axis for uniform distribution, or the standard deviation along the y-axis for normal distribution.",
                                            descriptiont = {
                                                jp = "一様偏差によるY-軸のエミッタからの距離または標準偏差による Y-軸の正規分布を大量生産します。"
                                            },
                                            name = "dy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the size of the buffer (the max allowed amount of particles in the system).",
                            descriptiont = {
                                jp = "ParticleSystem で一度に扱うことのできるパーティクルの最大数を取得します。"
                            },
                            minidescriptiont = {
                                jp = "ParticleSystem で一度に扱うことのできるパーティクルの最大数を取得します。"
                            },
                            name = "getBufferSize",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The buffer size.",
                                            descriptiont = {
                                                jp = "パーティクルの最大数。"
                                            },
                                            name = "buffer",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a series of colors to apply to the particle sprite. The particle system will interpolate between each color evenly over the particle's lifetime. Color modulation needs to be activated for this function to have any effect.\n\nArguments are passed in groups of four, representing the components of the desired RGBA value. At least one color must be specified. A maximum of eight may be used.",
                            descriptiont = {
                                jp = "パーティクルのスプライトへ適用されている一連の色を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルのスプライトへ適用されている一連の色を取得します。"
                            },
                            name = "getColors",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "First color, red component (0-255).",
                                            name = "r1",
                                            type = "number"
                                        },
                                        {
                                            description = "First color, green component (0-255).",
                                            name = "g1",
                                            type = "number"
                                        },
                                        {
                                            description = "First color, blue component (0-255).",
                                            name = "b1",
                                            type = "number"
                                        },
                                        {
                                            description = "First color, alpha component (0-255).",
                                            name = "a1",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, red component (0-255).",
                                            name = "r2",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, green component (0-255).",
                                            name = "g2",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, blue component (0-255).",
                                            name = "b2",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, alpha component (0-255).",
                                            name = "a2",
                                            type = "number"
                                        },
                                        {
                                            description = "Etc.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the direction the particles will be emitted in.",
                            descriptiont = {
                                jp = "パーティクル・エミッタ (粒子放出器) の方向を取得します (弧度にて)。",
                                pt = "Obtém a direção de um emissor de partículas (em radianos)."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・エミッタ (粒子放出器) の方向を取得します (弧度にて)。",
                                pt = "Obtém a direção de um emissor de partículas (em radianos)."
                            },
                            name = "getDirection",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The direction of the particles (in radians).",
                                            descriptiont = {
                                                jp = "エミッタの方向 (弧度)",
                                                pt = "A direção do emissor (em radianos)."
                                            },
                                            name = "direction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the amount of particles emitted per second.",
                            descriptiont = {
                                jp = "毎秒当たりにおけるパーティクルの放射量を取得します。"
                            },
                            minidescriptiont = {
                                jp = "毎秒当たりにおけるパーティクルの放射量を取得します。"
                            },
                            name = "getEmissionRate",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The amount of particles per second.",
                                            descriptiont = {
                                                jp = "毎秒当たりにおけるパーティクルの放射量。"
                                            },
                                            name = "rate",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the mode to use when the ParticleSystem adds new particles.",
                            descriptiont = {
                                jp = "パーティクルを ParticleSystem へ新規追加するときに使用する方式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルを ParticleSystem へ新規追加するときに使用する方式を取得します。"
                            },
                            name = "getInsertMode",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The mode to use when the ParticleSystem adds new particles.",
                                            descriptiont = {
                                                jp = "新規のパーティクルを ParticleSystem へ追加するときに使用する方式。"
                                            },
                                            name = "mode",
                                            type = "ParticleInsertMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the linear acceleration (acceleration along the x and y axes) for particles.\n\nEvery particle created will accelerate along the x and y axes between xmin,ymin and xmax,ymax.",
                            descriptiont = {
                                jp = "パーティクルにおける線形加速度 (X および Y 軸からの加速度)を取得します。\n\n作成されたパーティクルごとに X および Y 軸から xmin, ymin および xmax, ymax との間に加速度があります。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルにおける線形加速度 (X および Y 軸からの加速度)を取得します。"
                            },
                            name = "getLinearAcceleration",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum acceleration along the x axis.",
                                            descriptiont = {
                                                jp = "X 軸からの最小加速度。"
                                            },
                                            name = "xmin",
                                            type = "number"
                                        },
                                        {
                                            description = "The minimum acceleration along the y axis.",
                                            descriptiont = {
                                                jp = "Y 軸からの最小加速度。"
                                            },
                                            name = "ymin",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum acceleration along the x axis.",
                                            descriptiont = {
                                                jp = "X 軸からの最大加速度。"
                                            },
                                            name = "xmax",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum acceleration along the y axis.",
                                            descriptiont = {
                                                jp = "Y 軸からの最大加速度。"
                                            },
                                            name = "ymax",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the amount of linear damping (constant deceleration) for particles.",
                            descriptiont = {
                                jp = "パーティクルに対する線形減衰 (定数減速) 量を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルに対する線形減衰 (定数減速) 量を取得します。"
                            },
                            name = "getLinearDamping",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum amount of linear damping applied to particles.",
                                            descriptiont = {
                                                jp = "パーティクルに適用されている線形減衰の最小量。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum amount of linear damping applied to particles.",
                                            descriptiont = {
                                                jp = "パーティクルに適用されている線形減衰の最大量。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets how long the particle system should emit particles (if -1 then it emits particles forever).",
                            descriptiont = {
                                jp = "パーティクル・システムにおけるパーティクルの放射時間の長さを取得します ( -1 ならばパーティクルは永久に放射します)。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル・システムにおけるパーティクルの放射時間の長さを取得します。"
                            },
                            name = "getEmitterLifetime",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The lifetime of the emitter (in seconds).",
                                            descriptiont = {
                                                jp = "エミッタの活動限界時間 (秒単位)。"
                                            },
                                            name = "life",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the offget position which the particle sprite is rotated around. If this function is not used, the particles rotate around their center.",
                            descriptiont = {
                                jp = "パーティクル画像の描画支距を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル画像の描画支距を取得します。"
                            },
                            name = "getOffset",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x coordinate of the rotation offget.",
                                            descriptiont = {
                                                jp = "パーティクル画像においての描画支距の X 座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the rotation offget.",
                                            descriptiont = {
                                                jp = "パーティクル画像においての描画支距の Y 座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the life of the particles.",
                            descriptiont = {
                                jp = "パーティクルの活動限界時間を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの活動限界時間を取得します。"
                            },
                            name = "getParticleLifetime",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum life of the particles (seconds).",
                                            descriptiont = {
                                                jp = "パーティクルの最小活動限界時間 (秒単位)"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum life of the particles (seconds).",
                                            descriptiont = {
                                                jp = "パーティクルの最大活動限界時間 (秒単位)"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the series of Quads used for the particle sprites.",
                            descriptiont = {
                                jp = "パーティクル・スプライトに対して使用されている連続 Quad を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル・スプライトに対して使用されている連続 Quad を取得します。"
                            },
                            name = "getQuads",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A table containing the Quads used.",
                                            descriptiont = {
                                                jp = "使用されている Quad を有するテーブル。"
                                            },
                                            name = "quads",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the position of the emitter.",
                            descriptiont = {
                                jp = "エミッタの位置を取得します。"
                            },
                            minidescriptiont = {
                                jp = "エミッタの位置を取得します。"
                            },
                            name = "getPosition",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Position along x-axis.",
                                            descriptiont = {
                                                jp = "x-軸からの座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "Position along y-axis.",
                                            descriptiont = {
                                                jp = "y-軸からの座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the radial acceleration (away from the emitter).",
                            descriptiont = {
                                jp = "半径の加速度を取得します (エミッタから離れて別方向へ)。"
                            },
                            minidescriptiont = {
                                jp = "半径の加速度を取得します (エミッタから離れて別方向へ)。"
                            },
                            name = "getRadialAcceleration",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum acceleration.",
                                            descriptiont = {
                                                jp = "最小加速度。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum acceleration.",
                                            descriptiont = {
                                                jp = "最大加速度。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the rotation of the image upon particle creation (in radians).",
                            descriptiont = {
                                jp = "パーティクル作成後における画像の回転を取得します (弧度にて)。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル作成後における画像の回転を取得します (弧度にて)。"
                            },
                            name = "getRotation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum initial angle (radians).",
                                            descriptiont = {
                                                jp = "最小初期角度 (弧度)。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum initial angle (radians).",
                                            descriptiont = {
                                                jp = "最大初期角度 (弧度)。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a series of sizes by which to scale a particle sprite. 1.0 is normal size. The particle system will interpolate between each size evenly over the particle's lifetime.\n\nAt least one size must be specified. A maximum of eight may be used.",
                            descriptiont = {
                                jp = "スプライトの尺度変更における一連の大きさを取得します。 1.0 は通常の大きさです。パーティクルシステムはパーティクルの活動限界時間内は各々の大きさを均一に書き換え続けます。"
                            },
                            minidescriptiont = {
                                jp = "活動限界時間までのパーティクルの大きさを取得します。"
                            },
                            name = "getSizes",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The first size.",
                                            descriptiont = {
                                                jp = "一番目の大きさ。"
                                            },
                                            name = "size1",
                                            type = "number"
                                        },
                                        {
                                            description = "The second size.",
                                            descriptiont = {
                                                jp = "二番目の大きさ。"
                                            },
                                            name = "size2",
                                            type = "number"
                                        },
                                        {
                                            description = "Etc.",
                                            descriptiont = {
                                                jp = "八番目の大きさ。"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                            descriptiont = {
                                jp = "大きさの変動量を取得します(0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。"
                            },
                            minidescriptiont = {
                                jp = "大きさの変動量を取得します。"
                            },
                            name = "getSizeVariation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                                            descriptiont = {
                                                jp = "変動量 (0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。"
                                            },
                                            name = "variation",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the speed of the particles.",
                            descriptiont = {
                                jp = "パーティクルの速度を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの速度を取得します。"
                            },
                            name = "getSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum linear speed of the particles.",
                                            descriptiont = {
                                                jp = "パーティクルの最小線形速度。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum linear speed of the particles.",
                                            descriptiont = {
                                                jp = "パーティクルの最大線形速度。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the spin of the sprite.",
                            descriptiont = {
                                jp = "スプライトの回転を取得します。"
                            },
                            minidescriptiont = {
                                jp = "スプライトの回転を取得します。"
                            },
                            name = "getSpin",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum spin (radians per second).",
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum spin (radians per second).",
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                            descriptiont = {
                                jp = "回転の変動量を取得します (0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。"
                            },
                            minidescriptiont = {
                                jp = "回転の変動量を取得します。"
                            },
                            name = "getSpinVariation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                                            descriptiont = {
                                                jp = "変動量 (0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。"
                                            },
                                            name = "variation",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the amount of spread for the system.",
                            descriptiont = {
                                jp = "パーティクル・エミッタの方向展開量を取得します (弧度にて)。",
                                pt = "Obtém o ângulo de espalhamento do emissor de partículas (em radianos)."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・エミッタの方向展開量を取得します (弧度にて)。",
                                pt = "Obtém o ângulo de espalhamento do emissor de partículas (em radianos)."
                            },
                            name = "getSpread",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The amount of spread (radians).",
                                            descriptiont = {
                                                jp = "エミッタの展開量 (弧度にて)。",
                                                pt = "O espalhamento do emissor (em radianos)."
                                            },
                                            name = "spread",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the Image or Canvas which is to be emitted.",
                            descriptiont = {
                                jp = "パーティクルで使用されるテクスチャ (Image または Canvas) を取得します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルで使用されるテクスチャ (Image または Canvas) を取得します。"
                            },
                            name = "getTexture",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "An Image or Canvas to use for the particle.",
                                            descriptiont = {
                                                jp = "パーティクルで使用されるテクスチャ (Image または Canvas)。"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the tangential acceleration (acceleration perpendicular to the particle's direction).",
                            descriptiont = {
                                jp = "接線加速度を取得します (パーティクルの方向への垂直加速度)。"
                            },
                            minidescriptiont = {
                                jp = "接線加速度を取得します (パーティクルの方向への垂直加速度)。"
                            },
                            name = "getTangentialAcceleration",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The minimum acceleration.",
                                            descriptiont = {
                                                jp = "最小加速度。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum acceleration.",
                                            descriptiont = {
                                                jp = "最大加速度。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether particle angles and rotations are relative to their velocities. If enabled, particles are aligned to the angle of their velocities and rotate relative to that angle.",
                            descriptiont = {
                                jp = "パーティクルの角度および回転と速度を相対的にするかどうか取得します。有効時に、パーティクルは速度の角度および回転と相対的な角度により整列されます。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの角度および回転と速度を相対的にするかどうか取得します。"
                            },
                            name = "hasRelativeRotation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if relative particle rotation is enabled, false if it's disabled.",
                                            descriptiont = {
                                                jp = "true ならばパーティクルの相対的回転は有効であり、 false であれば無効です。"
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether the particle system is actively emitting particles.",
                            descriptiont = {
                                jp = "パーティクル・システムにおいてパーティクルの放射が機能しているかどうか確認します。",
                                pt = "Verifica se o sistema de partículas está emitindo partículas."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・システムにおいてパーティクルの放射が機能しているかどうか確認します。",
                                pt = "Verifica se o sistema de partículas está emitindo partículas."
                            },
                            name = "isActive",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if system is active, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならばシステムは機能しており、それ以外は false です。",
                                                pt = "True se o sistema está ativo, senão falso."
                                            },
                                            name = "active",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether the particle system is paused.",
                            descriptiont = {
                                jp = "パーティクル・システムが一時停止しているかどうか確認します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル・システムが一時停止しているかどうか確認します。"
                            },
                            name = "isPaused",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if system is paused, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならばシステムは一時停止しており、それ以外は false です。"
                                            },
                                            name = "paused",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether the particle system is stopped.",
                            descriptiont = {
                                jp = "パーティクル・システムが停止しているかどうか確認します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル・システムが停止しているかどうか確認します。"
                            },
                            name = "isStopped",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if system is stopped, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならばシステムは停止しており、それ以外は false です。"
                                            },
                                            name = "stopped",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Moves the position of the emitter. This results in smoother particle spawning behaviour than if ParticleSystem:setPosition is used every frame.",
                            descriptiont = {
                                jp = "エミッタの位置を移動します。この結果として ParticleSystem:setPosition をフレームごとに使用する場合の挙動よりパーティクルは円滑に生産されます。"
                            },
                            minidescriptiont = {
                                jp = "エミッタの位置を移動します。"
                            },
                            name = "moveTo",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Position along x-axis.",
                                            descriptiont = {
                                                jp = "x-軸からの座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "Position along y-axis.",
                                            descriptiont = {
                                                jp = "y-軸からの座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Pauses the particle emitter.",
                            descriptiont = {
                                jp = "パーティクル・エミッタの一時停止。",
                                pt = "Pausa o emissor de partículas."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・エミッタの一時停止。",
                                pt = "Pausa o emissor de partículas."
                            },
                            name = "pause",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Resets the particle emitter, removing any existing particles and resetting the lifetime counter.",
                            descriptiont = {
                                jp = "パーティクル・エミッタを初期状態に戻すために、既に存在するパーティクルの削除および活動限界時間カウンタを初期状態へ戻します。",
                                pt = "Reinicializa o emissor de partículas, removendo qualquer partícula existente e apagando o contador de tempo de vida."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・エミッタを初期状態に戻すために、既に存在するパーティクルの削除および活動限界時間カウンタを初期状態へ戻します。",
                                pt = "Reinicializa o emissor de partículas, removendo qualquer partícula existente e apagando o contador de tempo de vida."
                            },
                            name = "reset",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Sets area-based spawn parameters for the particles. Newly created particles will spawn in an area around the emitter based on the parameters to this function.",
                            descriptiont = {
                                jp = "パーティクルの領域に基づく生産引数を設定します。新規に作成されたパーティクルは、この関数への引数に基づきエミッタの周辺領域で生産されます。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの領域に基づく生産引数を設定します。"
                            },
                            name = "setAreaSpread",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The type of distribution for new particles.",
                                            descriptiont = {
                                                jp = "新規のパーティクルにおける分布の種類。"
                                            },
                                            name = "distribution",
                                            type = "AreaSpreadDistribution"
                                        },
                                        {
                                            description = "The maximum spawn distance from the emitter along the x-axis for uniform distribution, or the standard deviation along the x-axis for normal distribution.",
                                            descriptiont = {
                                                jp = "一様偏差によるX-軸のエミッタからの距離または標準偏差によるX-軸の正規分布を大量生産します。"
                                            },
                                            name = "dx",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum spawn distance from the emitter along the y-axis for uniform distribution, or the standard deviation along the y-axis for normal distribution.",
                                            descriptiont = {
                                                jp = "一様偏差によるY-軸のエミッタからの距離または標準偏差によるY-軸の正規分布を大量生産します。"
                                            },
                                            name = "dy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the size of the buffer (the max allowed amount of particles in the system).",
                            descriptiont = {
                                jp = "バッファの大きさを設定します(システムで利用可能なパーティクルの最大量)。",
                                pt = "Configura o tamanho do buffer (a quantidade máxima permitida de partículas no sistema)."
                            },
                            minidescriptiont = {
                                jp = "バッファの大きさを設定します(システムで利用可能なパーティクルの最大量)。",
                                pt = "Configura o tamanho do buffer (a quantidade máxima permitida de partículas no sistema)."
                            },
                            name = "setBufferSize",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The buffer size.",
                                            descriptiont = {
                                                jp = "バッファの大きさ。",
                                                pt = "O tamanho do buffer."
                                            },
                                            name = "buffer",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a series of colors to apply to the particle sprite. The particle system will interpolate between each color evenly over the particle's lifetime. Color modulation needs to be activated for this function to have any effect.\n\nArguments are passed in groups of four, representing the components of the desired RGBA value. At least one color must be specified. A maximum of eight may be used.",
                            descriptiont = {
                                jp = "パーティクルのスプライトへ適用する一連の色を設定します。パーティクルシステムはパーティクルの活動限界時間内は各色を均一に書き換え続けます。\n\nRGBA の四種類をまとめたものを引数として渡すことができ、使用したい RGA 成分値を表記したもの、または RGBA の成分値をテーブルとして表したものであり、三つだけ値を与えられた場合は標準の透過値は 255 になります。最低でも一色は必ず指定してください。最大八番目まで使用できます。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルのスプライトへ適用する一連の色を設定します。"
                            },
                            name = "setColors",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "First color, red component (0-255).",
                                            name = "r1",
                                            type = "number"
                                        },
                                        {
                                            description = "First color, green component (0-255).",
                                            name = "g1",
                                            type = "number"
                                        },
                                        {
                                            description = "First color, blue component (0-255).",
                                            name = "b1",
                                            type = "number"
                                        },
                                        {
                                            description = "First color, alpha component (0-255).",
                                            name = "a1",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, red component (0-255).",
                                            name = "r2",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, green component (0-255).",
                                            name = "g2",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, blue component (0-255).",
                                            name = "b2",
                                            type = "number"
                                        },
                                        {
                                            description = "Second color, alpha component (0-255).",
                                            name = "a2",
                                            type = "number"
                                        },
                                        {
                                            description = "Etc.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the direction the particles will be emitted in.",
                            descriptiont = {
                                jp = "パーティクルが放射される方向を設定します。",
                                pt = "Configura a direção em que as partículas serão emitidas."
                            },
                            minidescriptiont = {
                                jp = "パーティクルが放射される方向を設定します。",
                                pt = "Configura a direção em que as partículas serão emitidas."
                            },
                            name = "setDirection",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The direction of the particles (in radians).",
                                            descriptiont = {
                                                jp = "エミッタの方向 (弧度)",
                                                pt = "A direção das partículas (em radianos)."
                                            },
                                            name = "direction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the amount of particles emitted per second.",
                            descriptiont = {
                                jp = "毎秒当たりにおけるパーティクルの放射量を設定します。",
                                pt = "Configura a quantidade de partículas emitidas por segundo."
                            },
                            minidescriptiont = {
                                jp = "毎秒当たりにおけるパーティクルの放射量を設定します。",
                                pt = "Configura a quantidade de partículas emitidas por segundo."
                            },
                            name = "setEmissionRate",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The amount of particles per second.",
                                            descriptiont = {
                                                jp = "毎秒当たりにおけるパーティクルの放射量。",
                                                pt = "A quantidade de partículas por segundo."
                                            },
                                            name = "rate",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets how long the particle system should emit particles (if -1 then it emits particles forever).",
                            descriptiont = {
                                jp = "パーティクル・システムにおけるパーティクルの放射時間の長さを設定します ( -1 ならばパーティクルは永久に放射します)。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル・システムにおけるパーティクルの放射時間の長さを設定します。"
                            },
                            name = "setEmitterLifetime",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The lifetime of the emitter (in seconds).",
                                            descriptiont = {
                                                jp = "エミッタの活動限界時間 (秒単位)。"
                                            },
                                            name = "life",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the mode to use when the ParticleSystem adds new particles.",
                            descriptiont = {
                                jp = "新規のパーティクルを ParticleSystem へ追加するときに使用する方式を設定します。"
                            },
                            minidescriptiont = {
                                jp = "新規のパーティクルを ParticleSystem へ追加するときに使用する方式を設定します。"
                            },
                            name = "setInsertMode",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The mode to use when the ParticleSystem adds new particles.",
                                            descriptiont = {
                                                jp = "新規のパーティクルを ParticleSystem へ追加するときに使用する方式。"
                                            },
                                            name = "mode",
                                            type = "ParticleInsertMode"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the linear acceleration (acceleration along the x and y axes) for particles.\n\nEvery particle created will accelerate along the x and y axes between xmin,ymin and xmax,ymax.",
                            descriptiont = {
                                jp = "パーティクルにおける線形加速度 (X および Y 軸からの加速度)を設定します。\n\n作成されたパーティクルごとに X および Y 軸から xmin,ymin および xmax,ymax との間の加速度があります。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルにおける線形加速度 (X および Y 軸からの加速度)を設定します。"
                            },
                            name = "setLinearAcceleration",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum acceleration along the x axis.",
                                            descriptiont = {
                                                jp = "X 軸からの最小加速度。"
                                            },
                                            name = "xmin",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The minimum acceleration along the y axis.",
                                            descriptiont = {
                                                jp = "Y 軸からの最小加速度。"
                                            },
                                            name = "ymin",
                                            type = "number"
                                        },
                                        {
                                            default = "xmin",
                                            description = "The maximum acceleration along the x axis.",
                                            descriptiont = {
                                                jp = "X 軸からの最大加速度。"
                                            },
                                            name = "xmax",
                                            type = "number"
                                        },
                                        {
                                            default = "ymin",
                                            description = "The maximum acceleration along the y axis.",
                                            descriptiont = {
                                                jp = "Y 軸からの最大加速度。"
                                            },
                                            name = "ymax",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the amount of linear damping (constant deceleration) for particles.",
                            descriptiont = {
                                jp = "パーティクルに対する線形減衰 (定数減速) 量を設定します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルに対する線形減衰 (定数減速) 量を設定します。"
                            },
                            name = "setLinearDamping",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum amount of linear damping applied to particles.",
                                            descriptiont = {
                                                jp = "パーティクルに適用されている線形減衰の最小量。"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum amount of linear damping applied to particles.",
                                            descriptiont = {
                                                jp = "パーティクルに適用されている線形減衰の最大量。"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the offset position which the particle sprite is rotated around. If this function is not used, the particles rotate around their center.",
                            descriptiont = {
                                jp = "パーティクルのスプライトが回転する支距の位置を設定します。\n\nこの関数を使用しない場合は、パーティクルは中心の周囲を回転します。",
                                pt = "Configura o deslocamento da posição em que a entidade gráfica da partícula será rotacionada em volta.\n\nSe esta função não for usada, as partículas de girar em torno de seu centro."
                            },
                            minidescriptiont = {
                                jp = "パーティクルのスプライトが回転する支距の位置を設定します。",
                                pt = "Configura o deslocamento da posição em que a entidade gráfica da partícula será rotacionada em volta."
                            },
                            name = "setOffset",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x coordinate of the rotation offset.",
                                            descriptiont = {
                                                jp = "X 座標の回転支距。",
                                                pt = "A coordenada x do deslocamento de rotação."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the rotation offset.",
                                            descriptiont = {
                                                jp = "Y 座標の回転支距。",
                                                pt = "A coordenada y do deslocamento de rotação."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the life of the particles.",
                            descriptiont = {
                                jp = "パーティクルの活動限界時間を設定します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの活動限界時間を設定します。"
                            },
                            name = "setParticleLifetime",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum life of the particles (seconds).",
                                            descriptiont = {
                                                jp = "パーティクルの最小活動限界時間 (秒単位)"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum life of the particles (seconds).",
                                            descriptiont = {
                                                jp = "パーティクルの最大活動限界時間 (秒単位)"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the position of the emitter.",
                            descriptiont = {
                                jp = "エミッタの位置を取得します。",
                                pt = "Configura a posição do emissor."
                            },
                            minidescriptiont = {
                                jp = "エミッタの位置を取得します。",
                                pt = "Configura a posição do emissor."
                            },
                            name = "setPosition",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Position along x-axis.",
                                            descriptiont = {
                                                jp = "x-軸からの座標。",
                                                pt = "Posição ao longo do eixo x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "Position along y-axis.",
                                            descriptiont = {
                                                jp = "y-軸からの座標。",
                                                pt = "Posição ao longo do eixo y."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a series of Quads to use for the particle sprites. Particles will choose a Quad from the list based on the particle's current lifetime, allowing for the use of animated sprite sheets with ParticleSystems.",
                            descriptiont = {
                                jp = "パーティクル・スプライトに対して使用する連続 Quad を設定します。パーティクルはパーティクルの現在の活動限界に基づいた一覧から Quad の選択を行うことで、 ParticleSystems にあるアニメーションされたスプライト・シートの使用を可能にします。"
                            },
                            minidescriptiont = {
                                jp = "パーティクル・スプライトに対して使用する連続 Quad を設定します。"
                            },
                            name = "setQuads",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The first Quad to use.",
                                            descriptiont = {
                                                jp = "一番目に使用する Quad"
                                            },
                                            name = "quad1",
                                            type = "Quad"
                                        },
                                        {
                                            description = "The second Quad to use.",
                                            descriptiont = {
                                                jp = "二番目に使用する Quad"
                                            },
                                            name = "quad2",
                                            type = "Quad"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A table containing the Quads to use.",
                                            descriptiont = {
                                                jp = "使用対象の Quad を有するテーブル。"
                                            },
                                            name = "quads",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the radial acceleration (away from the emitter).",
                            descriptiont = {
                                jp = "半径の加速度を設定します (エミッタから離れて別方向へ)。",
                                pt = "Configura a aceleração radial (afastando-se do emissor)."
                            },
                            minidescriptiont = {
                                jp = "半径の加速度を設定します (エミッタから離れて別方向へ)。",
                                pt = "Configura a aceleração radial (afastando-se do emissor)."
                            },
                            name = "setRadialAcceleration",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum acceleration.",
                                            descriptiont = {
                                                jp = "最小加速度。",
                                                pt = "Aceleração mínima."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum acceleration.",
                                            descriptiont = {
                                                jp = "最大加速度。",
                                                pt = "Aceleração máxima."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets whether particle angles and rotations are relative to their velocities. If enabled, particles are aligned to the angle of their velocities and rotate relative to that angle.",
                            descriptiont = {
                                jp = "パーティクルの角度および回転と速度を相対的にするかどうか設定します。有効時に、パーティクルは速度の角度および回転と相対的な角度により整列されます。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルの角度および回転と速度を相対的にするかどうか設定します。"
                            },
                            name = "setRelativeRotation",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True to enable relative particle rotation, false to disable it.",
                                            descriptiont = {
                                                jp = "true ならばパーティクルの相対的回転は有効であり、 false であれば無効です。"
                                            },
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the rotation of the image upon particle creation (in radians).",
                            descriptiont = {
                                jp = "パーティクル作成後の画像の回転を設定します (弧度にて)。",
                                pt = "Configura a rotação da imagem em consequência da criação da partícula (em radianos)."
                            },
                            minidescriptiont = {
                                jp = "パーティクル作成後の画像の回転を設定します (弧度にて)。",
                                pt = "Configura a rotação da imagem em consequência da criação da partícula (em radianos)."
                            },
                            name = "setRotation",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum initial angle (radians).",
                                            descriptiont = {
                                                jp = "最小初期角度 (弧度)。",
                                                pt = "O ângulo inicial mínimo (em radianos)."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum initial angle (radians).",
                                            descriptiont = {
                                                jp = "最大初期角度 (弧度)。",
                                                pt = "O ângulo inicial máximo (em radianos)."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a series of sizes by which to scale a particle sprite. 1.0 is normal size. The particle system will interpolate between each size evenly over the particle's lifetime.\n\nAt least one size must be specified. A maximum of eight may be used.",
                            descriptiont = {
                                jp = "スプライトの尺度変更における一連の大きさを設定します。 1.0 は通常の大きさです。パーティクルシステムはパーティクルの活動限界時間内は各々の大きさを均一に書き換え続けます。\n\n最低でも大きさとして必ず一つ指定してください。最大八番目まで使用できます。"
                            },
                            minidescriptiont = {
                                jp = "スプライトの尺度変更における一連の大きさを設定します。"
                            },
                            name = "setSizes",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The first size.",
                                            descriptiont = {
                                                jp = "一番目の大きさ。"
                                            },
                                            name = "size1",
                                            type = "number"
                                        },
                                        {
                                            description = "The second size.",
                                            descriptiont = {
                                                jp = "二番目の大きさ。"
                                            },
                                            name = "size2",
                                            type = "number"
                                        },
                                        {
                                            description = "Etc.",
                                            descriptiont = {
                                                jp = "八番目の大きさ。"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                            descriptiont = {
                                jp = "大きさの変動量を設定します(0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。",
                                pt = "Configura o grau de variação (0 significa que não haverá variação e 1 significa variação completa entre o início e o final)."
                            },
                            minidescriptiont = {
                                jp = "大きさの変動量を設定します。",
                                pt = "Configura o grau de variação (0 significa que não haverá variação e 1 significa variação completa entre o início e o final)."
                            },
                            name = "setSizeVariation",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                                            descriptiont = {
                                                jp = "変動量 (0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。",
                                                pt = "O grau de variação (0 significa que não haverá variação e 1 significa variação completa entre o início e o final)."
                                            },
                                            name = "variation",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the speed of the particles.",
                            descriptiont = {
                                jp = "パーティクルの速度を設定します。",
                                pt = "Configura a velocidade das partículas."
                            },
                            minidescriptiont = {
                                jp = "パーティクルの速度を設定します。",
                                pt = "Configura a velocidade das partículas."
                            },
                            name = "setSpeed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum linear speed of the particles.",
                                            descriptiont = {
                                                jp = "パーティクルの最小線形速度。",
                                                pt = "O linear mínimo da velocidade das partículas."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum linear speed of the particles.",
                                            descriptiont = {
                                                jp = "パーティクルの最大線形速度。",
                                                pt = "O linear máximo da velocidade das partículas."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the spin of the sprite.",
                            descriptiont = {
                                jp = "スプライトの回転を設定します。",
                                pt = "Configura a rotação de uma entidade gráfica."
                            },
                            minidescriptiont = {
                                jp = "スプライトの回転を設定します。",
                                pt = "Configura a rotação de uma entidade gráfica."
                            },
                            name = "setSpin",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum spin (radians per second).",
                                            descriptiont = {
                                                jp = "最小回転数 (一秒あたりの弧度)"
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum spin (radians per second).",
                                            descriptiont = {
                                                jp = "最大回転数 (一秒あたりの弧度)"
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                            descriptiont = {
                                jp = "回転の変動量を設定します(0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。",
                                pt = "Configura o grau de variação (0 significa que não haverá variação e 1 significa variação completa entre o início e o final)."
                            },
                            minidescriptiont = {
                                jp = "回転の変動量を設定します。",
                                pt = "Configura o grau de variação (0 significa que não haverá variação e 1 significa variação completa entre o início e o final)."
                            },
                            name = "setSpinVariation",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The degree of variation (0 meaning no variation and 1 meaning full variation between start and end).",
                                            descriptiont = {
                                                jp = "変動量 (0 であれば無変動であり 1 であれば開始から終了の間まで完全に変動します)。",
                                                pt = "O grau de variação (0 significa que não haverá variação e 1 significa variação completa entre o início e o final)."
                                            },
                                            name = "variation",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the amount of spread for the system.",
                            descriptiont = {
                                jp = "システムにおける展開量を設定します。",
                                pt = "Configura a quantidade de espalhamento para o sistema."
                            },
                            minidescriptiont = {
                                jp = "システムにおける展開量を設定します。",
                                pt = "Configura a quantidade de espalhamento para o sistema."
                            },
                            name = "setSpread",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The amount of spread (radians).",
                                            descriptiont = {
                                                jp = "展開量 (弧度)",
                                                pt = "A quantidade de espalhamento (em radianos)."
                                            },
                                            name = "spread",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the Image or Canvas which is to be emitted.",
                            descriptiont = {
                                jp = "パーティクルで使用されるテクスチャ (Image または Canvas) を設定します。"
                            },
                            minidescriptiont = {
                                jp = "パーティクルで使用されるテクスチャ (Image または Canvas) を設定します。"
                            },
                            name = "setTexture",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "An Image or Canvas to use for the particle.",
                                            descriptiont = {
                                                jp = "パーティクルで使用されるテクスチャ (Image または Canvas)。"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the tangential acceleration (acceleration perpendicular to the particle's direction).",
                            descriptiont = {
                                jp = "接線加速度を設定します (パーティクルの方向への垂直加速度)。",
                                pt = "Configura a aceleração tangencial (aceleração perpendicular à direção da partícula)."
                            },
                            minidescriptiont = {
                                jp = "接線加速度を設定します (パーティクルの方向への垂直加速度)。",
                                pt = "Configura a aceleração tangencial (aceleração perpendicular à direção da partícula)."
                            },
                            name = "setTangentialAcceleration",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The minimum acceleration.",
                                            descriptiont = {
                                                jp = "最小加速度。",
                                                pt = "A aceleração mínima."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            default = "min",
                                            description = "The maximum acceleration.",
                                            descriptiont = {
                                                jp = "最大加速度。",
                                                pt = "A aceleração máxima."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Starts the particle emitter.",
                            descriptiont = {
                                jp = "パーティクル・エミッタを開始します。",
                                pt = "Inicia o emissor de partículas."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・エミッタを開始します。",
                                pt = "Inicia o emissor de partículas."
                            },
                            name = "start",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Stops the particle emitter, resetting the lifetime counter.",
                            descriptiont = {
                                jp = "パーティクル・エミッタを停止して、活動限界時間カウンタを初期設定へ戻します。",
                                pt = "Para o emissor de partículas, reconfigurando o contador de tempo de vida."
                            },
                            minidescriptiont = {
                                jp = "\nパーティクル・エミッタを停止して、活動限界時間カウンタを初期設定へ戻します。",
                                pt = "Para o emissor de partículas, reconfigurando o contador de tempo de vida."
                            },
                            name = "stop",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Updates the particle system; moving, creating and killing particles.",
                            descriptiont = {
                                jp = "パーティクル・システムの更新。パーティクルの移動、作成および破壊。",
                                pt = "Atualiza o sistema de partículas; movendo, criando e matando partículas."
                            },
                            minidescriptiont = {
                                jp = "パーティクル・システムの更新。パーティクルの移動、作成および破壊。",
                                pt = "Atualiza o sistema de partículas; movendo, criando e matando partículas."
                            },
                            name = "update",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The time (seconds) since last frame.",
                                            descriptiont = {
                                                jp = "最後のフレームからの時間 (秒単位)。",
                                                pt = "O tempo (em segundos) desde o quadro anterior."
                                            },
                                            name = "dt",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Usado para criar efeitos legais, como fogo."
                    },
                    name = "ParticleSystem",
                    parenttype = "Drawable",
                    supertypes = {
                        "Drawable",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newQuad"
                    },
                    description = "A quadrilateral (a polygon with four sides and four corners) with texture coordinate information.\n\nQuads can be used to select part of a texture to draw. In this way, one large texture atlas can be loaded, and then split up into sub-images.",
                    descriptiont = {
                        de = "Ein Viereck (ein Polygon mit vier Seiten und vier Ecken) mit Texturkoordinaten.\n\nEin Quad kann dazu genutzt werden, nur einen bestimmten Teil einer Textur zu zeichnen. Auf diesem Weg, kann ein großer \n\nTexturen-Atlas geladen werden und schließlich durch Quads in kleinere Unterbilder aufgeteilt werden.",
                        jp = "テクスチャの座標情報を持つ四辺形 (四辺と四角がある多角形)。\n\nQuad はテクスチャの一部を選択して描画をするために使用できます。この方法では、一枚のテクスチャ・アトラス (テクスチャの見本集または地図帳) を読み込んでから、副・画像へ分割できます。",
                        pt = "Um quadrilátero com informações coordenadas de textura.",
                        ru = "Текстурный прямоугольник с информацией о текстурных координатах.\n\nТекстурные прямоугольники можно использовать, чтобы выбрать, какую часть текстуры отрисовывать. Таким образом, можно загрузить один большой «атлас текстур» и, затем, делить его на фрагменты."
                    },
                    functions = {
                        {
                            description = "Gets reference texture dimensions initially specified in love.graphics.newQuad.",
                            descriptiont = {
                                jp = "love.graphics.newQuad で初期指定された基準テクスチャ寸法の取得します。"
                            },
                            minidescriptiont = {
                                jp = "love.graphics.newQuad で初期指定された基準テクスチャ寸法の取得します。"
                            },
                            name = "getTextureDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Texture width used by the Quad.",
                                            descriptiont = {
                                                jp = "Quad で使用されるテクスチャの幅。"
                                            },
                                            name = "sw",
                                            type = "number"
                                        },
                                        {
                                            description = "The Texture height used by the Quad.",
                                            descriptiont = {
                                                jp = "Quad で使用されるテクスチャの高さ。"
                                            },
                                            name = "sh",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the current viewport of this Quad.",
                            descriptiont = {
                                de = "Gibt das Ansichtsfenster zurück.",
                                jp = "この Quad における現在の表示領域 (Viewport: ビューポート) を取得します。",
                                pt = "Obtém a atual janela de visão do Quad.",
                                ru = "Возвращает текущее поле вывода для данного текстурного прямоугольника."
                            },
                            minidescriptiont = {
                                de = "Gibt das Ansichtsfenster zurück.",
                                jp = "この Quad における現在の表示領域 (Viewport) を取得します。",
                                pt = "Obtém a atual janela de visão do Quad.",
                                ru = "Возвращает текущее поле вывода для данного текстурного прямоугольника."
                            },
                            name = "getViewport",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The top-left corner along the x-axis.",
                                            descriptiont = {
                                                de = "Die obere linke Ecke entlang der x-Achse.",
                                                jp = "左上端からの x-軸。",
                                                pt = "O canto esquerdo superior no eixo x.",
                                                ru = "Абсцисса верхнего левого угла."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The top-right corner along the y-axis.",
                                            descriptiont = {
                                                de = "Die obere rechte Ecke entlang der y-Achse.",
                                                jp = "右上端からの x-軸。",
                                                pt = "O canto direito superior no eixo y.",
                                                ru = "Ордината правого верхнего угла."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The width of the viewport.",
                                            descriptiont = {
                                                de = "Die Breite des Fensters.",
                                                jp = "表示領域の幅。",
                                                pt = "A largura da janela de visão.",
                                                ru = "Ширина поля вывода."
                                            },
                                            name = "w",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the viewport.",
                                            descriptiont = {
                                                de = "Die Höhe des Fensters.",
                                                jp = "表示領域の高さ。",
                                                pt = "A altura da janela de visão.",
                                                ru = "Высота поля вывода."
                                            },
                                            name = "h",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the texture coordinates according to a viewport.",
                            descriptiont = {
                                de = "Bestimmt die Texturkoordinaten anhand eines bestimmten Ansichtsfensters.",
                                jp = "表示領域 (Viewport) と合致するテクスチャの座標を設定します。",
                                pt = "Configura as coordenadas de textura de uma janela de visão.",
                                ru = "Задаёт текстурные координаты согласно полю вывода."
                            },
                            minidescriptiont = {
                                de = "Bestimmt die Texturkoordinaten anhand eines bestimmten Ansichtsfensters.",
                                jp = "表示領域 (Viewport) と合致するテクスチャの座標を設定します。",
                                pt = "Configura as coordenadas de textura de uma janela de visão.",
                                ru = "Задаёт текстурные координаты согласно полю вывода."
                            },
                            name = "setViewport",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The top-left corner along the x-axis.",
                                            descriptiont = {
                                                de = "Die obere linke Ecke entlang der x-Achse.",
                                                jp = "左上端からの x-軸。",
                                                pt = "O canto esquerdo superior no eixo x.",
                                                ru = "Абсцисса верхнего левого угла."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The top-right corner along the y-axis.",
                                            descriptiont = {
                                                de = "Die obere rechte Ecke entlang der y-Achse.",
                                                jp = "右上端からの x-軸。",
                                                pt = "O canto direito superior no eixo y.",
                                                ru = "Ордината правого верхнего угла."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The width of the viewport.",
                                            descriptiont = {
                                                de = "Die Breite des Fensters.",
                                                jp = "表示領域の幅。",
                                                pt = "A largura da janela de visão.",
                                                ru = "Ширина поля вывода."
                                            },
                                            name = "w",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the viewport.",
                                            descriptiont = {
                                                de = "Die Höhe des Fensters.",
                                                jp = "表示領域の高さ。",
                                                pt = "A altura da janela de visão.",
                                                ru = "Высота поля вывода."
                                            },
                                            name = "h",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Um quadrilátero com informações coordenadas de textura."
                    },
                    name = "Quad",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newShader"
                    },
                    description = "A Shader is used for advanced hardware-accelerated pixel or vertex manipulation. These effects are written in a language based on GLSL (OpenGL Shading Language) with a few things simplified for easier coding.\n\nPotential uses for shaders include HDR/bloom, motion blur, grayscale/invert/sepia/any kind of color effect, reflection/refraction, distortions, bump mapping, and much more! Here is a collection of basic shaders and good starting point to learn: https://github.com/vrld/shine",
                    descriptiont = {
                        de = "Ein Shader wird für fortgeschrittene hardware-beschleunigte Pixel oder Vertex Manipulationen genutzt.\n\nDiese Effekte werden in einer Sprache geschrieben, welche auf der OpenGL Shading Language (GLSL) basiert. \n\nDie Anwendungsmöglichkeiten von Shadern sind beinahe unbegrenzt. So sind zum Beispiel HDR/bloom, Bewegungsunschärfe, Schwarz/Weiß, Reflektionen, Bump Mapping und Lichteffekte nur einige wenige Anwendungsbereiche. ",
                        jp = "Shader は高度なハードウェア高速化によるピクセルまたは頂点の操作にて使用されます。これらのエフェクトは容易にコーディングするために若干簡素化された GLSL (Open'''GL''' '''S'''hading '''L'''anguage) 言語に基づいたもので記述されます。\n\nShader は HDR/ブルームを含む、モーション・ブラー、グレースケール/反転/セピア/あらゆるの種類の彩色エフェクト、反射/屈折、歪み、バンプ・マッピング、およびその他多種多様なものへ使用できる潜在能力があります！  こちらは基本的なシェーダと学習を始めるには良い出発点となる教材集があります: https://github.com/vrld/shine"
                    },
                    functions = {
                        {
                            description = "Gets information about an 'extern' ('uniform') variable in the shader.",
                            descriptiont = {
                                jp = "シェーダーに存在する 'extern' ('uniform') 変数に関する情報を取得します。\n\nシェーダーに変数名が存在しない、またはビデオドライバーのシェーダー・コンパイラにより変数が影響を与えないことを決定した場合は nil を返します。"
                            },
                            minidescriptiont = {
                                jp = "シェーダーに存在する 'extern' ('uniform') 変数に関する情報を取得します。"
                            },
                            name = "getExternVariable",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The name of the extern variable.",
                                            descriptiont = {
                                                jp = "extern 変数の名前。"
                                            },
                                            name = "name",
                                            type = "string"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The base type of the variable.",
                                            descriptiont = {
                                                jp = "変数の基底型。"
                                            },
                                            name = "type",
                                            type = "ShaderVariableType"
                                        },
                                        {
                                            description = "The number of components in the variable (e.g. 2 for a vec2 or mat2.)",
                                            descriptiont = {
                                                jp = "変数にある要素数 (例えば 2 に対しては vec2 または mat2)。"
                                            },
                                            name = "components",
                                            type = "number"
                                        },
                                        {
                                            description = "The number of elements in the array if the variable is an array, or 1 if not.",
                                            descriptiont = {
                                                jp = "変数の種類が配列であれば配列にある要素数であり、それ以外は 1 です。"
                                            },
                                            name = "arrayelements",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns any warning and error messages from compiling the shader code. This can be used for debugging your shaders if there's anything the graphics hardware doesn't like.",
                            descriptiont = {
                                jp = "シェーダーのコードからあらゆる警告およびエラーメッセージを返します。これはグラフィックス・ハードウェアが原因ではない何らかの不具合がある場合に作成したシェーダーのデバッグにて使用できます。"
                            },
                            minidescriptiont = {
                                jp = "シェーダーのコードから警告およびエラーメッセージを取得します (もしあれば)。"
                            },
                            name = "getWarnings",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Warning messages (if any).",
                                            descriptiont = {
                                                jp = "警告およびエラーメッセージ (もしあれば)。"
                                            },
                                            name = "warnings",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sends one or more values to a special (uniform) variable inside the shader. Uniform variables have to be marked using the uniform or extern keyword.",
                            descriptiont = {
                                jp = "シェーダーの内部にある特別な変数 (''uniform'') へ一つ以上の値を送信します。Uniform 変数は  ''uniform'' または ''extern'' キーワードを使用して区分する必要があります。例えば、\n\n&lt;source lang=\"glsl\"&gt;\n\nuniform float time;  // \"float\" は GLSL シェーダーで使用される数値型です。\n\nuniform float varsvec2 light_pos;\n\nuniform vec4 colors[4;\n\n&lt;/source&gt;\n\n相当する send 呼び出しは\n\n&lt;source lang=\"lua\"&gt;\n\nshader:send(\"time\", t)\n\nshader:send(\"vars\",a,b)\n\nshader:send(\"light_pos\", {light_x, light_y})\n\nshader:send(\"colors\", {r1, g1, b1, a1},  {r2, g2, b2, a2},  {r3, g3, b3, a3},  {r4, g4, b4, a4})\n\n&lt;/source&gt;\n\nUniform / extern 変数はシェーダのコード側では読み取り専用であり、 Shader:send の呼び出しにより変更されるまで不変です。変数が各々で宣言されている場合に限り、シェーダーの頂点およびピクセルの両方にある要素の Uniform 変数へアクセスできます。"
                            },
                            minidescriptiont = {
                                jp = "一つ以上の値をシェーダーへ送信します。"
                            },
                            name = "send",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Name of the number to send to the shader.",
                                            descriptiont = {
                                                jp = "シェーダーへ送信する number の名前。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "Number to send to store in the uniform variable.",
                                            descriptiont = {
                                                jp = "uniform 変数へ格納するために送信する number"
                                            },
                                            name = "number",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional numbers to send if the uniform variable is an array.",
                                            descriptiont = {
                                                jp = "uniform 変数が配列である場合に送信する追加の number"
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "Name of the vector to send to the shader.",
                                            descriptiont = {
                                                jp = "シェーダーへ送信するベクトルの名前。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "Numbers to send to the uniform variable as a vector. The number of elements in the table determines the type of the vector (e.g. two numbers -> vec2). At least two and at most four numbers can be used.",
                                            descriptiont = {
                                                jp = "ベクトルとして uniform 変数へ格納するために送信する number です。テーブルにある要素数でベクトルの種類を決定します (例えば、数値が二つであれば -&gt; vec2)。最低２つおよび最高４つまでの数値を使用できます。"
                                            },
                                            name = "vector",
                                            type = "table"
                                        },
                                        {
                                            description = "Additional vectors to send if the uniform variable is an array. All vectors need to be of the same size (e.g. only vec3's).",
                                            descriptiont = {
                                                jp = "uniform 変数が配列である場合に送信する追加のベクトル。ベクトルの大きさは全て同一である必要があります (例えば、 vec3 のものだけ)。"
                                            },
                                            name = "...",
                                            type = "table"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "Name of the matrix to send to the shader.",
                                            descriptiont = {
                                                jp = "シェーダーへ送信するベクトルの名前。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "2x2, 3x3, or 4x4 matrix to send to the uniform variable. Using table form: {{a,b,c,d}, {e,f,g,h}, ... }.",
                                            descriptiont = {
                                                jp = "ベクトルとして uniform 変数へ格納するために送信する number です。テーブルにある要素数でベクトルの種類を決定します (例えば、数値が二つであれば -&gt; vec2)。最低２つおよび最高４つまでの数値を使用できます。"
                                            },
                                            name = "matrix",
                                            type = "table"
                                        },
                                        {
                                            description = "Additional matrices of the same type as matrix to store in a uniform array.",
                                            descriptiont = {
                                                jp = "uniform 変数が配列である場合に送信する追加のベクトル。ベクトルの大きさは全て同一である必要があります (例えば、 vec3 のものだけ)。"
                                            },
                                            name = "...",
                                            type = "table"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "Name of the Texture to send to the shader.",
                                            descriptiont = {
                                                jp = "シェーダーへ送信する Texture の名前。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "Texture (Image or Canvas) to send to the uniform variable.",
                                            descriptiont = {
                                                jp = "uniform 変数へ送信するテクスチャ (Image または Canvas)"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "Name of the boolean to send to the shader.",
                                            descriptiont = {
                                                jp = "シェーダーへ送信する Boolean の名前。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "Boolean to send to store in the uniform variable.",
                                            descriptiont = {
                                                jp = "uniform 変数へ送信する Boolean です。"
                                            },
                                            name = "boolean",
                                            type = "boolean"
                                        },
                                        {
                                            description = "Additional booleans to send if the uniform variable is an array.",
                                            descriptiont = {
                                                jp = "uniform 変数が配列である場合に送信する追加の Boolean です。"
                                            },
                                            name = "...",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sends one or more colors to a special (extern / uniform) vec3 or vec4 variable inside the shader. The color components must be in the range of [0, 255], unlike Shader:send. The colors are gamma-corrected if global gamma-correction is enabled.",
                            descriptiont = {
                                jp = "シェーダに存在する特別な (''extern'' / ''uniform'') vec3 または vec4 変数へ１つ以上の色を送信します。Shader:send と異なり、色の要素は 255 の範囲内にする必要があります。大域ガンマ補正が有効な場合は、色に対してガンマ補正処理を行います。\n\n外部変数は ''extern'' キーワードを使用して識別する必要があります。例えば、\n\n&lt;source lang=\"glsl\"&gt;\n\nextern vec4 Color;\n\n&lt;/source&gt;\n\n対応する sendColor 呼び出しは、\n\n&lt;source lang=\"lua\"&gt;\n\nshader:sendColor(\"Color\", {r, g, b, a})\n\n&lt;/source&gt;\n\n各変数が宣言されている限り、 外部変数は頂点およびピクセル(画素)シェーダの段階で両方ともアクセスすることができます。"
                            },
                            minidescriptiont = {
                                jp = "シェーダーへ１つ以上の色を送信します"
                            },
                            name = "sendColor",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The name of the color extern variable to send to in the shader.",
                                            descriptiont = {
                                                jp = "シェーダへ送信を行う色の外部変数名。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "A table with red, green, blue, and optional alpha color components in the range of [0, 255] to send to the extern as a vector.",
                                            descriptiont = {
                                                jp = "ベクターとして extern へ送信するために 255 の範囲内から成る赤、緑、青、および選択制の透過色要素を有するテーブル。"
                                            },
                                            name = "color",
                                            type = "table"
                                        },
                                        {
                                            description = "Additional colors to send in case the extern is an array. All colors need to be of the same size (e.g. only vec3's).",
                                            descriptiont = {
                                                jp = "extern が配列の場合に送信を行う追加の色。全ての色は同じ大きさ (例えば vec3 のみ)である必要があります。"
                                            },
                                            name = "...",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Shader",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newSpriteBatch"
                    },
                    description = "Using a single image, draw any number of identical copies of the image using a single call to love.graphics.draw. This can be used, for example, to draw repeating copies of a single background image.\n\nA SpriteBatch can be even more useful when the underlying image is a Texture Atlas (a single image file containing many independent images); by adding Quad to the batch, different sub-images from within the atlas can be drawn.",
                    descriptiont = {
                        de = "Mit Hilfe eines SpriteBatch können beliebig viele Kopien eines Bildes mit einem einzigen Aufruf von love.graphics.draw auf den Bildschirm gezeichnet werden. Hierdurch kann zum Beispiel ein sich ständig wiederholendes Hintergrundbild mit hoher Performanz gezeichnet werden.\n\nEin SpriteBatch ist sogar noch nützlicher, wenn sich der zu zeichnende Sprite in einem Texturatlas befindet. Durch das Hinzufügen von Quads zu einem SpriteBatch, können verschiedene Teile dieses Atlas zum Zeichnen benutzt werden.",
                        jp = "一枚の画像を用いて、 love.graphics.draw() の呼び出しを一回使用することにより任意数の同一内容の複製を描画します。これは、例えば、高性能で一枚の背景画像の複製を繰り返して描画するために使用できます。\n\n画像としてテクスチャ・アトラス (一枚の画像ファイルに独立した複数の画像が存在する地図や図表のようなもの) である場合は SpriteBatch はより有用になります。 Quad をバッチへ追加することにより、アトラスから様々な副-画像を描画できます。",
                        pt = "Armazena uma geometria em um buffer e desenha em uma única chamada.",
                        ru = "Накопление геометрии в буфере, которая может быть нарисована за один вызов."
                    },
                    functions = {
                        {
                            description = "Add a sprite to the batch.",
                            descriptiont = {
                                de = "Fügt einen Sprite zum SpriteBatch hinzu. Sprites werden in der Reihenfolge auf den Bildschirm gezeichnet, in der sie zum SpriteBatch hinzugefügt wurden.",
                                jp = "スプライトをバッチへ追加します。スプライトは追加された順番にて描画されます。",
                                pt = "Adiciona uma entidade gráfica ao lote."
                            },
                            minidescriptiont = {
                                de = "Fügt einen Sprite zum SpriteBatch hinzu.",
                                jp = "スプライトをバッチへ追加します。",
                                pt = "Adiciona uma entidade gráfica ao lote."
                            },
                            name = "add",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The position to draw the object (x-axis).",
                                            descriptiont = {
                                                de = "Die Position des Sprites auf der x-Achse.",
                                                jp = "オブジェクトを描画する座標 (x-軸)。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position to draw the object (y-axis).",
                                            descriptiont = {
                                                de = "Die Position des Sprites auf der y-Achse.",
                                                jp = "オブジェクトを描画する座標 (y-軸)。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Orientation (radians).",
                                            descriptiont = {
                                                de = "Die Ausrichtung in Radianten.",
                                                jp = "方向 (弧度)。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor (x-axis).",
                                            descriptiont = {
                                                de = "Der Skalierungsfaktor in x-Richtung.",
                                                jp = "尺度変更係数 (x-軸)。"
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor (y-axis).",
                                            descriptiont = {
                                                de = "Der Skalierungsfaktor in y-Richtung.",
                                                jp = "尺度変更係数 (y-軸)。"
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (x-axis).",
                                            descriptiont = {
                                                de = "Die Verschiebung von den Ursprungskoordinaten auf der x-Achse.",
                                                jp = "原点の支距 (x-軸)。"
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (y-axis).",
                                            descriptiont = {
                                                de = "Die Verschiebung von den Ursprungskoordinaten auf der y-Achse.",
                                                jp = "原点の支距 (y-軸)。"
                                            },
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (x-axis).",
                                            descriptiont = {
                                                de = "Der Scherfaktor in x-Richtung.",
                                                jp = "剪断係数 (x-軸)。"
                                            },
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (y-axis).",
                                            descriptiont = {
                                                de = "Der Scherfaktor in y-Richtung.",
                                                jp = "剪断係数 (y-軸)。"
                                            },
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "An identifier for the added sprite.",
                                            descriptiont = {
                                                de = "An identifier for the added sprite.",
                                                jp = "追加されたスプライトの識別子。"
                                            },
                                            name = "id",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The Quad to add.",
                                            descriptiont = {
                                                de = "Das Quad welches hinzugefügt werden soll.",
                                                jp = "Quad を追加します。"
                                            },
                                            name = "quad",
                                            type = "Quad"
                                        },
                                        {
                                            description = "The position to draw the object (x-axis).",
                                            descriptiont = {
                                                de = "Die Position des Sprites auf der x-Achse.",
                                                jp = "オブジェクトを描画する座標 (x-軸)"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position to draw the object (y-axis).",
                                            descriptiont = {
                                                de = "Die Position des Sprites auf der y-Achse.",
                                                jp = "オブジェクトを描画する座標 (y-軸)"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Orientation (radians).",
                                            descriptiont = {
                                                de = "Die Ausrichtung in Radianten.",
                                                jp = "方向 (弧度)。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor (x-axis).",
                                            descriptiont = {
                                                de = "Der Skalierungsfaktor in x-Richtung.",
                                                jp = "尺度変更係数 (x-軸)。"
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor (y-axis).",
                                            descriptiont = {
                                                de = "Der Skalierungsfaktor in y-Richtung.",
                                                jp = "尺度変更係数 (y-軸)。"
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (x-axis).",
                                            descriptiont = {
                                                de = "Die Verschiebung von den Ursprungskoordinaten auf der x-Achse.",
                                                jp = "原点の支距 (x-軸)。"
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (y-axis).",
                                            descriptiont = {
                                                de = "Die Verschiebung von den Ursprungskoordinaten auf der y-Achse.",
                                                jp = "原点の支距 (y-軸)。"
                                            },
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (x-axis).",
                                            descriptiont = {
                                                de = "Der Scherfaktor in x-Richtung.",
                                                jp = "剪断係数 (x-軸)。"
                                            },
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (y-axis).",
                                            descriptiont = {
                                                de = "Der Scherfaktor in y-Richtung.",
                                                jp = "剪断係数 (y-軸)。"
                                            },
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        de = "Fügt ein Quad zum SpriteBatch hinzu.",
                                        jp = "Quad をバッチへ追加します。"
                                    },
                                    returns = {
                                        {
                                            description = "An identifier for the added sprite.",
                                            descriptiont = {
                                                de = "An identifier for the added sprite.",
                                                jp = "追加されたスプライトの識別子。"
                                            },
                                            name = "id",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Attaches a per-vertex attribute from a Mesh onto this SpriteBatch, for use when drawing. This can be combined with a Shader to augment a SpriteBatch with per-vertex or additional per-sprite information instead of just having per-sprite colors.\n\nEach sprite in a SpriteBatch has 4 vertices in the following order: top-left, bottom-left, top-right, bottom-right. The index returned by SpriteBatch:add (and used by SpriteBatch:set) can be multiplied by 4 to determine the first vertex in a specific sprite.",
                            descriptiont = {
                                jp = "描画時に使用するために、この SpriteBatch に Mesh から頂点ごとの属性を付加します。これはスプライトごとに色を有する代わりとして頂点ごと、あるいは追加のスプライトごとの情報により SpriteBatch を拡張するために Shader と組み合わせることができます。\n\nSpriteBatch にある各スプライトは次の順番で 4 つの頂点を有しています: 左上、左下、右上、右下です。 SpriteBatch:add (そして SpriteBatch:set で使用される) により返された索引は特定のスプライトで最初の頂点を判定するために 4 で乗算することができます。"
                            },
                            minidescriptiont = {
                                jp = "描画時に使用するために、この SpriteBatch に Mesh から頂点ごとの属性を付加します。"
                            },
                            name = "attachAttribute",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The name of the vertex attribute to attach.",
                                            descriptiont = {
                                                jp = "付加を行う頂点属性の名称。"
                                            },
                                            name = "name",
                                            type = "string"
                                        },
                                        {
                                            description = "The Mesh to get the vertex attribute from.",
                                            descriptiont = {
                                                jp = "頂点属性の取得を行う Mesh です。"
                                            },
                                            name = "mesh",
                                            type = "Mesh"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Removes all sprites from the buffer.",
                            descriptiont = {
                                jp = "バッファからスプライトを全て削除します。",
                                pt = "Remove todos as entidades gráficas de um buffer."
                            },
                            minidescriptiont = {
                                jp = "バッファからスプライトを全て削除します。",
                                pt = "Remove todos as entidades gráficas de um buffer."
                            },
                            name = "clear",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Immediately sends all new and modified sprite data in the batch to the graphics card.",
                            descriptiont = {
                                jp = "バッチ内にある新規変更されたデータを直接的にグラフィックス・カードへ全て送信します。\n\n通常は本メソッドを love.graphics.draw(spritebatch, ...) として呼び出すことは不要であり必要になれば自動的に呼ばれますが、明示的に '''SpriteBatch:flush''' を使用することにより発生するかに対して多くの制御を与えます。\n\nこのメソッドが使用された場合は、一般に love.graphics.draw(spritebatch, ...) 呼び出しの間に一回(最大量)だけでありそれ以上呼ばれるべきではありません。"
                            },
                            minidescriptiont = {
                                jp = "バッチ内にある新規変更されたデータを直接的にグラフィックス・カードへ全て送信します。"
                            },
                            name = "flush",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Gets the maximum number of sprites the SpriteBatch can hold.",
                            descriptiont = {
                                jp = "SpriteBatch が保持できる最大スプライト数を取得します。"
                            },
                            minidescriptiont = {
                                jp = "SpriteBatch が保持できる最大スプライト数を取得します。"
                            },
                            name = "getBufferSize",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The maximum number of sprites the batch can hold.",
                                            descriptiont = {
                                                jp = "SpriteBatch が保持できるスプライトの最大数。"
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the color that will be used for the next add and set operations.\n\nIf no color has been set with SpriteBatch:setColor or the current SpriteBatch color has been cleared, this method will return nil.",
                            descriptiont = {
                                jp = "add および set の操作で使用する色を取得します。\n\nこのメソッドは SpriteBatch:setColor で色が設定されていないか現在の SpriteBatch の色が消去されている場合は、 nil を返します。"
                            },
                            minidescriptiont = {
                                jp = "次回の add および set の操作で使用する色を取得します。"
                            },
                            name = "getColor",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The red component (0-255).",
                                            descriptiont = {
                                                jp = "赤色の成分 (0-255)"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            description = "The green component (0-255).",
                                            descriptiont = {
                                                jp = "緑色の成分 (0-255)"
                                            },
                                            name = "g",
                                            type = "number"
                                        },
                                        {
                                            description = "The blue component (0-255).",
                                            descriptiont = {
                                                jp = "青色の成分 (0-255)"
                                            },
                                            name = "b",
                                            type = "number"
                                        },
                                        {
                                            description = "The alpha component (0-255).",
                                            descriptiont = {
                                                jp = "青色の成分 (0-255)"
                                            },
                                            name = "a",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the amount of sprites currently in the SpriteBatch.",
                            descriptiont = {
                                jp = "SpriteBatch にある現在のスプライトの本数を取得します。"
                            },
                            minidescriptiont = {
                                jp = "SpriteBatch にある現在のスプライトの本数を取得します。"
                            },
                            name = "getCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The amount of sprites currently in the batch.",
                                            descriptiont = {
                                                jp = "SpriteBatch にある現在のスプライトの本数。"
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the Image or Canvas used by the SpriteBatch.",
                            descriptiont = {
                                jp = "SpriteBatch にて使用されているテクスチャ (Image または Canvas) を取得します。"
                            },
                            minidescriptiont = {
                                jp = "SpriteBatch にて使用されているテクスチャ (Image または Canvas) を取得します。"
                            },
                            name = "getTexture",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Image or Canvas for the sprites.",
                                            descriptiont = {
                                                jp = "SpriteBatch にて使用されている Image または Canvas です。"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Changes a sprite in the batch. This requires the identifier returned by add and addq.",
                            descriptiont = {
                                jp = "バッチにあるスプライトを変更します。これには add および addq により返された識別子が必要です。"
                            },
                            minidescriptiont = {
                                jp = "バッチにあるスプライトを変更します。"
                            },
                            name = "set",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The identifier of the sprite that will be changed.",
                                            descriptiont = {
                                                jp = "変更されるスプライトの識別子。"
                                            },
                                            name = "id",
                                            type = "number"
                                        },
                                        {
                                            description = "The position to draw the object (x-axis).",
                                            descriptiont = {
                                                jp = "オブジェクトを描画する座標 (x-軸)"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position to draw the object (y-axis).",
                                            descriptiont = {
                                                jp = "オブジェクトを描画する座標 (y-軸)"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Orientation (radians).",
                                            descriptiont = {
                                                jp = "方向 (弧度)。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor (x-axis).",
                                            descriptiont = {
                                                jp = "拡大・縮小係数 (x-軸)。"
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor (y-axis).",
                                            descriptiont = {
                                                jp = "拡大・縮小係数 (y-軸)。"
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (x-axis).",
                                            descriptiont = {
                                                jp = "原点の支距 (x-軸)。"
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (y-axis).",
                                            descriptiont = {
                                                jp = "原点の支距 (y-軸)。"
                                            },
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (x-axis).",
                                            descriptiont = {
                                                jp = "剪断係数 (x-軸)。"
                                            },
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (y-axis).",
                                            descriptiont = {
                                                jp = "剪断係数 (y-軸)。"
                                            },
                                            name = "ky",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The identifier of the sprite that will be changed.",
                                            descriptiont = {
                                                jp = "変更されるスプライトの識別子。"
                                            },
                                            name = "id",
                                            type = "number"
                                        },
                                        {
                                            description = "The quad used on the image of the batch.",
                                            descriptiont = {
                                                jp = "バッチの画像として使用される Quad です。"
                                            },
                                            name = "quad",
                                            type = "Quad"
                                        },
                                        {
                                            description = "The position to draw the object (x-axis).",
                                            descriptiont = {
                                                jp = "オブジェクトを描画する座標 (x-軸)"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position to draw the object (y-axis).",
                                            descriptiont = {
                                                jp = "オブジェクトを描画する座標 (y-軸)"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Orientation (radians).",
                                            descriptiont = {
                                                jp = "方向 (弧度)。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor (x-axis).",
                                            descriptiont = {
                                                jp = "拡大・縮小係数 (x-軸)。"
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor (y-axis).",
                                            descriptiont = {
                                                jp = "拡大・縮小係数 (y-軸)。"
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (x-axis).",
                                            descriptiont = {
                                                jp = "原点の支距 (x-軸)。"
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset (y-axis).",
                                            descriptiont = {
                                                jp = "原点の支距 (y-軸)。"
                                            },
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (x-axis).",
                                            descriptiont = {
                                                jp = "剪断係数 (x-軸)。"
                                            },
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shear factor (y-axis).",
                                            descriptiont = {
                                                jp = "剪断係数 (y-軸)。"
                                            },
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        jp = "バッチにある Quad を変更します。これには SpriteBatch:add により返された識別子が必要です。"
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the maximum number of sprites the SpriteBatch can hold. Existing sprites in the batch (up to the new maximum) will not be cleared when this function is called.",
                            descriptiont = {
                                jp = "SpriteBatch が保持できる最大スプライト数を設定します。この関数が呼ばれてもバッチにある既存のスプライト(新規の最大数まで)は消去''されません''。"
                            },
                            minidescriptiont = {
                                jp = "SpriteBatch が保持できる最大スプライト数を設定します。"
                            },
                            name = "setBufferSize",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new maximum number of sprites the batch can hold.",
                                            descriptiont = {
                                                jp = "SpriteBatch が保持できるスプライトの最大数。"
                                            },
                                            name = "size",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the color that will be used for the next add and set operations. Calling the function without arguments will clear the color.\n\nIn version [[0.9.2]] and older, the global color set with love.graphics.setColor will not work on the SpriteBatch if any of the sprites has its own color.",
                            descriptiont = {
                                jp = "次回の add および set の操作で使用する色を設定します。引数なしで関数を呼び出すと SpriteBatch に対してスプライトごとに全ての色を無効にします。\n\nversion 0.9.2 以前では、いずれかのスプライトが色を保持していれば SpriteBatch には love.graphics.setColor により設定されたグローバルな色の影響を受けません。"
                            },
                            minidescriptiont = {
                                jp = "次回の add および set の操作で使用する色を設定します。"
                            },
                            name = "setColor",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The amount of red.",
                                            descriptiont = {
                                                jp = "赤の量。"
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            description = "The amount of green.",
                                            descriptiont = {
                                                jp = "緑の量。"
                                            },
                                            name = "g",
                                            type = "number"
                                        },
                                        {
                                            description = "The amount of blue.",
                                            descriptiont = {
                                                jp = "青の量。"
                                            },
                                            name = "b",
                                            type = "number"
                                        },
                                        {
                                            default = "255",
                                            description = "The amount of alpha.",
                                            descriptiont = {
                                                jp = "透過の量。"
                                            },
                                            name = "a",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    description = "Disables all per-sprite colors for this SpriteBatch.",
                                    descriptiont = {
                                        jp = "この SpriteBatch に対してスプライト単位で色を無効します。"
                                    }
                                }
                            }
                        },
                        {
                            description = "Replaces the Image or Canvas used for the sprites.",
                            descriptiont = {
                                jp = "描画時に、バッチにあるスプライトで使用されるテクスチャ (Image または Canvas) を設定します。"
                            },
                            minidescriptiont = {
                                jp = "描画時に、バッチにあるスプライトで使用されるテクスチャ (Image または Canvas) を設定します。"
                            },
                            name = "setTexture",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new Image or Canvas to use for the sprites.",
                                            descriptiont = {
                                                jp = "バッチにあるスプライトで使用される新規の Image または Canvas です。"
                                            },
                                            name = "texture",
                                            type = "Texture"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Armazena uma geometria em um buffer e desenha em uma única chamada."
                    },
                    name = "SpriteBatch",
                    parenttype = "Drawable",
                    supertypes = {
                        "Drawable",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newText"
                    },
                    description = "Drawable text.",
                    descriptiont = {
                        jp = "描画可能なテキスト。"
                    },
                    functions = {
                        {
                            description = "Adds additional colored text to the Text object at the specified position.",
                            descriptiont = {
                                jp = "Text オブジェクトに対して着色したテキストを指定された位置に追加します。"
                            },
                            minidescriptiont = {
                                jp = "Text オブジェクトに対して着色したテキストを指定された位置に追加します。"
                            },
                            name = "add",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The text to add to the object.",
                                            descriptiont = {
                                                jp = "オブジェクトへ追加するテキスト。"
                                            },
                                            name = "textstring",
                                            type = "string"
                                        },
                                        {
                                            default = "0",
                                            description = "The position of the new text on the x-axis.",
                                            descriptiont = {
                                                jp = "x-軸における新規テキストの位置。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The position of the new text on the y-axis.",
                                            descriptiont = {
                                                jp = "y-軸における新規テキストの位置。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The orientation of the new text in radians.",
                                            descriptiont = {
                                                jp = "弧度による新規テキストの方向。"
                                            },
                                            name = "angle",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor on the x-axis.",
                                            descriptiont = {
                                                jp = "x-軸の尺度変更係数。"
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor on the y-axis.",
                                            descriptiont = {
                                                jp = "y-軸の尺度変更係数。"
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the x-axis.",
                                            descriptiont = {
                                                jp = "x-軸における原点の支距。"
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the y-axis.",
                                            descriptiont = {
                                                jp = "y-軸における原点の支距。"
                                            },
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the x-axis.",
                                            descriptiont = {
                                                jp = "x-軸の剪断 / 斜行係数"
                                            },
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the y-axis.",
                                            descriptiont = {
                                                jp = "y-軸の剪断 / 斜行係数"
                                            },
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "An index number that can be used with Text:getWidth or Text:getHeight.",
                                            descriptiont = {
                                                jp = "Text:getWidth  または Text:getHeight で使用できる索引番号。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A table containing colors and strings to use as the new text, in the form of { color1, string1, color2, string2, ... }.",
                                            name = "coloredtext",
                                            table = {
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color1",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string1",
                                                    type = "string"
                                                },
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color2",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string2",
                                                    type = "string"
                                                },
                                                {
                                                    description = "Additional colors and strings.",
                                                    name = "...",
                                                    type = "tables and strings"
                                                }
                                            },
                                            type = "table"
                                        },
                                        {
                                            default = "0",
                                            description = "The position of the new text on the x-axis.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The position of the new text on the y-axis.",
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The orientation of the new text in radians.",
                                            name = "angle",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor on the x-axis.",
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor on the y-axis.",
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the x-axis.",
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the y-axis.",
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the x-axis.",
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the y-axis.",
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "An index number that can be used with Text:getWidth or Text:getHeight.",
                                            name = "index",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Adds additional formatted / colored text to the Text object at the specified position.",
                            descriptiont = {
                                jp = "Text オブジェクトに対して整形 / 着色したテキストを指定された位置に追加します。"
                            },
                            minidescriptiont = {
                                jp = "Text オブジェクトに対して整形 / 着色したテキストを指定された位置に追加します。"
                            },
                            name = "addf",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The text to add to the object.",
                                            descriptiont = {
                                                jp = "オブジェクトへ追加するテキスト。"
                                            },
                                            name = "textstring",
                                            type = "string"
                                        },
                                        {
                                            description = "The maximum width in pixels of the text before it gets automatically wrapped to a new line.",
                                            descriptiont = {
                                                jp = "自動で次行への行送り処理を行うまでのピクセル単位によるテキストの最大幅。"
                                            },
                                            name = "wraplimit",
                                            type = "number"
                                        },
                                        {
                                            description = "The alignment of the text.",
                                            descriptiont = {
                                                jp = "テキストの整列位置。"
                                            },
                                            name = "align",
                                            type = "AlignMode"
                                        },
                                        {
                                            description = "The position of the new text on the x-axis.",
                                            descriptiont = {
                                                jp = "新規テキストの位置 (x-軸)。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the new text on the y-axis.",
                                            descriptiont = {
                                                jp = "新規テキストの位置 (y-軸)"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The orientation of the object in radians.",
                                            descriptiont = {
                                                jp = "方向 (弧度)。"
                                            },
                                            name = "angle",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor on the x-axis.",
                                            descriptiont = {
                                                jp = "尺度変更係数 (x-軸)。"
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor on the y-axis.",
                                            descriptiont = {
                                                jp = "尺度変更係数 (y-軸)。"
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the x-axis.",
                                            descriptiont = {
                                                jp = "原点の支距 (x-軸)。"
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the y-axis.",
                                            descriptiont = {
                                                jp = "原点の支距 (y-軸)。"
                                            },
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the x-axis.",
                                            descriptiont = {
                                                jp = "剪断 / 斜行係数 (x-軸)。"
                                            },
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the y-axis.",
                                            descriptiont = {
                                                jp = "剪断 / 斜行係数 (y-軸)。"
                                            },
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "An index number that can be used with Text:getWidth or Text:getHeight.",
                                            descriptiont = {
                                                jp = "Text:getWidth  または Text:getHeight で使用できる索引番号。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A table containing colors and strings to use as the new text, in the form of { color1, string1, color2, string2, ... }.",
                                            name = "coloredtext",
                                            table = {
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color1",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string1",
                                                    type = "string"
                                                },
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color2",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string2",
                                                    type = "string"
                                                },
                                                {
                                                    description = "Additional colors and strings.",
                                                    name = "...",
                                                    type = "tables and strings"
                                                }
                                            },
                                            type = "table"
                                        },
                                        {
                                            description = "The maximum width in pixels of the text before it gets automatically wrapped to a new line.",
                                            name = "wraplimit",
                                            type = "number"
                                        },
                                        {
                                            description = "The alignment of the text.",
                                            name = "align",
                                            type = "AlignMode"
                                        },
                                        {
                                            description = "The position of the new text on the x-axis.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the new text on the y-axis.",
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The orientation of the object in radians.",
                                            name = "angle",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "Scale factor on the x-axis.",
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            default = "sx",
                                            description = "Scale factor on the y-axis.",
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the x-axis.",
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Origin offset on the y-axis.",
                                            name = "oy",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the x-axis.",
                                            name = "kx",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Shearing / skew factor on the y-axis.",
                                            name = "ky",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "An index number that can be used with Text:getWidth or Text:getHeight.",
                                            name = "index",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Clears the contents of the Text object.",
                            descriptiont = {
                                jp = "Text オブジェクトの内容を消去します。"
                            },
                            minidescriptiont = {
                                jp = "Text オブジェクトの内容を消去します。"
                            },
                            name = "clear",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Gets the width and height of the text in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位でテキストの幅と高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位でテキストの幅と高さを取得します。"
                            },
                            name = "getDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the text. If multiple sub-strings have been added with Text:add, the width of the last sub-string is returned.",
                                            descriptiont = {
                                                jp = "テキストの幅。複数の部分文字列が Text:add で追加された場合は、最後にある部分文字列の幅を返します。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the text. If multiple sub-strings have been added with Text:add, the height of the last sub-string is returned.",
                                            descriptiont = {
                                                jp = "テキストの高さ。複数の部分文字列が Text:add で追加された場合は、最後にある部分文字列の高さを返します。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "An index number returned by Text:add or Text:addf.",
                                            descriptiont = {
                                                jp = "Text:add または Text:addf により返された索引番号。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    description = "Gets the width and height of a specific sub-string that was previously added to the Text object.",
                                    descriptiont = {
                                        jp = "以前に Text オブジェクトへ追加された特定の部分文字列の幅と高さを取得します。"
                                    },
                                    returns = {
                                        {
                                            description = "The width of the sub-string (before scaling and other transformations).",
                                            descriptiont = {
                                                jp = "部分文字列の幅 (尺度変更およびその他の変換前の)。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the sub-string (before scaling and other transformations).",
                                            descriptiont = {
                                                jp = "部分文字列の高さ (尺度変更およびその他の変換前の)。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the Font used with the Text object.",
                            descriptiont = {
                                jp = "Text オブジェクトで使用されているフォントを取得します。"
                            },
                            minidescriptiont = {
                                jp = "Text オブジェクトで使用されているフォントを取得します。"
                            },
                            name = "getFont",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The font used with this Text object.",
                                            name = "font",
                                            type = "Font"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the text in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位でテキストの高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位でテキストの高さを取得します。"
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the text. If multiple sub-strings have been added with Text:add, the height of the last sub-string is returned.",
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "An index number returned by Text:add or Text:addf.",
                                            descriptiont = {
                                                jp = "Text:add  または Text:addf により返された索引番号。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    description = "Gets the height of a specific sub-string that was previously added to the Text object.",
                                    descriptiont = {
                                        jp = "以前に Text オブジェクトへ追加された特定の部分文字列の高さを取得します。"
                                    },
                                    returns = {
                                        {
                                            description = "The height of the sub-string (before scaling and other transformations).",
                                            descriptiont = {
                                                jp = "部分文字列の高さ (尺度変更およびその他の変換前の)。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width of the text in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位でテキストの幅を取得します。"
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位でテキストの幅を取得します。"
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the text. If multiple sub-strings have been added with Text:add, the width of the last sub-string is returned.",
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "An index number returned by Text:add or Text:addf.",
                                            descriptiont = {
                                                jp = "Text:add  または Text:addf により返された索引番号。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    description = "Gets the width of a specific sub-string that was previously added to the Text object.",
                                    descriptiont = {
                                        jp = "以前に Text オブジェクトへ追加された特定の部分文字列の幅を取得します。"
                                    },
                                    returns = {
                                        {
                                            description = "The width of the sub-string (before scaling and other transformations).",
                                            descriptiont = {
                                                jp = "部分文字列の幅 (尺度変更およびその他の変換前の)。"
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Replaces the contents of the Text object with a new unformatted string.",
                            descriptiont = {
                                jp = "Text オブジェクトの内容を新規未整形の文字列で置き換えます。"
                            },
                            minidescriptiont = {
                                jp = "Text オブジェクトの内容を新規未整形の文字列で置き換えます。"
                            },
                            name = "set",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new string of text to use.",
                                            descriptiont = {
                                                jp = "テキストとして使用する新規文字列。"
                                            },
                                            name = "textstring",
                                            type = "string"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A table containing colors and strings to use as the new text, in the form of { color1, string1, color2, string2, ... }.",
                                            name = "coloredtext",
                                            table = {
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color1",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string1",
                                                    type = "string"
                                                },
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color2",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string2",
                                                    type = "string"
                                                },
                                                {
                                                    description = "Additional colors and strings.",
                                                    name = "...",
                                                    type = "tables and strings"
                                                }
                                            },
                                            type = "table"
                                        }
                                    }
                                },
                                {
                                    description = "Clears the contents of the Text object.",
                                    descriptiont = {
                                        jp = "Text オブジェクトの内容を消去します。"
                                    }
                                }
                            }
                        },
                        {
                            description = "Replaces the contents of the Text object with a new formatted string.",
                            descriptiont = {
                                jp = "Text オブジェクトの内容を新規整形した文字列で置き換えます。"
                            },
                            minidescriptiont = {
                                jp = "Text オブジェクトの内容を新規整形した文字列で置き換えます。"
                            },
                            name = "setf",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new string of text to use.",
                                            descriptiont = {
                                                jp = "テキストとして使用する新規文字列。"
                                            },
                                            name = "textstring",
                                            type = "string"
                                        },
                                        {
                                            description = "The maximum width in pixels of the text before it gets automatically wrapped to a new line.",
                                            descriptiont = {
                                                jp = "自動で次行への行送り処理を行うまでのピクセル単位によるテキストの最大幅。"
                                            },
                                            name = "wraplimit",
                                            type = "number"
                                        },
                                        {
                                            default = "\"left\"",
                                            description = "The alignment of the text.",
                                            descriptiont = {
                                                jp = "テキストの整列位置。"
                                            },
                                            name = "align",
                                            type = "AlignMode"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A table containing colors and strings to use as the new text, in the form of { color1, string1, color2, string2, ... }.",
                                            name = "coloredtext",
                                            table = {
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color1",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string1",
                                                    type = "string"
                                                },
                                                {
                                                    description = "A table containing red, green, blue, and optional alpha components to use as a color for the next string in the table, in the form of {red, green, blue, alpha}.",
                                                    name = "color2",
                                                    type = "table"
                                                },
                                                {
                                                    description = "A string of text which has a color specified by the previous color.",
                                                    name = "string2",
                                                    type = "string"
                                                },
                                                {
                                                    description = "Additional colors and strings.",
                                                    name = "...",
                                                    type = "tables and strings"
                                                }
                                            },
                                            type = "table"
                                        },
                                        {
                                            description = "The maximum width in pixels of the text before it gets automatically wrapped to a new line.",
                                            name = "wraplimit",
                                            type = "number"
                                        },
                                        {
                                            default = "\"left\"",
                                            description = "The alignment of the text.",
                                            name = "align",
                                            type = "AlignMode"
                                        }
                                    }
                                },
                                {
                                    description = "Clears the contents of the Text object."
                                }
                            }
                        },
                        {
                            description = "Replaces the Font used with the text.",
                            descriptiont = {
                                jp = "Text で使用されているフォントを置き換えます。"
                            },
                            minidescriptiont = {
                                jp = "Text で使用されているフォントを置き換えます。"
                            },
                            name = "setFont",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new font to use with this Text object.",
                                            descriptiont = {
                                                jp = "この Text オブジェクトで新規に使用するフォントです。"
                                            },
                                            name = "font",
                                            type = "Font"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Text",
                    parenttype = "Drawable",
                    supertypes = {
                        "Drawable",
                        "Object"
                    }
                },
                {
                    constructors = {},
                    description = "Superclass for drawable objects which represent a texture. All Textures can be drawn with Quads. This is an abstract type that can't be created directly.",
                    descriptiont = {
                        de = "Die Superklasse für alle zeichenbaren Objekte welche eine Textur repräsentieren.\n\nAlle Texturen können mit Quads gezeichnet werden. Texture ist ein abstrakter Datentyp und kann daher nicht direkt erstellt werden.",
                        jp = "Drawable オブジェクトでテクスチャを表現するための上位型です。全てのテクスチャは Quad により描画できます。この抽象型は直接の作成はできません。"
                    },
                    functions = {},
                    minidescriptiont = {},
                    name = "Texture",
                    parenttype = "Drawable",
                    subtypes = {
                        "Canvas",
                        "Image"
                    },
                    supertypes = {
                        "Drawable",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newVideo"
                    },
                    description = "A drawable video.",
                    descriptiont = {
                        jp = "Video を描画できるようにします。"
                    },
                    functions = {
                        {
                            description = "Gets the width and height of the Video in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で Video の幅と高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位で Video の幅と高さを取得します。"
                            },
                            name = "getDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the Video.",
                                            descriptiont = {
                                                jp = "Video の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the video.",
                                            descriptiont = {
                                                jp = "Video の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the scaling filters used when drawing the Video.",
                            descriptiont = {
                                jp = "描画時に使用される拡大・縮小フィルタを取得します。"
                            },
                            minidescriptiont = {
                                jp = "描画時に使用される拡大・縮小フィルタを取得します。"
                            },
                            name = "getFilter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The filter mode used when scaling the Video down.",
                                            descriptiont = {
                                                jp = "Video 縮小時に使用されるフィルター方式。"
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "The filter mode used when scaling the Video up.",
                                            descriptiont = {
                                                jp = "Video 拡大時に使用されるフィルター方式。"
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "1",
                                            description = "Maximum amount of anisotropic filtering used.",
                                            descriptiont = {
                                                jp = "異方性フィルタリングの最大使用量。"
                                            },
                                            name = "anisotropy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the Video in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で Video の高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "Video の高さを取得します。"
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the Video.",
                                            descriptiont = {
                                                jp = "Video の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the audio Source used for playing back the video's audio. May return nil if the video has no audio, or if Video:setSource is called with a nil argument.",
                            descriptiont = {
                                jp = "Video の音声を再生するために使用する音声  Source を取得します。 Video が音声を有していない、または Video:setSource で nil 引数により呼び出された場合は nil を返します。"
                            },
                            minidescriptiont = {
                                jp = "Video の音声を再生するために使用する音声  Source を取得します。"
                            },
                            name = "getSource",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The audio Source used for audio playback, or nil if the video has no audio.",
                                            descriptiont = {
                                                jp = "音声の再生に使用する音声  Source または、 Video が無音声ならば nil を返します。"
                                            },
                                            name = "source",
                                            type = "Source"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the VideoStream object used for decoding and controlling the video.",
                            descriptiont = {
                                jp = "Video の復号化および制御で使用されている VideoStream オブジェクトを取得します。"
                            },
                            minidescriptiont = {
                                jp = "Video の復号化および制御で使用されている VideoStream オブジェクトを取得します。"
                            },
                            name = "getStream",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The VideoStream used for decoding and controlling the video.",
                                            name = "stream",
                                            type = "VideoStream"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width of the Video in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で Video の幅を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Video の幅を取得します。"
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the Video.",
                                            descriptiont = {
                                                jp = "Video の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Video is currently playing.",
                            descriptiont = {
                                jp = "Video が現在再生中かどうか返します。"
                            },
                            minidescriptiont = {
                                jp = "Video が現在再生中かどうか返します。"
                            },
                            name = "isPlaying",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether the video is playing.",
                                            descriptiont = {
                                                jp = "Video が再生中かどうか。"
                                            },
                                            name = "playing",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Pauses the Video.",
                            descriptiont = {
                                jp = "Video を一時停止します。"
                            },
                            minidescriptiont = {
                                jp = "Video を一時停止します。"
                            },
                            name = "pause",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Starts playing the Video. In order for the video to appear onscreen it must be drawn with love.graphics.draw.",
                            descriptiont = {
                                jp = "Video の再生を開始します。画面上に Video を映し出すには love.graphics.draw で描画する必要があります。"
                            },
                            minidescriptiont = {
                                jp = "Video の再生を開始します。"
                            },
                            name = "play",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Rewinds the Video to the beginning.",
                            descriptiont = {
                                jp = "Video を先頭まで巻き戻します。"
                            },
                            minidescriptiont = {
                                jp = "Video を先頭まで巻き戻します。"
                            },
                            name = "rewind",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Sets the current playback position of the Video.",
                            descriptiont = {
                                jp = "Video の現在再生位置を設定します。"
                            },
                            minidescriptiont = {
                                jp = "Video の現在再生位置を設定します。"
                            },
                            name = "seek",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The time in seconds since the beginning of the Video.",
                                            descriptiont = {
                                                jp = "時間は Video の先頭からの秒数です。"
                                            },
                                            name = "offset",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the scaling filters used when drawing the Video.",
                            descriptiont = {
                                jp = "描画時に使用される拡大・縮小フィルタを設定します。"
                            },
                            minidescriptiont = {
                                jp = "描画時に使用される拡大・縮小フィルタを設定します。"
                            },
                            name = "setFilter",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The filter mode used when scaling the Video down.",
                                            descriptiont = {
                                                jp = "Video 縮小時に使用されるフィルター方式。"
                                            },
                                            name = "min",
                                            type = "FilterMode"
                                        },
                                        {
                                            description = "The filter mode used when scaling the Video up.",
                                            descriptiont = {
                                                jp = "Video 拡大時に使用されるフィルター方式。"
                                            },
                                            name = "mag",
                                            type = "FilterMode"
                                        },
                                        {
                                            default = "1",
                                            description = "Maximum amount of anisotropic filtering used.",
                                            descriptiont = {
                                                jp = "異方性フィルタリングの最大使用量。"
                                            },
                                            name = "anisotropy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the audio Source used for playing back the video's audio. The audio Source also controls playback speed and synchronization.",
                            descriptiont = {
                                jp = "Video の音声を再生するために使用する音声  Source を設定します。音声 Source は再生速度および同期により制御されます。"
                            },
                            minidescriptiont = {
                                jp = "Video の音声を再生するために使用する音声  Source を設定します。"
                            },
                            name = "setSource",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "nil",
                                            description = "The audio Source used for audio playback, or nil to disable audio synchronization.",
                                            descriptiont = {
                                                jp = "音声の再生に使用する音声  Source または、 Video の同期が無効ならば nil を返します。"
                                            },
                                            name = "source",
                                            type = "Source"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the current playback position of the Video.",
                            descriptiont = {
                                jp = "Video の現在再生位置を取得します。"
                            },
                            minidescriptiont = {
                                jp = "Video の現在再生位置を取得します。"
                            },
                            name = "tell",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The time in seconds since the beginning of the Video.",
                                            name = "seconds",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Video",
                    parenttype = "Drawable",
                    supertypes = {
                        "Drawable",
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides an interface to decode encoded image data.",
            enums = {
                {
                    constants = {
                        {
                            description = "The DXT1 format. RGB data at 4 bits per pixel (compared to 32 bits for ImageData and regular Images.) Suitable for fully opaque images. Suitable for fully opaque images on desktop systems.",
                            descriptiont = {
                                jp = "DXT1 形式。ピクセルごとに 4 bit のRGB データ (32 bit の ImageData および通常の Image との比較)。デスクトップシステムにおいて完全に不透明な画像に適しています。"
                            },
                            name = "DXT1"
                        },
                        {
                            description = "The DXT3 format. RGBA data at 8 bits per pixel. Smooth variations in opacity do not mix well with this format.",
                            descriptiont = {
                                jp = "DXT3 形式。ピクセルごとに 8 bit の RGBA データ。この形式で不透明度を滑らかに変化させる場合は上手く混ざり合いません。"
                            },
                            name = "DXT3"
                        },
                        {
                            description = "The DXT5 format. RGBA data at 8 bits per pixel. Recommended for images with varying opacity on desktop systems.",
                            descriptiont = {
                                jp = "DXT5 形式。ピクセルごとに 8 bit の RGBA データ。デスクトップシステムにおいて不透明度が変化する画像において推奨されます。"
                            },
                            name = "DXT5"
                        },
                        {
                            description = "The BC4 format (also known as 3Dc+ or ATI1.) Stores just the red channel, at 4 bits per pixel.",
                            descriptiont = {
                                jp = "BC4 形式 (3Dc+ または ATI1 としても知られています)。ピクセルごとに 4 bit の赤チャンネルのみを格納します。"
                            },
                            name = "BC4"
                        },
                        {
                            description = "The signed variant of the BC4 format. Same as above but the pixel values in the texture are in the range of [-1, 1] instead of [0, 1] in shaders.",
                            descriptiont = {
                                jp = "これは BC4 形式の符号付きによる異形です。上記と同じですがテクスチャーにおけるピクセル値はシェーダー側の 0, 1 ではなく 1 範囲です。"
                            },
                            name = "BC4s"
                        },
                        {
                            description = "The BC5 format (also known as 3Dc or ATI2.) Stores red and green channels at 8 bits per pixel.",
                            descriptiont = {
                                jp = "BC5 形式 (3Dc または ATI2 としても知られています)。ピクセルごとに 8 bit の赤および緑チャンネルを格納します。"
                            },
                            name = "BC5"
                        },
                        {
                            description = "The signed variant of the BC5 format.",
                            descriptiont = {
                                jp = "これは BC5 形式の符号付きによる異形です。"
                            },
                            name = "BC5s"
                        },
                        {
                            description = "The BC6H format. Stores half-precision floating-point RGB data in the range of [0, 65504] at 8 bits per pixel. Suitable for HDR images on desktop systems.",
                            descriptiont = {
                                jp = " "
                            },
                            name = "BC6h"
                        },
                        {
                            description = "The signed variant of the BC6H format. Stores RGB data in the range of [-65504, +65504].",
                            descriptiont = {
                                jp = "BC6H 形式の符号付きによる異形です。 RGB データの格納範囲は  +65504 です。"
                            },
                            name = "BC6hs"
                        },
                        {
                            description = "The BC7 format (also known as BPTC.) Stores RGB or RGBA data at 8 bits per pixel.",
                            descriptiont = {
                                jp = "BC7 形式 (BPTC としても知られています)。ピクセルごとに 8 bit の RGB または RGBA データを格納します。"
                            },
                            name = "BC7"
                        },
                        {
                            description = "The ETC1 format. RGB data at 4 bits per pixel. Suitable for fully opaque images on older Android devices.",
                            descriptiont = {
                                jp = "ETC1 形式。ピクセルごとに 4 bit の RGB です。古い Android デバイスにおいて完全に不透明な画像に適しています。"
                            },
                            name = "ETC1"
                        },
                        {
                            description = "The RGB variant of the ETC2 format. RGB data at 4 bits per pixel. Suitable for fully opaque images on newer mobile devices.",
                            descriptiont = {
                                jp = "ETC2 形式の異形。ピクセルごとに 4 bit の RGB です。新しい Android デバイスにおいて完全に不透明な画像に適しています。"
                            },
                            name = "ETC2rgb"
                        },
                        {
                            description = "The RGBA variant of the ETC2 format. RGBA data at 8 bits per pixel. Recommended for images with varying opacity on newer mobile devices.",
                            descriptiont = {
                                jp = "ETC2 形式の異形。ピクセルごとに 8 bit の RGBA データ。新しいモバイル機器において不透明が可変の画像で推奨されます。"
                            },
                            name = "ETC2rgba"
                        },
                        {
                            description = "The RGBA variant of the ETC2 format where pixels are either fully transparent or fully opaque. RGBA data at 4 bits per pixel.",
                            descriptiont = {
                                jp = "ETC2 形式の RGBA による異形でありピクセルが完全に透明または完全に不透明からなります。ピクセルごとに 4 bit の RGBA です。"
                            },
                            name = "ETC2rgba1"
                        },
                        {
                            description = "The single-channel variant of the EAC format. Stores just the red channel, at 4 bits per pixel.",
                            descriptiont = {
                                jp = "単一チャンネルによる EAC 形式の異形です。ピクセルごとに 4 bit の赤チャンネルのみを格納します。"
                            },
                            name = "EACr"
                        },
                        {
                            description = "The signed single-channel variant of the EAC format. Same as above but pixel values in the texture are in the range of [-1, 1] instead of [0, 1] in shaders.",
                            descriptiont = {
                                jp = "符号付き単一チャンネルによる EAC 形式の異形です。上記と同じですがシェーダーにおいてテクスチャのピクセル値は 1 ではなく 1 の範囲です。"
                            },
                            name = "EACrs"
                        },
                        {
                            description = "The two-channel variant of the EAC format. Stores red and green channels at 8 bits per pixel.",
                            descriptiont = {
                                jp = "２チャンネルによる EAC 形式の異形です。ピクセルごとに 8 bit の赤および緑チャンネルを格納します。"
                            },
                            name = "EACrg"
                        },
                        {
                            description = "The signed two-channel variant of the EAC format.",
                            descriptiont = {
                                jp = "符号付き２チャンネルによる EAC 形式の異形です。"
                            },
                            name = "EACrgs"
                        },
                        {
                            description = "The 2 bit per pixel RGB variant of the PVRTC1 format. Stores RGB data at 2 bits per pixel. Textures compressed with PVRTC1 formats must be square and power-of-two sized.",
                            descriptiont = {
                                jp = "ピクセルごとに 2 bit の RGB からなる PVRTC1 形式の異形です。テクスチャは 2 の累乗または平方の大きさにより PVRTC1 形式で圧縮する必要があります。"
                            },
                            name = "PVR1rgb2"
                        },
                        {
                            description = "The 4 bit per pixel RGB variant of the PVRTC1 format. Stores RGB data at 4 bits per pixel.",
                            descriptiont = {
                                jp = "ピクセルごとに 4 bit の RGB からなる PVRTC1 形式の異形です。ピクセルごとに 8bit の RGB データを格納します。"
                            },
                            name = "PVR1rgb4"
                        },
                        {
                            description = "The 2 bit per pixel RGBA variant of the PVRTC1 format.",
                            descriptiont = {
                                jp = "ピクセルごとに 2 bit の RGBA からなる PVRTC1 形式の異形です。"
                            },
                            name = "PVR1rgba2"
                        },
                        {
                            description = "The 4 bit per pixel RGBA variant of the PVRTC1 format.",
                            descriptiont = {
                                jp = "ピクセルごとに 4 bit の RGBA からなる PVRTC1 形式の異形です。"
                            },
                            name = "PVR1rgba4"
                        },
                        {
                            description = "The 4x4 pixels per block variant of the ASTC format. RGBA data at 8 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 4x4 ピクセルによる異形。ピクセルあたり 8 bit による RGBA データ。"
                            },
                            name = "ASTC4x4"
                        },
                        {
                            description = "The 5x4 pixels per block variant of the ASTC format. RGBA data at 6.4 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 5x4 ピクセルによる異形。ピクセルあたり 6.4 bit による RGBA データ。"
                            },
                            name = "ASTC5x4"
                        },
                        {
                            description = "The 5x5 pixels per block variant of the ASTC format. RGBA data at 5.12 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 5x5 ピクセルによる異形。ピクセルあたり 5.12 bit による RGBA データ。"
                            },
                            name = "ASTC5x5"
                        },
                        {
                            description = "The 6x5 pixels per block variant of the ASTC format. RGBA data at 4.27 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 6x5 ピクセルによる異形。ピクセルあたり 4.27 bit による RGBA データ。"
                            },
                            name = "ASTC6x5"
                        },
                        {
                            description = "The 6x6 pixels per block variant of the ASTC format. RGBA data at 3.56 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 6x6 ピクセルによる異形。ピクセルあたり 3.56 bit による RGBA データ。"
                            },
                            name = "ASTC6x6"
                        },
                        {
                            description = "The 8x5 pixels per block variant of the ASTC format. RGBA data at 3.2 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 8x5 ピクセルによる異形。ピクセルあたり 3.2 bit による RGBA データ。"
                            },
                            name = "ASTC8x5"
                        },
                        {
                            description = "The 8x6 pixels per block variant of the ASTC format. RGBA data at 2.67 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 8x6 ピクセルによる異形。ピクセルあたり 2.67 bit による RGBA データ。"
                            },
                            name = "ASTC8x6"
                        },
                        {
                            description = "The 8x8 pixels per block variant of the ASTC format. RGBA data at 2 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 8x8 ピクセルによる異形。ピクセルあたり 2 bit による RGBA データ。"
                            },
                            name = "ASTC8x8"
                        },
                        {
                            description = "The 10x5 pixels per block variant of the ASTC format. RGBA data at 2.56 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 10x5 ピクセルによる異形。ピクセルあたり 2.56 bit による RGBA データ。"
                            },
                            name = "ASTC10x5"
                        },
                        {
                            description = "The 10x6 pixels per block variant of the ASTC format. RGBA data at 2.13 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 10x6 ピクセルによる異形。ピクセルあたり 2.13 bit による RGBA データ。"
                            },
                            name = "ASTC10x6"
                        },
                        {
                            description = "The 10x8 pixels per block variant of the ASTC format. RGBA data at 1.6 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 10x8 ピクセルによる異形。ピクセルあたり 1.6 bit による RGBA データ。"
                            },
                            name = "ASTC10x8"
                        },
                        {
                            description = "The 10x10 pixels per block variant of the ASTC format. RGBA data at 1.28 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 10x10 ピクセルによる異形。ピクセルあたり 1.28 bit による RGBA データ。"
                            },
                            name = "ASTC10x10"
                        },
                        {
                            description = "The 12x10 pixels per block variant of the ASTC format. RGBA data at 1.07 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 12x10 ピクセルによる異形。ピクセルあたり 1.07 bit による RGBA データ。"
                            },
                            name = "ASTC12x10"
                        },
                        {
                            description = "The 12x12 pixels per block variant of the ASTC format. RGBA data at 0.89 bits per pixel.",
                            descriptiont = {
                                jp = "ASTC 形式のブロックごとに 12x12 ピクセルによる異形。ピクセルあたり 0.89 bit による RGBA データ。"
                            },
                            name = "ASTC12x12"
                        }
                    },
                    description = "Compressed image data formats. Here and here are a couple overviews of many of the formats.\n\nUnlike traditional PNG or jpeg, these formats stay compressed in RAM and in the graphics card's VRAM. This is good for saving memory space as well as improving performance, since the graphics card will be able to keep more of the image's pixels in its fast-access cache when drawing it.",
                    descriptiont = {
                        jp = "圧縮された画像データの形式。 ここ と ここ の二組に多数の形式に関する概要があります。\n\nこれらの形式は従来の PNG または jpeg とは異なり、 RAM およびグラフィックス・カードの VRAM へ圧縮したまま存在できます。描画時にグラフィックスカードは高速アクセス用のキャッシュへ画像のピクセルを大量に保存できるので、これはメモリの空き領域を節約するだけではなく性能の改善にも有効です。"
                    },
                    minidescriptiont = {
                        jp = "圧縮された画像データの形式。"
                    },
                    name = "CompressedImageFormat"
                },
                {
                    constants = {
                        {
                            description = "Targa image format.",
                            descriptiont = {
                                jp = "Targa 画像形式。",
                                pt = "Formato de imagem Targa.",
                                ru = "Targa формат."
                            },
                            name = "tga"
                        },
                        {
                            description = "PNG image format.",
                            descriptiont = {
                                jp = "PNG 画像形式。."
                            },
                            name = "png"
                        }
                    },
                    description = "Encoded image formats.",
                    descriptiont = {
                        jp = "符号化された画像形式。",
                        pt = "Formatos das imagens.",
                        ru = "Форматы закодированного изображения."
                    },
                    minidescriptiont = {
                        jp = "符号化された画像形式。",
                        pt = "Formatos das imagens.",
                        ru = "Форматы закодированного изображения."
                    },
                    name = "ImageFormat"
                }
            },
            functions = {
                {
                    description = "Determines whether a file can be loaded as CompressedImageData.",
                    descriptiont = {
                        jp = "CompressedImageData としてファイルを読み込むことができるかどうか判定します。",
                        ru = "Определяет, может ли файл быть загружен как CompressedData."
                    },
                    minidescriptiont = {
                        jp = "CompressedImageData としてファイルを読み込むことができるかどうか決定します。",
                        ru = "Определяет может ли файл быть загружен как CompressedData."
                    },
                    name = "isCompressed",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filename of the potentially compressed image file.",
                                    descriptiont = {
                                        jp = "圧縮された可能性がある画像ファイルの名前です。"
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the file can be loaded as CompressedImageData or not.",
                                    descriptiont = {
                                        jp = "ファイルは CompressedImageData として読み込むことができるか否か。"
                                    },
                                    name = "compressed",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A FileData potentially containing a compressed image.",
                                    descriptiont = {
                                        jp = "圧縮された可能性がある画像の FileData オブジェクト。",
                                        ru = "FileData, который может содержать сжатое изображение."
                                    },
                                    name = "fileData",
                                    type = "FileData"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the FileData can be loaded as CompressedImageData or not.",
                                    descriptiont = {
                                        jp = "FileData は CompressedImageData として読み込むことができるか否か。",
                                        ru = "Может ли FileData быть загружен как CompressedData или нет."
                                    },
                                    name = "compressed",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a new CompressedImageData object from a compressed image file. LÖVE supports several compressed texture formats, enumerated in the CompressedImageFormat page.",
                    descriptiont = {
                        jp = "圧縮された画像ファイルから CompressedImageData オブジェクトを新規作成します。 LÖVEは CompressedImageFormat ページで列挙されている複数の圧縮テクスチャ形式に対応しています。"
                    },
                    minidescriptiont = {
                        jp = "圧縮された画像ファイルから CompressedImageData オブジェクトを新規作成します。 "
                    },
                    name = "newCompressedData",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filename of the compressed image file.",
                                    descriptiont = {
                                        jp = "圧縮された画像ファイルのファイル名。"
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The new CompressedImageData object.",
                                    descriptiont = {
                                        jp = "新規 CompressedImageData オブジェクト。"
                                    },
                                    name = "compressedImageData",
                                    type = "CompressedImageData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A FileData containing a compressed image.",
                                    descriptiont = {
                                        jp = "圧縮された画像を含む FileData を指定します。"
                                    },
                                    name = "fileData",
                                    type = "FileData"
                                }
                            },
                            returns = {
                                {
                                    description = "The new CompressedImageData object.",
                                    descriptiont = {
                                        jp = "新規 CompressedImageData オブジェクト。"
                                    },
                                    name = "compressedImageData",
                                    type = "CompressedImageData"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a new ImageData object.",
                    descriptiont = {
                        jp = "ImageData オブジェクトを新規作成します。",
                        pt = "Cria um novo objeto ImageData.",
                        ru = "Создает новый объект ImageData."
                    },
                    minidescriptiont = {
                        jp = "ImageData オブジェクトを新規作成します。",
                        pt = "Cria um novo objeto ImageData",
                        ru = "Создает новый объект ImageData."
                    },
                    name = "newImageData",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The width of the ImageData.",
                                    descriptiont = {
                                        jp = "ImageData の幅。",
                                        pt = "A largura do ImageData.",
                                        ru = "Ширина ImageData."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the ImageData.",
                                    descriptiont = {
                                        jp = "ImageData の高さ。",
                                        pt = "A altura do ImageData.",
                                        ru = "Высота ImageData."
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new blank ImageData object. Each pixel's color values, (including the alpha values!) will be set to zero.",
                                    descriptiont = {
                                        jp = "新しい空の ImageData オブジェクト。 各ピクセルの色の値(透過色の値も含む！)は、0 が設定されます。",
                                        pt = "O novo objeto ImageData.",
                                        ru = "Новый объект ImageData."
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The width of the ImageData.",
                                    descriptiont = {
                                        jp = "ImageData の幅。"
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the ImageData.",
                                    descriptiont = {
                                        jp = "ImageData の高さ。"
                                    },
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    description = "The data to load into the ImageData (RGBA bytes, left to right and top to bottom).",
                                    descriptiont = {
                                        jp = "ImageData へ読み込むデータ (RGBA バイト列、左側から右側および上側から下側) です。"
                                    },
                                    name = "data",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The new ImageData object.",
                                    descriptiont = {
                                        jp = "新規 ImageData オブジェクト。"
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The filename of the image file.",
                                    descriptiont = {
                                        jp = "画像ファイルのファイル名。",
                                        pt = "O nome do arquivo da imagem.",
                                        ru = "Имя файла, содержащего изображение."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "The new ImageData object.",
                                    descriptiont = {
                                        jp = "新規 ImageData オブジェクト。",
                                        pt = "O novo objeto ImageData.",
                                        ru = "Новый объект ImageData."
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The encoded file data to decode into image data.",
                                    descriptiont = {
                                        jp = "画像データとして復号化を行う符号化されたファイルデータ。"
                                    },
                                    name = "filedata",
                                    type = "FileData"
                                }
                            },
                            returns = {
                                {
                                    description = "The new ImageData object.",
                                    descriptiont = {
                                        jp = "新規 ImageData オブジェクト。"
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                }
                            }
                        }
                    }
                }
            },
            name = "image",
            types = {
                {
                    constructors = {
                        "newCompressedData"
                    },
                    description = "Represents compressed image data designed to stay compressed in RAM.\n\nCompressedImageData encompasses standard compressed texture formats such as DXT1, DXT5, and BC5 / 3Dc.\n\nYou can't draw CompressedImageData directly to the screen. See Image for that.",
                    descriptiont = {
                        jp = "圧縮したまま RAM に存在できるように設計された圧縮画像形式を提供します。\n\nCompressedImageData は DXT1, DXT5, および BC5 / 3Dc のような標準圧縮テクスチャ形式を包括的に扱います。\n\nCompressedImageData では画面へ直接描画できません。これに関しては Image を参照してください。"
                    },
                    functions = {
                        {
                            description = "Gets the width and height of the CompressedImageData.",
                            descriptiont = {
                                jp = "CompressedImageData の幅と高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "CompressedImageData の幅と高さを取得します。"
                            },
                            name = "getDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A mipmap level. Must be in the range of [1, CompressedImageData:getMipmapCount()].",
                                            descriptiont = {
                                                jp = "mipmap (ミップマップ)のレベル。必ず CompressedImageData:getMipmapCount() の範囲内にする必要があります。"
                                            },
                                            name = "level",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The width of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の特有の mipmap レベルの幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の特有の mipmap レベルの高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the format of the CompressedImageData.",
                            descriptiont = {
                                jp = "CompressedImageData の形式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "CompressedImageData の形式を取得します。"
                            },
                            name = "getFormat",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The format of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の形式。"
                                            },
                                            name = "format",
                                            type = "CompressedImageFormat"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the CompressedImageData.",
                            descriptiont = {
                                jp = "CompressedImageData の高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "CompressedImageData の高さを取得します。"
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A mipmap level. Must be in the range of [1,  CompressedImageData:getMipmapCount()].",
                                            descriptiont = {
                                                jp = "mipmap のレベル。必ず CompressedImageData:getMipmapCount() の範囲内にする必要があります。"
                                            },
                                            name = "level",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The height of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の特有の mipmap レベルの高さ。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the number of mipmap levels in the CompressedImageData. The base mipmap level (original image) is included in the count.",
                            descriptiont = {
                                jp = "CompressedImageData に存在する Mipmap (ミップマップ)のレベル数を取得します。基となる mipmap レベル (元画像) も総計へ算入されます。"
                            },
                            minidescriptiont = {
                                jp = "CompressedImageData に存在する Mipmap (ミップマップ)のレベル数を取得します。"
                            },
                            name = "getMipmapCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of mipmap levels stored in the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData に格納されている mipmap のレベル数。"
                                            },
                                            name = "mipmaps",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width of the CompressedImageData.",
                            descriptiont = {
                                jp = "CompressedImageData の幅を取得します。"
                            },
                            minidescriptiont = {
                                jp = "CompressedImageData の幅を取得します。"
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A mipmap level. Must be in the range of [1, CompressedImageData:getMipmapCount()].",
                                            descriptiont = {
                                                jp = "mipmap のレベル。必ず CompressedImageData:getMipmapCount() の範囲内にする必要があります。"
                                            },
                                            name = "level",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The width of the CompressedImageData.",
                                            descriptiont = {
                                                jp = "CompressedImageData の特有の mipmap レベルの幅。"
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "CompressedImageData",
                    parenttype = "Data",
                    supertypes = {
                        "Data",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newImageData"
                    },
                    description = "Raw (decoded) image data.\n\nYou can't draw ImageData directly to screen. See Image for that.",
                    descriptiont = {
                        de = "Unverarbeitete (dekodierte) Bilddaten.\n\nBilddaten können nicht direkt auf den Bildschirm gezeichnet werden. Hierfür wird ein Bild benötigt.",
                        jp = "生の (復号化された) 画像データ。\n\nImageData では画面へ直接描画できません。これに関しては Image を参照してください。",
                        pt = "Dados de imagens brutos (decodificados).\n\nNão é possível desenhar um ImageData diretamente para a tela. Veja Image para isso.",
                        ru = "Декодированные данные изображения.\n\nВы не можете использовать ImageData для рисования на экране. Смотрите Image для этого."
                    },
                    functions = {
                        {
                            description = "Encodes the ImageData and optionally writes it to the save directory.",
                            descriptiont = {
                                jp = "ImageData の符号化を行いセーブ・ディレクトリへ書き込みます。",
                                pt = "Codifica um ImageData."
                            },
                            minidescriptiont = {
                                jp = "ImageData の符号化を行います。",
                                pt = "Codifica um ImageData."
                            },
                            name = "encode",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The format to encode the image as.",
                                            descriptiont = {
                                                jp = "画像の符号化形式。"
                                            },
                                            name = "format",
                                            type = "ImageFormat"
                                        },
                                        {
                                            default = "nil",
                                            description = "The filename to write the file to. If nil, no file will be written but the FileData will still be returned.",
                                            descriptiont = {
                                                jp = "ファイル出力先のファイル名称。 nil の場合はファイルの出力を行わずに FileData のまま返します。"
                                            },
                                            name = "filename",
                                            type = "string"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The encoded image as a new FileData object.",
                                            descriptiont = {
                                                jp = "新規 FileData オブジェクトとして符号化された画像。"
                                            },
                                            name = "filedata",
                                            type = "FileData"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width and height of the ImageData in pixels.",
                            descriptiont = {
                                jp = "ImageData の幅と高さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "ImageData の幅と高さを取得します。"
                            },
                            name = "getDimensions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the ImageData in pixels.",
                                            descriptiont = {
                                                jp = "ImageData の幅を取得します。"
                                            },
                                            name = "width",
                                            type = "number"
                                        },
                                        {
                                            description = "The height of the ImageData in pixels.",
                                            descriptiont = {
                                                jp = "ImageData の高さを取得します。"
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the height of the ImageData in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で ImageData の高さを取得します。",
                                pt = "Obtém a altura de um ImageData."
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位で ImageData の高さを取得します。",
                                pt = "Obtém a altura de um ImageData."
                            },
                            name = "getHeight",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The height of the ImageData in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位による ImageData の高さ。",
                                                pt = "A altura do ImageData."
                                            },
                                            name = "height",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the color of a pixel at a specific position in the image.\n\nValid x and y values start at 0 and go up to image width and height minus 1. Non-integer values are floored.",
                            descriptiont = {
                                jp = "画像において指定された座標にあるピクセルの色を取得します。\n\n有効な x および y の値は 0 を始点として画像の幅および高さの -1 以下までです。非整数値は切り捨てられます。",
                                pt = "Obtém o dados do pixel de uma posição específica."
                            },
                            minidescriptiont = {
                                jp = "ピクセルの色を取得します。",
                                pt = "Obtém o dados do pixel de uma posição específica."
                            },
                            name = "getPixel",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The position of the pixel on the x-axis.",
                                            descriptiont = {
                                                jp = "X 軸上のピクセル位置。",
                                                pt = "A posição do pixel no eixo x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the pixel on the y-axis.",
                                            descriptiont = {
                                                jp = "Y 軸上のピクセル位置。",
                                                pt = "A posição do pixel no eixo y."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The red component (0-255).",
                                            descriptiont = {
                                                jp = "赤色の成分 (0-255)",
                                                pt = "A componente vermelho (0-255)."
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            description = "The green component (0-255).",
                                            descriptiont = {
                                                jp = "緑色の成分 (0-255)",
                                                pt = "A componente verde (0-255)."
                                            },
                                            name = "g",
                                            type = "number"
                                        },
                                        {
                                            description = "The blue component (0-255).",
                                            descriptiont = {
                                                jp = "青色の成分 (0-255)",
                                                pt = "A componente azul (0-255)."
                                            },
                                            name = "b",
                                            type = "number"
                                        },
                                        {
                                            description = "The alpha component (0-255).",
                                            descriptiont = {
                                                jp = "透過の成分 (0-255)",
                                                pt = "A componente alpha (0-255)."
                                            },
                                            name = "a",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the width of the ImageData in pixels.",
                            descriptiont = {
                                jp = "ピクセル単位で ImageData の幅を取得します。",
                                pt = "Obtém a largura de um ImageData."
                            },
                            minidescriptiont = {
                                jp = "ピクセル単位で ImageData の幅を取得します。",
                                pt = "Obtém a largura de um ImageData."
                            },
                            name = "getWidth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The width of the ImageData in pixels.",
                                            descriptiont = {
                                                jp = "ピクセル単位による ImageData の幅さ。",
                                                pt = "A largura de um ImageData."
                                            },
                                            name = "width",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Transform an image by applying a function to every pixel.\n\nThis function is a higher order function. It takes another function as a parameter, and calls it once for each pixel in the ImageData.\n\nThe function parameter is called with six parameters for each pixel in turn. The parameters are numbers that represent the x and y coordinates of the pixel and its red, green, blue and alpha values. The function parameter can return up to four number values, which become the new r, g, b and a values of the pixel. If the function returns fewer values, the remaining components are set to 0.",
                            descriptiont = {
                                jp = "全ピクセルへ関数を適用して画像を変形します。\n\nこの関数は高次関数です。別の関数を引数として扱い、ImageData にある各ピクセルに対して一括で呼び出します。\n\n渡されたは関数へ各ピクセルの順番により 6 つの引数から呼ばれます。引数はピクセルの x と y 座標および赤、緑、青、および透過の値を数値として表記したものです。関数はピクセルに対して赤、緑、青、および透過の値を返します。\n\n&lt;source lang=\"lua\"&gt;\n\nfunction pixelFunction(x, y, r, g, b, a)\n\n    -- ピクセル・マッピング関数を定義するための雛形です。\n\n    -- ここで r, g, b および a へ新しい値を与えるための演算を行います\n\n    -- ...\n\n    return r, g, b, a\n\nend\n\n&lt;/source&gt;",
                                pt = "Transforma uma imagem através da aplicação de uma função em todos os pixels.\n\nEsta função é uma função de alta ordem. Ela recebe outra função como um parâmetro e chama essa função para cada pixel no ImageData.\n\nA função parâmetro é chamada com seis parâmetros para cada pixel. Os parâmetros são números que representam as coordenadas x e y do pixel e os valores dos componentes vermelho, verde, azul e alpha. A função parâmetro pode retornar até quadro valores que são os novos valores das componentes r, g, b e a para o pixel. Se a função retornar menos valores, os demais componentes são configurados para 0."
                            },
                            minidescriptiont = {
                                jp = "全ピクセルへ関数を適用して画像を変形します。",
                                pt = "Transforma uma imagem através da aplicação de uma função em todos os pixels."
                            },
                            name = "mapPixel",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Function parameter to apply to every pixel.",
                                            descriptiont = {
                                                jp = "全ピクセルへ適用する関数の引数。",
                                                pt = "Função parâmetro a ser aplicada em todos os pixels."
                                            },
                                            name = "pixelFunction",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Paste into ImageData from another source ImageData.",
                            descriptiont = {
                                jp = "別のソースの ImageData から ImageData へ貼り付けます。",
                                pt = "Cola em um ImageData a partir de uma outra ImageData."
                            },
                            minidescriptiont = {
                                jp = "別のソースの ImageData から ImageData へ貼り付けます。",
                                pt = "Cola em um ImageData a partir de uma outra ImageData."
                            },
                            name = "paste",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Source ImageData from which to copy.",
                                            descriptiont = {
                                                jp = "複製を行う転送元の ImageData です。",
                                                pt = "A fonte ImageData de onde será feita a cópia."
                                            },
                                            name = "source",
                                            type = "ImageData"
                                        },
                                        {
                                            description = "Destination top-left position on x-axis.",
                                            descriptiont = {
                                                jp = "転送先において左上角からの x 軸における位置。",
                                                pt = "Posição superior esquerda do destino no eixo x."
                                            },
                                            name = "dx",
                                            type = "number"
                                        },
                                        {
                                            description = "Destination top-left position on y-axis.",
                                            descriptiont = {
                                                jp = "転送先において左上角からの y 軸における位置。",
                                                pt = "Posição superior esquerda do destino no eixo y."
                                            },
                                            name = "dy",
                                            type = "number"
                                        },
                                        {
                                            description = "Source top-left position on x-axis.",
                                            descriptiont = {
                                                jp = "転送元において左上角からの x 軸における位置。",
                                                pt = "Posição superior esquerda da fonte no eixo x."
                                            },
                                            name = "sx",
                                            type = "number"
                                        },
                                        {
                                            description = "Source top-left position on y-axis.",
                                            descriptiont = {
                                                jp = "転送元において左上角からの y 軸における位置。",
                                                pt = "Posição superior esquerda da fonte no eixo y."
                                            },
                                            name = "sy",
                                            type = "number"
                                        },
                                        {
                                            description = "Source width.",
                                            descriptiont = {
                                                jp = "転送元の幅。",
                                                pt = "Largura da fonte."
                                            },
                                            name = "sw",
                                            type = "number"
                                        },
                                        {
                                            description = "Source height.",
                                            descriptiont = {
                                                jp = "転送元の高さ。",
                                                pt = "Altura da fonte."
                                            },
                                            name = "sh",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the color of a pixel at a specific position in the image.\n\nValid x and y values start at 0 and go up to image width and height minus 1.",
                            descriptiont = {
                                jp = "画像において指定された座標にあるピクセルの色を設定します。\n\n有効な x および y の値は 0 を始点として画像の幅および高さの -1 以下までです。",
                                pt = "Configura a cor de um pixel."
                            },
                            minidescriptiont = {
                                jp = "ピクセルの色を設定します。",
                                pt = "Configura a cor de um pixel."
                            },
                            name = "setPixel",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The position of the pixel on the x-axis.",
                                            descriptiont = {
                                                jp = "X 軸上のピクセル位置。",
                                                pt = "A posição do pixel no eixo x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The position of the pixel on the y-axis.",
                                            descriptiont = {
                                                jp = "Y 軸上のピクセル位置。",
                                                pt = "A posição do pixel no eixo y."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The red component (0-255).",
                                            descriptiont = {
                                                jp = "赤色の成分 (0-255)",
                                                pt = "A componente vermelho (0-255)."
                                            },
                                            name = "r",
                                            type = "number"
                                        },
                                        {
                                            description = "The green component (0-255).",
                                            descriptiont = {
                                                jp = "緑色の成分 (0-255)",
                                                pt = "A componente verde (0-255)."
                                            },
                                            name = "g",
                                            type = "number"
                                        },
                                        {
                                            description = "The blue component (0-255).",
                                            descriptiont = {
                                                jp = "青色の成分 (0-255)",
                                                pt = "A componente azul (0-255)."
                                            },
                                            name = "b",
                                            type = "number"
                                        },
                                        {
                                            description = "The alpha component (0-255).",
                                            descriptiont = {
                                                jp = "透過の成分 (0-255)",
                                                pt = "A componente alpha (0-255)."
                                            },
                                            name = "a",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Dados de imagens brutos (decodificados)."
                    },
                    name = "ImageData",
                    parenttype = "Data",
                    supertypes = {
                        "Data",
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides an interface to the user's joystick.",
            enums = {
                {
                    constants = {
                        {
                            description = "The x-axis of the left thumbstick.",
                            descriptiont = {
                                jp = "左側のサムスティックの x-軸。",
                                ko = "좌측 스틱의 x축."
                            },
                            name = "leftx"
                        },
                        {
                            description = "The y-axis of the left thumbstick.",
                            descriptiont = {
                                jp = "左側のサムスティックの y-軸。",
                                ko = "좌측 스틱의 y축."
                            },
                            name = "lefty"
                        },
                        {
                            description = "The x-axis of the right thumbstick.",
                            descriptiont = {
                                jp = "右側のサムスティックの x-軸。",
                                ko = "우측 스틱의 x축."
                            },
                            name = "rightx"
                        },
                        {
                            description = "The y-axis of the right thumbstick.",
                            descriptiont = {
                                jp = "右側のサムスティックの y-軸。",
                                ko = "우측 스틱의 y축."
                            },
                            name = "righty"
                        },
                        {
                            description = "Left analog trigger.",
                            descriptiont = {
                                jp = "左側のアナログトリガー。",
                                ko = "왼쪽 아날로그 트리거."
                            },
                            name = "triggerleft"
                        },
                        {
                            description = "Right analog trigger.",
                            descriptiont = {
                                jp = "右側のアナログトリガー。",
                                ko = "오른쪽 아날로그 트리거."
                            },
                            name = "triggerright"
                        }
                    },
                    description = "Virtual gamepad axes.",
                    descriptiont = {
                        jp = "仮想ゲームパッドの軸。",
                        ko = "가상 게임패드에서 지원하는 조이스틱 축의 종류입니다."
                    },
                    minidescriptiont = {
                        jp = "仮想ゲームパッドの軸。",
                        ko = "가상 게임패드에서 지원하는 조이스틱 축의 종류입니다."
                    },
                    name = "GamepadAxis"
                },
                {
                    constants = {
                        {
                            description = "Bottom face button (A).",
                            descriptiont = {
                                jp = "下面ボタン (A)。",
                                ko = "A 버튼(아래쪽)."
                            },
                            name = "a"
                        },
                        {
                            description = "Right face button (B).",
                            descriptiont = {
                                jp = "右面ボタン (B)。",
                                ko = "B 버튼(오른쪽)."
                            },
                            name = "b"
                        },
                        {
                            description = "Left face button (X).",
                            descriptiont = {
                                jp = "左面ボタン (X)。",
                                ko = "X 버튼(왼쪽)."
                            },
                            name = "x"
                        },
                        {
                            description = "Top face button (Y).",
                            descriptiont = {
                                jp = "上面ボタン (Y)。",
                                ko = "Y 버튼(위쪽)."
                            },
                            name = "y"
                        },
                        {
                            description = "Back button.",
                            descriptiont = {
                                jp = "戻るボタン",
                                ko = "뒤로 버튼."
                            },
                            name = "back"
                        },
                        {
                            description = "Guide button.",
                            descriptiont = {
                                jp = "ガイドボタン。",
                                ko = "가이드 버튼."
                            },
                            name = "guide"
                        },
                        {
                            description = "Start button.",
                            descriptiont = {
                                jp = "スタートボタン。",
                                ko = "시작 버튼."
                            },
                            name = "start"
                        },
                        {
                            description = "Left stick click button.",
                            descriptiont = {
                                jp = "左スティックのクリックボタン。",
                                ko = "좌측 스틱 누름 버튼."
                            },
                            name = "leftstick"
                        },
                        {
                            description = "Right stick click button.",
                            descriptiont = {
                                jp = "右スティックのクリックボタン。",
                                ko = "우측 스틱 누름 버튼."
                            },
                            name = "rightstick"
                        },
                        {
                            description = "Left bumper.",
                            descriptiont = {
                                jp = "左パンパー。",
                                ko = "왼쪽 범퍼."
                            },
                            name = "leftshoulder"
                        },
                        {
                            description = "Right bumper.",
                            descriptiont = {
                                jp = "右パンパー。",
                                ko = "오른쪽 범퍼."
                            },
                            name = "rightshoulder"
                        },
                        {
                            description = "D-pad up.",
                            descriptiont = {
                                jp = "D-パッドの上。",
                                ko = "방향 패드 위쪽."
                            },
                            name = "dpup"
                        },
                        {
                            description = "D-pad down.",
                            descriptiont = {
                                jp = "D-パッドの下。",
                                ko = "방향 패드 아래쪽."
                            },
                            name = "dpdown"
                        },
                        {
                            description = "D-pad left.",
                            descriptiont = {
                                jp = "D-パッドの左。",
                                ko = "방향 패드 왼쪽."
                            },
                            name = "dpleft"
                        },
                        {
                            description = "D-pad right.",
                            descriptiont = {
                                jp = "D-パッドの右。",
                                ko = "방향 패드 오른쪽."
                            },
                            name = "dpright"
                        }
                    },
                    description = "Virtual gamepad buttons.",
                    descriptiont = {
                        jp = "仮想ゲームパッドのボタン。",
                        ko = "가상 게임패드에서 지원하는 조이스틱 버튼의 종류입니다."
                    },
                    minidescriptiont = {
                        jp = "仮想ゲームパッドのボタン。",
                        ko = "가상 게임패드에서 지원하는 조이스틱 버튼의 종류입니다."
                    },
                    name = "GamepadButton"
                },
                {
                    constants = {
                        {
                            description = "Centered",
                            descriptiont = {
                                jp = "中央",
                                ko = "가운데"
                            },
                            name = "c"
                        },
                        {
                            description = "Down",
                            descriptiont = {
                                jp = "下",
                                ko = "아래"
                            },
                            name = "d"
                        },
                        {
                            description = "Left",
                            descriptiont = {
                                jp = "左",
                                ko = "왼쪽"
                            },
                            name = "l"
                        },
                        {
                            description = "Left+Down",
                            descriptiont = {
                                jp = "左下",
                                ko = "왼쪽 아래"
                            },
                            name = "ld"
                        },
                        {
                            description = "Left+Up",
                            descriptiont = {
                                jp = "左上",
                                ko = "왼쪽 위"
                            },
                            name = "lu"
                        },
                        {
                            description = "Right",
                            descriptiont = {
                                jp = "右",
                                ko = "오른쪽"
                            },
                            name = "r"
                        },
                        {
                            description = "Right+Down",
                            descriptiont = {
                                jp = "右下",
                                ko = "오른쪽 아래"
                            },
                            name = "rd"
                        },
                        {
                            description = "Right+Up",
                            descriptiont = {
                                jp = "右上",
                                ko = "오른쪽 위"
                            },
                            name = "ru"
                        },
                        {
                            description = "Up",
                            descriptiont = {
                                jp = "上",
                                ko = "위"
                            },
                            name = "u"
                        }
                    },
                    description = "Joystick hat positions.",
                    descriptiont = {
                        jp = "ジョイスティックのハットの位置。",
                        ko = "조이스틱 햇의 위치를 표현합니다.\n\n조이스틱 햇은 조이스틱 입력 종류중 하나로서, 8방향을 가진 입력을 추상적으로 표현합니다. 대표적으로는 오락실의 조종 스틱이 있습니다. 조이스틱 축과는 달리 해당 방향으로의 많고 적음을 표현할 수 없습니다."
                    },
                    minidescriptiont = {
                        jp = "ジョイスティックのハットの位置。",
                        ko = "조이스틱 햇의 위치를 표현합니다."
                    },
                    name = "JoystickHat"
                },
                {
                    constants = {
                        {
                            description = "Analog axis.",
                            descriptiont = {
                                jp = "アナログの軸。",
                                ko = "아날로그 축 입력. 대표적으로 Xbox 360 컨트롤러의 좌 우측 스틱이 있으며 세밀한 이동까지도 감지."
                            },
                            name = "axis"
                        },
                        {
                            description = "Button.",
                            descriptiont = {
                                jp = "ボタン。",
                                ko = "버튼 입력."
                            },
                            name = "button"
                        },
                        {
                            description = "8-direction hat value.",
                            descriptiont = {
                                jp = "8-方向 ハット の値",
                                ko = "8방향 햇 입력. 대표적으로 오락실의 조종 스틱이 있으며 축에 비해 정교하지 못함."
                            },
                            name = "hat"
                        }
                    },
                    description = "Types of Joystick inputs.",
                    descriptiont = {
                        jp = "ジョイスティックの入力の種類。",
                        ko = "조이스틱 입력의 종류입니다."
                    },
                    minidescriptiont = {
                        jp = "ジョイスティックの入力の種類。",
                        ko = "조이스틱 입력의 종류입니다."
                    },
                    name = "JoystickInputType"
                }
            },
            functions = {
                {
                    description = "Gets the number of connected joysticks.",
                    descriptiont = {
                        jp = "接続されているジョイスティックの本数を取得します。",
                        ko = "연결된 조이스틱의 개수를 구합니다."
                    },
                    minidescriptiont = {
                        jp = "接続されているジョイスティックの本数を取得します。",
                        ko = "연결된 조이스틱의 개수를 구합니다."
                    },
                    name = "getJoystickCount",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The number of connected joysticks.",
                                    descriptiont = {
                                        jp = "接続されているジョイスティックの本数",
                                        ko = "연결된 조이스틱의 개수."
                                    },
                                    name = "joystickcount",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets a list of connected Joysticks.",
                    descriptiont = {
                        jp = "接続されているジョイスティックの一覧を取得します。",
                        ko = "연결된 조이스틱 리스트를 얻어옵니다."
                    },
                    minidescriptiont = {
                        jp = "接続されているジョイスティックの一覧を取得します。",
                        ko = "연결된 조이스틱 리스트를 얻어옵니다."
                    },
                    name = "getJoysticks",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The list of currently connected Joysticks.",
                                    descriptiont = {
                                        jp = "現在接続されている Joystick の一覧。",
                                        ko = "연결된 조이스틱 리스트."
                                    },
                                    name = "joysticks",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Loads a gamepad mappings string or file created with love.joystick.saveGamepadMappings.",
                    descriptiont = {
                        jp = "love.joystick.saveGamepadMappings により作成されたゲームパッド・マッピングの文字列またはファイルを読み込みます。\n\n例えば Steam におけるコントローラー構成インタフェースの全体像、またはこの優良なデータベースにから作成されたものなども同様に、任意の SDL ゲームコントローラ・マッピング文字列として認識します。"
                    },
                    minidescriptiont = {
                        jp = "ゲームパッド・マッピングを読み込みます。"
                    },
                    name = "loadGamepadMappings",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filename to load the mappings string from.",
                                    descriptiont = {
                                        jp = "マッピングとして読み込む文字列。"
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            descriptiont = {
                                jp = "文字列から直接的にゲームパッド・マッピングを読み込みます。"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The mappings string to load.",
                                    descriptiont = {
                                        jp = "マッピングとして読み込む文字列。"
                                    },
                                    name = "mappings",
                                    type = "string"
                                }
                            },
                            descriptiont = {
                                jp = "文字列から直接的にゲームパッド・マッピングを読み込みます。"
                            }
                        }
                    }
                },
                {
                    description = "Saves the virtual gamepad mappings of all Joysticks that are recognized as gamepads and have either been recently used or their gamepad bindings have been modified.",
                    descriptiont = {
                        jp = "ゲームパッドとして認識されており最近使用されたかゲームパッドの割り当てが変更されたかのいずれかにおいて全てのジョイスティックの仮想ゲームパッド・マッピングを保存します。\n\nマッピングは love.joystick.loadGamepadMappings にて使用するために格納されます。"
                    },
                    minidescriptiont = {
                        jp = "仮想ゲームパッド・マッピングを保存します。"
                    },
                    name = "saveGamepadMappings",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filename to save the mappings string to.",
                                    descriptiont = {
                                        jp = "ファイル名へ保存するマッピング文字列。"
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            descriptiont = {
                                jp = "ファイルへ全ての関連するジョイスティックのゲームパッド・マッピングを保存します。"
                            },
                            returns = {
                                {
                                    description = "The mappings string that was written to the file.",
                                    descriptiont = {
                                        jp = "ファイルへ書きこまれたマッピング文字列。"
                                    },
                                    name = "mappings",
                                    type = "string"
                                }
                            }
                        },
                        {
                            descriptiont = {
                                jp = "ファイルへの書き込みを行わずにマッピング文字列を返します。}}"
                            },
                            returns = {
                                {
                                    description = "The mappings string.",
                                    descriptiont = {
                                        jp = "マッピング文字列。"
                                    },
                                    name = "mappings",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Binds a virtual gamepad input to a button, axis or hat for all Joysticks of a certain type. For example, if this function is used with a GUID returned by a Dualshock 3 controller in OS X, the binding will affect Joystick:getGamepadAxis and Joystick:isGamepadDown for all Dualshock 3 controllers used with the game when run in OS X.\n\nLÖVE includes built-in gamepad bindings for many common controllers. This function lets you change the bindings or add new ones for types of Joysticks which aren't recognized as gamepads by default.\n\nThe virtual gamepad buttons and axes are designed around the Xbox 360 controller layout.",
                    descriptiont = {
                        jp = "ある種類のジョイスティックの全てのボタン、軸またはハットを仮想ゲームパッドの入力へ割り当てます。例えば、この関数が OS X で接続されている Dualshock 3 コントローラー から返された GUID を使用する場合、 OS X で実行するゲームにおいて''全ての'' Dualshock 3 コントローラー は Joystick:getGamepadAxis および Joystick:isGamepadDown の割り当てに影響します。\n\nLÖVE は一般的なコントローラー向けのゲームパッドの割り当てを多く内蔵しています。この関数は割り当てを変更したり標準ではゲームパッドとして認識されないジョイスティックの種類用に割り当てを新規追加できます。\n\n仮想ゲームパッドのボタンおよび軸は Xbox 360 コントローラーの配列を想定して設計されてます。",
                        ko = "조이스틱 버튼, 축, 햇을 가상 게임패드에 매핑합니다. 매핑된 조이스틱은 가상 게임패드의 동작과 호환되어 가상 게임패드 관련 함수를 호출할 수 있게 됩니다.\n\nLÖVE에서는 잘 알려져 있는 여러 조이스틱에 대한 매핑 방법을 이미 가지고 있습니다.    이 함수는 LÖVE에서 지원하지 않는 조이스틱을 가상 게임패드에 매핑시킬 때 사용합니다. 만약 여러분의 게임이 좀 더 범용적으로 조이스틱을 지원하고 싶다면, 이 함수를 응용해 사용자가 직접 조이스틱을 매핑할 수 있는 옵션 화면을 만들어 보세요.\n\n가상 게임패드의 조이스틱 축과 버튼은 Xbox 360 컨트롤러에 맞추어져 있습니다."
                    },
                    minidescriptiont = {
                        jp = "ボタン、軸またはハットを仮想ゲームパッドの入力へ割り当てます。",
                        ko = "조이스틱 버튼, 축, 햇을 가상 게임패드에 매핑합니다."
                    },
                    name = "setGamepadMapping",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The OS-dependent GUID for the type of Joystick the binding will affect.",
                                    descriptiont = {
                                        jp = "ジョイスティックの種類の割り当てに影響する OS 依存の GUID を指定します。",
                                        ko = "매핑할 조이스틱의 GUID."
                                    },
                                    name = "guid",
                                    type = "string"
                                },
                                {
                                    description = "The virtual gamepad button to bind.",
                                    descriptiont = {
                                        jp = "割り当て先の仮想ゲームパッドのボタン。",
                                        ko = "매핑할 가상 게임패드 지원 조이스틱 버튼."
                                    },
                                    name = "button",
                                    type = "GamepadButton"
                                },
                                {
                                    description = "The type of input to bind the virtual gamepad button to.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドのボタンへ割り当てる入力の種類。",
                                        ko = "매핑할 입력 방식."
                                    },
                                    name = "inputtype",
                                    type = "JoystickInputType"
                                },
                                {
                                    description = "The index of the axis, button, or hat to bind the virtual gamepad button to.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドのボタンへ割り当てるジョイスティックの軸、ボタン、またはハットの番号。",
                                        ko = "매핑할 조이스틱 축, 버튼, 햇의 인덱스."
                                    },
                                    name = "inputindex",
                                    type = "number"
                                },
                                {
                                    description = "The direction of the hat, if the virtual gamepad button will be bound to a hat. nil otherwise.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドのボタンへハットが割り当てられている場合はハットの方向。それ以外は nil です。",
                                        ko = "매핑할 조이스틱 햇의 방향. 햇이 아니라면 nil."
                                    },
                                    name = "hatdirection",
                                    type = "JoystickHat"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the virtual gamepad button was successfully bound.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドのボタンへの割り当てが成功したかどうか。",
                                        ko = "성공적으로 적용되었으면 true."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The OS-dependent GUID for the type of Joystick the binding will affect.",
                                    descriptiont = {
                                        jp = "ジョイスティックの種類の割り当てに影響する OS 依存の GUID を指定します。",
                                        ko = "매핑할 조이스틱의 GUID."
                                    },
                                    name = "guid",
                                    type = "string"
                                },
                                {
                                    description = "The virtual gamepad axis to bind.",
                                    descriptiont = {
                                        jp = "割り当て先の仮想ゲームパッドの軸。",
                                        ko = "매핑할 가상 게임패드 지원 조이스틱 축."
                                    },
                                    name = "axis",
                                    type = "GamepadAxis"
                                },
                                {
                                    description = "The type of input to bind the virtual gamepad axis to.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドの軸へ割り当てる入力の種類。",
                                        ko = "매핑할 입력 방식."
                                    },
                                    name = "inputtype",
                                    type = "JoystickInputType"
                                },
                                {
                                    description = "The index of the axis, button, or hat to bind the virtual gamepad axis to.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドの軸へ割り当てるジョイスティックの軸、ボタン、またはハットの番号。",
                                        ko = "매핑할 조이스틱 축, 버튼, 햇의 인덱스."
                                    },
                                    name = "inputindex",
                                    type = "number"
                                },
                                {
                                    description = "The direction of the hat, if the virtual gamepad axis will be bound to a hat. nil otherwise.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドの軸へハットが割り当てられている場合はハットの方向。それ以外は nil です。",
                                        ko = "매핑할 조이스틱 햇의 방향. 햇이 아니라면 nil."
                                    },
                                    name = "hatdirection",
                                    type = "JoystickHat"
                                }
                            },
                            descriptiont = {
                                ko = "조이스틱을 위한 가상 게임패드 호환 조이스틱 축과 버튼의 물리적 위치는 가능한 한 표준 Xbox 360 컨트롤러의 구성에 부합하는 것이 좋습니다.\n\nFile:360_controller.png"
                            },
                            returns = {
                                {
                                    description = "Whether the virtual gamepad button was successfully bound.",
                                    descriptiont = {
                                        jp = "仮想ゲームパッドの軸への割り当てが成功したかどうか。",
                                        ko = "성공적으로 적용되었으면 true."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                }
            },
            name = "joystick",
            types = {
                {
                    constructors = {
                        "getJoysticks"
                    },
                    description = "Represents a physical joystick.",
                    descriptiont = {
                        de = "Repräsentiert einen realen Joystick.",
                        jp = "物理ジョイスティックを提供します。",
                        ko = "물리적 조이스틱을 표현합니다. 일관적인 처리를 위해 조이스틱을 가상 게임패드(Xbox 360 컨트롤러)에 대응시켜 사용할 수 있습니다."
                    },
                    functions = {
                        {
                            description = "Gets the direction of each axis.",
                            descriptiont = {
                                jp = "各軸の方向を返します。",
                                ko = "모든 조이스틱 축의 위치를 얻어옵니다."
                            },
                            minidescriptiont = {
                                jp = "各軸の方向を返します。",
                                ko = "모든 조이스틱 축의 위치를 얻어옵니다."
                            },
                            name = "getAxes",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Direction of axis1.",
                                            descriptiont = {
                                                jp = "軸 1 の方向。",
                                                ko = "첫 번째 축."
                                            },
                                            name = "axisDir1",
                                            type = "number"
                                        },
                                        {
                                            description = "Direction of axis2.",
                                            descriptiont = {
                                                jp = "軸 2 の方向。",
                                                ko = "두 번째 축."
                                            },
                                            name = "axisDir2",
                                            type = "number"
                                        },
                                        {
                                            description = "Direction of axisN.",
                                            descriptiont = {
                                                jp = "軸 N の方向。",
                                                ko = "n번째 축."
                                            },
                                            name = "axisDirN",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the direction of an axis.",
                            descriptiont = {
                                jp = "軸の方向を返します。",
                                ko = "조이스틱 축의 위치를 하나 얻어옵니다."
                            },
                            minidescriptiont = {
                                jp = "軸の方向を返します。",
                                ko = "조이스틱 축의 위치를 하나 얻어옵니다."
                            },
                            name = "getAxis",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the axis to be checked.",
                                            descriptiont = {
                                                jp = "確認をしたい軸。",
                                                ko = "얻어올 조이스틱 축의 인덱스."
                                            },
                                            name = "axis",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Current value of the axis.",
                                            descriptiont = {
                                                jp = "軸の現在値。",
                                                ko = "축의 값."
                                            },
                                            name = "direction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the number of axes on the joystick.",
                            descriptiont = {
                                jp = "ジョイスティックに実装されている軸の個数を取得します。",
                                ko = "조이스틱 축의 개수를 얻어옵니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックに実装されている軸の個数を取得します。",
                                ko = "조이스틱 축의 개수를 얻어옵니다."
                            },
                            name = "getAxisCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of axes available.",
                                            descriptiont = {
                                                jp = "利用可能な軸の個数。",
                                                ko = "조이스틱 축의 개수."
                                            },
                                            name = "axes",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the number of buttons on the joystick.",
                            descriptiont = {
                                jp = "ジョイスティックに実装されているボタンの個数を取得します。",
                                ko = "조이스틱 버튼의 개수를 얻어옵니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックに実装されているボタンの個数を取得します。",
                                ko = "조이스틱 버튼의 개수를 얻어옵니다."
                            },
                            name = "getButtonCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of buttons available.",
                                            descriptiont = {
                                                jp = "利用可能なボタンの個数。",
                                                ko = "조이스틱 버튼의 개수."
                                            },
                                            name = "buttons",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a stable GUID unique to the type of the physical joystick which does not change over time. For example, all Sony Dualshock 3 controllers in OS X have the same GUID. The value is platform-dependent.",
                            descriptiont = {
                                jp = "物理的なジョイスティックの機種に基づく時間変化のない固定された固有 GUID を取得します。例えば 全ての Sony Dualshock 3 コントローラー は OS X において 同一の GUID を持ちます。この値はプラットフォームに依存します。",
                                ko = "물리적 조이스틱의 고유한 GUID를 얻어옵니다. 이 GUID는 제품의 종류를 구별하는 데 쓰일 수 있습니다. 제품 각각을 구별하는 것이 아님을 유의하세요. 또한 이 값은 운영 체제에 의존적이기도 합니다."
                            },
                            minidescriptiont = {
                                jp = "物理的なジョイスティックの機種に基づく固定された固有 GUID を取得します。",
                                ko = "물리적 조이스틱의 고유한 GUID를 얻어옵니다."
                            },
                            name = "getGUID",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Joystick type's OS-dependent unique identifier.",
                                            descriptiont = {
                                                jp = "ジョイスティックの機種に基づくOS 依存の固有識別子。",
                                                ko = "운영 체제에 의존적인 GUID."
                                            },
                                            name = "guid",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the direction of a virtual gamepad axis. If the Joystick isn't recognized as a gamepad or isn't connected, this function will always return 0.",
                            descriptiont = {
                                jp = "仮想ゲームパッドの軸の方向を取得します。ジョイスティックがゲームパッドとして認識できないか未接続の場合は、この関数は常に 0 を返します。",
                                ko = "가상 게임패드 호환 조이스틱 축을 얻어옵니다. 조이스틱이 가상 게임패드로 여겨지지 않거나 연결되지 않았을 경우, 이 함수는 항상 0을 리턴합니다."
                            },
                            minidescriptiont = {
                                jp = "仮想ゲームパッドの軸の方向を取得します。",
                                ko = "가상 게임패드 호환 조이스틱 축을 얻어옵니다."
                            },
                            name = "getGamepadAxis",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The virtual axis to be checked.",
                                            descriptiont = {
                                                jp = "確認をしたい仮想軸。",
                                                ko = "확인할 가상 게임패드 호환 조이스틱 축."
                                            },
                                            name = "axis",
                                            type = "GamepadAxis"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Current value of the axis.",
                                            descriptiont = {
                                                jp = "軸の現在値。",
                                                ko = "축의 값."
                                            },
                                            name = "direction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the button, axis or hat that a virtual gamepad input is bound to.",
                            descriptiont = {
                                jp = "ボタン、軸またはハットを仮想ゲームパッドの入力への割り当てを取得します。",
                                ko = "가상 게임패드에 매핑된 조이스틱 버튼, 축, 햇을 구합니다."
                            },
                            minidescriptiont = {
                                jp = "ボタン、軸またはハットを仮想ゲームパッドの入力への割り当てを取得します。",
                                ko = "가상 게임패드에 매핑된 조이스틱 버튼, 축, 햇을 구합니다."
                            },
                            name = "getGamepadMapping",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The virtual gamepad axis to get the binding for.",
                                            descriptiont = {
                                                jp = "割り当てを取得したい仮想ゲームパッドの軸。",
                                                ko = "매핑을 확인할 가상 게임패드 지원 조이스틱 축."
                                            },
                                            name = "axis",
                                            type = "GamepadAxis"
                                        }
                                    },
                                    descriptiont = {
                                        ko = "조이스틱이 가상 게임패드로 여겨지지 않거나 가상 게임패드로 매핑된 적이 없다면 이 함수는 항상 nil를 리턴합니다."
                                    },
                                    returns = {
                                        {
                                            description = "The type of input the virtual gamepad axis is bound to.",
                                            descriptiont = {
                                                jp = "仮想ゲームパッドの軸へ割り当てた入力の種類。",
                                                ko = "매핑된 입력 방식."
                                            },
                                            name = "inputtype",
                                            type = "JoystickInputType"
                                        },
                                        {
                                            description = "The index of the Joystick's button, axis or hat that the virtual gamepad axis is bound to.",
                                            descriptiont = {
                                                jp = "仮想ゲームパッドの軸へ割り当てられたジョイスティックの軸、ボタン、またはハットの番号。",
                                                ko = "매핑된 조이스틱 축, 버튼, 햇의 인덱스."
                                            },
                                            name = "inputindex",
                                            type = "number"
                                        },
                                        {
                                            description = "The direction of the hat, if the virtual gamepad axis is bound to a hat. nil otherwise.",
                                            descriptiont = {
                                                jp = "仮想ゲームパッドの軸へハットが割り当てられている場合はハットの方向、それ以外は nil です。",
                                                ko = "매핑된 조이스틱 햇의 방향. 햇이 아니라면 nil."
                                            },
                                            name = "hatdirection",
                                            type = "JoystickHat"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The virtual gamepad button to get the binding for.",
                                            descriptiont = {
                                                jp = "割り当てを取得したい仮想ゲームパッドの軸。",
                                                ko = "매핑을 확인할 가상 게임패드 지원 조이스틱 축."
                                            },
                                            name = "button",
                                            type = "GamepadAxis"
                                        }
                                    },
                                    descriptiont = {
                                        ko = "조이스틱이 가상 게임패드로 여겨지지 않거나 가상 게임패드로 매핑된 적이 없다면 이 함수는 항상 nil를 리턴합니다."
                                    },
                                    returns = {
                                        {
                                            description = "The type of input the virtual gamepad button is bound to.",
                                            descriptiont = {
                                                jp = "仮想ゲームパッドの軸へ割り当てた入力の種類。",
                                                ko = "매핑된 입력 방식."
                                            },
                                            name = "inputtype",
                                            type = "JoystickInputType"
                                        },
                                        {
                                            description = "The index of the Joystick's button, axis or hat that the virtual gamepad button is bound to.",
                                            descriptiont = {
                                                jp = "仮想ゲームパッドの軸へ割り当てられたジョイスティックの軸、ボタン、またはハットの番号。",
                                                ko = "매핑된 조이스틱 축, 버튼, 햇의 인덱스."
                                            },
                                            name = "inputindex",
                                            type = "number"
                                        },
                                        {
                                            description = "The direction of the hat, if the virtual gamepad button is bound to a hat. nil otherwise.",
                                            descriptiont = {
                                                jp = "仮想ゲームパッドの軸へハットが割り当てられている場合はハットの方向、それ以外は nil です。",
                                                ko = "매핑된 조이스틱 햇의 방향. 햇이 아니라면 nil."
                                            },
                                            name = "hatdirection",
                                            type = "JoystickHat"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the direction of the Joystick's hat.",
                            descriptiont = {
                                jp = "ハットの方向を取得します。",
                                ko = "조이스틱 햇의 위치를 얻어옵니다."
                            },
                            minidescriptiont = {
                                jp = "ハットの方向を取得します。",
                                ko = "조이스틱 햇의 위치를 얻어옵니다."
                            },
                            name = "getHat",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the hat to be checked.",
                                            descriptiont = {
                                                jp = "ハットを確認するジョイスティックの番号。"
                                            },
                                            name = "hat",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The direction the hat is pushed.",
                                            descriptiont = {
                                                jp = "押されたハットの方向。"
                                            },
                                            name = "direction",
                                            type = "JoystickHat"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the number of hats on the joystick.",
                            descriptiont = {
                                jp = "ジョイスティックに実装されているハットの個数を返します。",
                                ko = "조이스틱 햇의 개수를 얻어옵니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックに実装されているハットの個数を返します。",
                                ko = "조이스틱 햇의 개수를 얻어옵니다."
                            },
                            name = "getHatCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "How many hats the joystick has.",
                                            descriptiont = {
                                                jp = "ジョイスティックに実装されているハットの個数。",
                                                ko = "조이스틱 햇의 개수."
                                            },
                                            name = "hats",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the joystick's unique identifier. The identifier will remain the same for the life of the game, even when the Joystick is disconnected and reconnected, but it will change when the game is re-launched.",
                            descriptiont = {
                                jp = "ジョイスティックの固有識別子を取得します。識別子の寿命はゲームの終了までであり、ジョイスティックを接続および再接続しても同一になりますが、ゲームを再起動すると'''変更されます。'''",
                                ko = "조이스틱 고유의 ID를 구합니다. 게임이 실행되는 동안 동일한 조이스틱이 연결 끊기와 재연결을 반복할지라도 ID는 변함이 없지만, 게임이 재실행 되었을 경우 ID가 동일할 것이라는 보장은 없습니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックの固有識別子を取得します。",
                                ko = "조이스틱 고유의 ID를 구합니다."
                            },
                            name = "getID",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Joystick's unique identifier. Remains the same as long as the game is running.",
                                            descriptiont = {
                                                jp = "ジョイスティックの固有識別子 ゲームの起動中は変更されません。",
                                                ko = "조이스틱 ID."
                                            },
                                            name = "id",
                                            type = "number"
                                        },
                                        {
                                            description = "Unique instance identifier. Changes every time the Joystick is reconnected. nil if the Joystick is not connected.",
                                            descriptiont = {
                                                jp = "インスタンスの固有識別子。ジョイスティックの再接時に毎回変更されます。 nil のときはジョイスティックは未接続です。",
                                                ko = "휘발성 ID. 조이스틱이 재연결될 때마다 매번 변함. 조이스틱이 한 번도 연결된 적이 없다면 nil."
                                            },
                                            name = "instanceid",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the name of the joystick.",
                            descriptiont = {
                                jp = "ジョイスティックの機器名を取得します。",
                                ko = "조이스틱의 이름을 구합니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックの機器名を取得します。",
                                ko = "조이스틱의 이름을 구합니다."
                            },
                            name = "getName",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The name of the joystick.",
                                            descriptiont = {
                                                jp = "ジョイスティックの機器名。",
                                                ko = "조이스틱 이름."
                                            },
                                            name = "name",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the current vibration motor strengths on a Joystick with rumble support.",
                            descriptiont = {
                                jp = "ジョイスティックがブルブル対応であれば現在の振動モーターの強さを取得します。",
                                ko = "현재 진동 모터의 진도를 구합니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックがブルブル対応であれば現在の振動モーターの強さを取得します。",
                                ko = "현재 진동 모터의 진도를 구합니다."
                            },
                            name = "getVibration",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Current strength of the left vibration motor on the Joystick.",
                                            descriptiont = {
                                                jp = "ジョイスティックに搭載されている現在の左側の振動モーターの強さ。",
                                                ko = "좌측 진동 모터의 진도."
                                            },
                                            name = "left",
                                            type = "number"
                                        },
                                        {
                                            description = "Current strength of the right vibration motor on the Joystick.",
                                            descriptiont = {
                                                jp = "ジョイスティックに搭載されている現在の右側の振動モーターの強さ。",
                                                ko = "우측 진동 모터의 진도."
                                            },
                                            name = "right",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Joystick is connected.",
                            descriptiont = {
                                jp = "ジョイスティックが接続されているかどうか取得します。",
                                ko = "조이스틱이 현재 연결되어 있는지 확인합니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックが接続されているかどうか取得します。",
                                ko = "조이스틱이 현재 연결되어 있는지 확인합니다."
                            },
                            name = "isConnected",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the Joystick is currently connected, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならばジョイスティックは現在は接続されており、 それ以外は false です。",
                                                ko = "조이스틱이 현재 연결되어 있으면 true."
                                            },
                                            name = "connected",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks if a button on the Joystick is pressed.\n\nLÖVE 0.9.0 had a bug which required the button indices passed to Joystick:isDown to be 0-based instead of 1-based, for example button 1 would be 0 for this function. It was fixed in 0.9.1.",
                            descriptiont = {
                                jp = "ジョイスティックのボタンが押されているか確認します。\n\nLÖVE 0.9.0 には不具合があり Joystick:isDown に渡されるボタンの番号が 1-基数ではなく 0-基数を要求されてしまいます。例えば、この関数ではボタン 1 は 0 に割り当てられてしまいます。これは 0.9.1 で修正済みです。",
                                ko = "조이스틱 버튼이 눌렸는지 확인합니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックのボタンが押されているか確認します。",
                                ko = "조이스틱 버튼이 눌렸는지 확인합니다."
                            },
                            name = "isDown",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of a button to check.",
                                            descriptiont = {
                                                jp = "確認をしたいボタンの番号。",
                                                ko = "확인할 조이스틱 버튼의 인덱스."
                                            },
                                            name = "...",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "True if any supplied button is down, false if not.",
                                            descriptiont = {
                                                jp = "True ならば指定された任意のボタンは押されており、それ以外ならば false です。",
                                                ko = "하나라도 눌려져 있으면 true."
                                            },
                                            name = "anyDown",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Joystick is recognized as a gamepad. If this is the case, the Joystick's buttons and axes can be used in a standardized manner across different operating systems and joystick models via Joystick:getGamepadAxis and related functions.\n\nLÖVE automatically recognizes most popular controllers with a similar layout to the Xbox 360 controller as gamepads, but you can add more with love.joystick.setGamepadMapping.",
                            descriptiont = {
                                jp = "ジョイスティックがゲームパッドとして認識されているかどうか取得します。この場合であれば、ジョイスティックのボタンおよび軸は Joystick:getGamepadAxis, Joystick:isGamepadDown, love.gamepadpressed, および関連する関数を経由することで様々なオペレーティングシス\n\nテムおよびジョイスティックの機種であっても標準化された方法を用いて使用できます。\n\nLÖVE は最も人気のあるコントローラーをXbox 360 コントローラーと同様のレイアウトのゲームパッドとして自動認識しますが、さらに love.joystick.setGamepadMapping により追加できます。",
                                ko = "조이스틱을 가상 게임 패드로 여길 수 있는지 확인합니다.\n\nLÖVE는 자동적으로 잘 알려져 있는 컨트롤러들의 레이아웃을 Xbox 360의 버튼과 축 위치에 맞게 자동으로 매핑합니다. 만약 자동으로 매핑되지 않는 컨트롤러를 매핑시키고 싶다면 love.joystick.setGamepadMapping을 사용하세요."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックがゲームパッドとして認識されているかどうか取得します。",
                                ko = "조이스틱을 가상 게임 패드로 여길 수 있는지 확인합니다"
                            },
                            name = "isGamepad",
                            variants = {
                                {
                                    descriptiont = {
                                        jp = "ジョイスティックがゲームパッドとして認識されたとき、物理的な配置は仮想ゲームパッドの軸およびボタンとして標準的な Xbox 360 コントローラーの配置に可能な限り緊密に対応させています。\n\nFile:360_controller.png\n\n== 関連 ==\n\n* parent::Joystick (日本語)\n\n* Joystick:getGamepadAxis (日本語)\n\n* Joystick:isGamepadDown (日本語)\n\n* Joystick:getGamepadMapping (日本語)\n\n* love.gamepadaxis (日本語)\n\n* love.gamepadpressed (日本語)\n\n* love.gamepadreleased (日本語)\n\nCategory:Functions\n\n{{#set:Since=090}}\n\n{{#set:PrettySince=0.9.0}}\n\n{{#set:Description=ジョイスティックがゲームパッドとして認識されているかどうか取得します。}}\n\n== そのほかの言語 ==",
                                        ko = "조이스틱을 위한 가상 게임패드 호환 조이스틱 축과 버튼의 물리적 위치는 가능한 한 표준 Xbox 360 컨트롤러의 구성에 부합하는 것이 좋습니다.\n\nFile:360_controller.png"
                                    },
                                    returns = {
                                        {
                                            description = "True if the Joystick is recognized as a gamepad, false otherwise.",
                                            descriptiont = {
                                                jp = "True ならばジョイスティックはゲームパッドとして認識されており、それ以外は false です。",
                                                ko = "가상 게임 패드로 여길 수 있다면 true."
                                            },
                                            name = "isgamepad",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks if a virtual gamepad button on the Joystick is pressed. If the Joystick is not recognized as a Gamepad or isn't connected, then this function will always return false.",
                            descriptiont = {
                                jp = "仮想ゲームパッドのボタンとしてジョイスティックが押されているか確認します。ジョイスティックがゲームパッドとして認識されていないか未接続ならば、この関数は常に false を返します。",
                                ko = "가상 게임패드 호환 조이스틱 버튼이 눌렸는지 확인합니다. 조이스틱이 가상 게임패드로 여겨지지 않거나 연결되지 않았을 경우, 이 함수는 항상 0을 리턴합니다."
                            },
                            minidescriptiont = {
                                jp = "仮想ゲームパッドのボタンとしてジョイスティックが押されているか確認します。",
                                ko = "가상 게임패드 호환 조이스틱 버튼이 눌렸는지 확인합니다."
                            },
                            name = "isGamepadDown",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The gamepad button to check.",
                                            descriptiont = {
                                                jp = "確認をしたいゲームパッドのボタン。",
                                                ko = "확인할 가상 게임패드 호환 조이스틱 버튼."
                                            },
                                            name = "...",
                                            type = "GamepadButton"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "True if any supplied button is down, false if not.",
                                            descriptiont = {
                                                jp = "true ならば用意された任意のボタンは押されており、それ以外ならば false です。",
                                                ko = "단 하나의 버튼이라도 눌려있으면 true."
                                            },
                                            name = "anyDown",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Joystick supports vibration.",
                            descriptiont = {
                                jp = "ジョイスティックが振動に対応しているか取得します。",
                                ko = "조이스틱이 진동을 지원하는지를 조사합니다."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックが振動に対応しているか取得します。",
                                ko = "조이스틱이 진동을 지원하는지를 조사합니다."
                            },
                            name = "isVibrationSupported",
                            variants = {
                                {
                                    descriptiont = {
                                        ko = "이 함수를 처음 호출할 경우 SDL's Haptic / Force Feedback subsystem의 초기화로 인해 상당한 시간이 소요될 수 있습니다. "
                                    },
                                    returns = {
                                        {
                                            description = "True if rumble / force feedback vibration is supported on this Joystick, false if not.",
                                            descriptiont = {
                                                jp = "true ならばこのジョイスティックはブルブル / フォース・フィードバックによる振動に対応しており、そうでなければ false です。",
                                                ko = "rumble / force feedback vibration이 지원되면 true."
                                            },
                                            name = "supported",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the vibration motor speeds on a Joystick with rumble support.",
                            descriptiont = {
                                jp = "ジョイスティックがブルブル対応であれば振動モーターの速度を設定します。これは一般的なゲームパッドの多くは動作しますが、すべてのドライバで適切に対応しているとは限りません。 Joystick:isVibrationSupported を使用して確認を行ってください。",
                                ko = "진동 모터의 진도를 설정해 진동을 일으킵니다. 대부분의 조이스틱은 적절한 드라이버의 적절한 지원 없이도 적절하게 잘 작동합니다. 사용하기에 앞서 Joystick:isVibrationSupported를 통해 진동 지원 여부를 확인하세요."
                            },
                            minidescriptiont = {
                                jp = "ジョイスティックがブルブル対応であれば振動モーターの速度を設定します。",
                                ko = "진동 모터의 진도를 설정해 진동을 일으킵니다."
                            },
                            name = "setVibration",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Strength of the left vibration motor on the Joystick. Must be in the range of [0, 1].",
                                            descriptiont = {
                                                jp = "ジョイスティックに実装されている左側の振動モーターの強度。必ず範囲は 1 にしてください。",
                                                ko = "좌측 모터의 진도. 범위는 1."
                                            },
                                            name = "left",
                                            type = "number"
                                        },
                                        {
                                            description = "Strength of the right vibration motor on the Joystick. Must be in the range of [0, 1].",
                                            descriptiont = {
                                                jp = "ジョイスティックに実装されている右側の振動モーターの強度。必ず範囲は 1 にしてください。",
                                                ko = "우측 모터의 진도. 범위는 1."
                                            },
                                            name = "right",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        ko = "만약 조이스틱이 하나의 진동 모터만을 가지고 있다면 좌측이나 우측 모터의 진도 중 가장 큰 값을 우선적으로 하여 적용됩니다.\n\nOS X에서 Xbox 360 컨트롤러는 수정된 Tattiebogle 드라이버를 사용해야만 진동이 지원됩니다.\n\n이 함수를 처음 호출할 경우 SDL's Haptic / Force Feedback subsystem의 초기화로 인해 상당한 시간이 소요될 수 있습니다."
                                    },
                                    returns = {
                                        {
                                            description = "True if the vibration was successfully applied, false if not.",
                                            descriptiont = {
                                                jp = "true ならば振動値の適用は成功であり、それ以外は false です。",
                                                ko = "성공적으로 적용되면 true."
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                },
                                {
                                    descriptiont = {
                                        jp = "振動を停止します。"
                                    },
                                    returns = {
                                        {
                                            description = "True if the vibration was successfully disabled, false if not.",
                                            descriptiont = {
                                                jp = "True ならば振動は正常に停止されており、そうでなければ false です。"
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "Strength of the left vibration motor on the Joystick. Must be in the range of [0, 1].",
                                            descriptiont = {
                                                jp = "ジョイスティックに実装されている左側の振動モーターの強度。必ず範囲は 1 にしてください。"
                                            },
                                            name = "left",
                                            type = "number"
                                        },
                                        {
                                            description = "Strength of the right vibration motor on the Joystick. Must be in the range of [0, 1].",
                                            descriptiont = {
                                                jp = "ジョイスティックに実装されている右側の振動モーターの強度。必ず範囲は 1 にしてください。"
                                            },
                                            name = "right",
                                            type = "number"
                                        },
                                        {
                                            description = "The duration of the vibration in seconds. A negative value means infinite duration.",
                                            descriptiont = {
                                                jp = "ブルブルの長さを秒数で指定します。負数値は無限長を意味します。"
                                            },
                                            name = "duration",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "True if the vibration was successfully applied, false if not.",
                                            descriptiont = {
                                                jp = "true ならば振動値の適用は成功であり、それ以外は false です。"
                                            },
                                            name = "success",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Joystick",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides an interface to the user's keyboard.",
            enums = {
                {
                    constants = {
                        {
                            description = "The A key",
                            descriptiont = {},
                            name = "a"
                        },
                        {
                            description = "The B key",
                            descriptiont = {},
                            name = "b"
                        },
                        {
                            description = "The C key",
                            descriptiont = {},
                            name = "c"
                        },
                        {
                            description = "The D key",
                            descriptiont = {},
                            name = "d"
                        },
                        {
                            description = "The E key",
                            descriptiont = {},
                            name = "e"
                        },
                        {
                            description = "The F key",
                            descriptiont = {},
                            name = "f"
                        },
                        {
                            description = "The G key",
                            descriptiont = {},
                            name = "g"
                        },
                        {
                            description = "The H key",
                            descriptiont = {},
                            name = "h"
                        },
                        {
                            description = "The I key",
                            descriptiont = {},
                            name = "i"
                        },
                        {
                            description = "The J key",
                            descriptiont = {},
                            name = "j"
                        },
                        {
                            description = "The K key",
                            descriptiont = {},
                            name = "k"
                        },
                        {
                            description = "The L key",
                            descriptiont = {},
                            name = "l"
                        },
                        {
                            description = "The M key",
                            descriptiont = {},
                            name = "m"
                        },
                        {
                            description = "The N key",
                            descriptiont = {},
                            name = "n"
                        },
                        {
                            description = "The O key",
                            descriptiont = {},
                            name = "o"
                        },
                        {
                            description = "The P key",
                            descriptiont = {},
                            name = "p"
                        },
                        {
                            description = "The Q key",
                            descriptiont = {},
                            name = "q"
                        },
                        {
                            description = "The R key",
                            descriptiont = {},
                            name = "r"
                        },
                        {
                            description = "The S key",
                            descriptiont = {},
                            name = "s"
                        },
                        {
                            description = "The T key",
                            descriptiont = {},
                            name = "t"
                        },
                        {
                            description = "The U key",
                            descriptiont = {},
                            name = "u"
                        },
                        {
                            description = "The V key",
                            descriptiont = {},
                            name = "v"
                        },
                        {
                            description = "The W key",
                            descriptiont = {},
                            name = "w"
                        },
                        {
                            description = "The X key",
                            descriptiont = {},
                            name = "x"
                        },
                        {
                            description = "The Y key",
                            descriptiont = {},
                            name = "y"
                        },
                        {
                            description = "The Z key",
                            descriptiont = {},
                            name = "z"
                        },
                        {
                            description = "The zero key",
                            descriptiont = {},
                            name = "0"
                        },
                        {
                            description = "The one key",
                            descriptiont = {},
                            name = "1"
                        },
                        {
                            description = "The two key",
                            descriptiont = {},
                            name = "2"
                        },
                        {
                            description = "The three key",
                            descriptiont = {},
                            name = "3"
                        },
                        {
                            description = "The four key",
                            descriptiont = {},
                            name = "4"
                        },
                        {
                            description = "The five key",
                            descriptiont = {},
                            name = "5"
                        },
                        {
                            description = "The six key",
                            descriptiont = {},
                            name = "6"
                        },
                        {
                            description = "The seven key",
                            descriptiont = {},
                            name = "7"
                        },
                        {
                            description = "The eight key",
                            descriptiont = {},
                            name = "8"
                        },
                        {
                            description = "The nine key",
                            descriptiont = {},
                            name = "9"
                        },
                        {
                            description = "Space key",
                            descriptiont = {},
                            name = "space",
                            notes = "In version 0.9.2 and earlier this is represented by the actual space character"
                        },
                        {
                            description = "Exclamation mark key",
                            descriptiont = {},
                            name = "!"
                        },
                        {
                            description = "Double quote key",
                            descriptiont = {},
                            name = "\""
                        },
                        {
                            description = "Hash key",
                            descriptiont = {},
                            name = "#"
                        },
                        {
                            description = "Dollar key",
                            descriptiont = {},
                            name = "$"
                        },
                        {
                            description = "Ampersand key",
                            descriptiont = {},
                            name = "&"
                        },
                        {
                            description = "Single quote key",
                            descriptiont = {},
                            name = "'"
                        },
                        {
                            description = "Left parenthesis key",
                            descriptiont = {},
                            name = "("
                        },
                        {
                            description = "Right parenthesis key",
                            descriptiont = {},
                            name = ")"
                        },
                        {
                            description = "Asterisk key",
                            descriptiont = {},
                            name = "*"
                        },
                        {
                            description = "Plus key",
                            descriptiont = {},
                            name = "+"
                        },
                        {
                            description = "Comma key",
                            descriptiont = {},
                            name = ","
                        },
                        {
                            description = "Hyphen-minus key",
                            descriptiont = {},
                            name = "-"
                        },
                        {
                            description = "Full stop key",
                            descriptiont = {},
                            name = "."
                        },
                        {
                            description = "Slash key",
                            descriptiont = {},
                            name = "/"
                        },
                        {
                            description = "Colon key",
                            descriptiont = {},
                            name = ":"
                        },
                        {
                            description = "Semicolon key",
                            descriptiont = {},
                            name = ";"
                        },
                        {
                            description = "Less-than key",
                            descriptiont = {},
                            name = "<"
                        },
                        {
                            description = "Equal key",
                            descriptiont = {},
                            name = "="
                        },
                        {
                            description = "Greater-than key",
                            descriptiont = {},
                            name = ">"
                        },
                        {
                            description = "Question mark key",
                            descriptiont = {},
                            name = "?"
                        },
                        {
                            description = "At sign key",
                            descriptiont = {},
                            name = "@"
                        },
                        {
                            description = "Left square bracket key",
                            descriptiont = {},
                            name = "["
                        },
                        {
                            description = "Backslash key",
                            descriptiont = {},
                            name = "\\"
                        },
                        {
                            description = "Right square bracket key",
                            descriptiont = {},
                            name = "]"
                        },
                        {
                            description = "Caret key",
                            descriptiont = {},
                            name = "^"
                        },
                        {
                            description = "Underscore key",
                            descriptiont = {},
                            name = "_"
                        },
                        {
                            description = "Grave accent key",
                            descriptiont = {},
                            name = "`",
                            notes = "Also known as the \"Back tick\" key"
                        },
                        {
                            description = "The numpad zero key",
                            descriptiont = {},
                            name = "kp0"
                        },
                        {
                            description = "The numpad one key",
                            descriptiont = {},
                            name = "kp1"
                        },
                        {
                            description = "The numpad two key",
                            descriptiont = {},
                            name = "kp2"
                        },
                        {
                            description = "The numpad three key",
                            descriptiont = {},
                            name = "kp3"
                        },
                        {
                            description = "The numpad four key",
                            descriptiont = {},
                            name = "kp4"
                        },
                        {
                            description = "The numpad five key",
                            descriptiont = {},
                            name = "kp5"
                        },
                        {
                            description = "The numpad six key",
                            descriptiont = {},
                            name = "kp6"
                        },
                        {
                            description = "The numpad seven key",
                            descriptiont = {},
                            name = "kp7"
                        },
                        {
                            description = "The numpad eight key",
                            descriptiont = {},
                            name = "kp8"
                        },
                        {
                            description = "The numpad nine key",
                            descriptiont = {},
                            name = "kp9"
                        },
                        {
                            description = "The numpad decimal point key",
                            descriptiont = {},
                            name = "kp."
                        },
                        {
                            description = "The numpad division key",
                            descriptiont = {},
                            name = "kp/"
                        },
                        {
                            description = "The numpad multiplication key",
                            descriptiont = {},
                            name = "kp*"
                        },
                        {
                            description = "The numpad substraction key",
                            descriptiont = {},
                            name = "kp-"
                        },
                        {
                            description = "The numpad addition key",
                            descriptiont = {},
                            name = "kp+"
                        },
                        {
                            description = "The numpad enter key",
                            descriptiont = {},
                            name = "kpenter"
                        },
                        {
                            description = "The numpad equals key",
                            descriptiont = {},
                            name = "kp="
                        },
                        {
                            description = "Up cursor key",
                            descriptiont = {},
                            name = "up"
                        },
                        {
                            description = "Down cursor key",
                            descriptiont = {},
                            name = "down"
                        },
                        {
                            description = "Right cursor key",
                            descriptiont = {},
                            name = "right"
                        },
                        {
                            description = "Left cursor key",
                            descriptiont = {},
                            name = "left"
                        },
                        {
                            description = "Home key",
                            descriptiont = {},
                            name = "home"
                        },
                        {
                            description = "End key",
                            descriptiont = {},
                            name = "end"
                        },
                        {
                            description = "Page up key",
                            descriptiont = {},
                            name = "pageup"
                        },
                        {
                            description = "Page down key",
                            descriptiont = {},
                            name = "pagedown"
                        },
                        {
                            description = "Insert key",
                            descriptiont = {},
                            name = "insert"
                        },
                        {
                            description = "Backspace key",
                            descriptiont = {},
                            name = "backspace"
                        },
                        {
                            description = "Tab key",
                            descriptiont = {},
                            name = "tab"
                        },
                        {
                            description = "Clear key",
                            descriptiont = {},
                            name = "clear"
                        },
                        {
                            description = "Return key",
                            descriptiont = {},
                            name = "return",
                            notes = "Also known as the Enter key"
                        },
                        {
                            description = "Delete key",
                            descriptiont = {},
                            name = "delete"
                        },
                        {
                            description = "The 1st function key",
                            descriptiont = {},
                            name = "f1"
                        },
                        {
                            description = "The 2nd function key",
                            descriptiont = {},
                            name = "f2"
                        },
                        {
                            description = "The 3rd function key",
                            descriptiont = {},
                            name = "f3"
                        },
                        {
                            description = "The 4th function key",
                            descriptiont = {},
                            name = "f4"
                        },
                        {
                            description = "The 5th function key",
                            descriptiont = {},
                            name = "f5"
                        },
                        {
                            description = "The 6th function key",
                            descriptiont = {},
                            name = "f6"
                        },
                        {
                            description = "The 7th function key",
                            descriptiont = {},
                            name = "f7"
                        },
                        {
                            description = "The 8th function key",
                            descriptiont = {},
                            name = "f8"
                        },
                        {
                            description = "The 9th function key",
                            descriptiont = {},
                            name = "f9"
                        },
                        {
                            description = "The 10th function key",
                            descriptiont = {},
                            name = "f10"
                        },
                        {
                            description = "The 11th function key",
                            descriptiont = {},
                            name = "f11"
                        },
                        {
                            description = "The 12th function key",
                            descriptiont = {},
                            name = "f12"
                        },
                        {
                            description = "The 13th function key",
                            descriptiont = {},
                            name = "f13"
                        },
                        {
                            description = "The 14th function key",
                            descriptiont = {},
                            name = "f14"
                        },
                        {
                            description = "The 15th function key",
                            descriptiont = {},
                            name = "f15"
                        },
                        {
                            description = "Num-lock key",
                            descriptiont = {},
                            name = "numlock"
                        },
                        {
                            description = "Caps-lock key",
                            descriptiont = {},
                            name = "capslock",
                            notes = "Caps-on is a key press. Caps-off is a key release."
                        },
                        {
                            description = "Scroll-lock key",
                            descriptiont = {},
                            name = "scrollock"
                        },
                        {
                            description = "Right shift key",
                            descriptiont = {},
                            name = "rshift"
                        },
                        {
                            description = "Left shift key",
                            descriptiont = {},
                            name = "lshift"
                        },
                        {
                            description = "Right control key",
                            descriptiont = {},
                            name = "rctrl"
                        },
                        {
                            description = "Left control key",
                            descriptiont = {},
                            name = "lctrl"
                        },
                        {
                            description = "Right alt key",
                            descriptiont = {},
                            name = "ralt"
                        },
                        {
                            description = "Left alt key",
                            descriptiont = {},
                            name = "lalt"
                        },
                        {
                            description = "Right meta key",
                            descriptiont = {},
                            name = "rmeta"
                        },
                        {
                            description = "Left meta key",
                            descriptiont = {},
                            name = "lmeta"
                        },
                        {
                            description = "Left super key",
                            descriptiont = {},
                            name = "lsuper"
                        },
                        {
                            description = "Right super key",
                            descriptiont = {},
                            name = "rsuper"
                        },
                        {
                            description = "Mode key",
                            descriptiont = {},
                            name = "mode"
                        },
                        {
                            description = "Compose key",
                            descriptiont = {},
                            name = "compose"
                        },
                        {
                            description = "Pause key",
                            descriptiont = {},
                            name = "pause"
                        },
                        {
                            description = "Escape key",
                            descriptiont = {},
                            name = "escape"
                        },
                        {
                            description = "Help key",
                            descriptiont = {},
                            name = "help"
                        },
                        {
                            description = "Print key",
                            descriptiont = {},
                            name = "print"
                        },
                        {
                            description = "System request key",
                            descriptiont = {},
                            name = "sysreq"
                        },
                        {
                            description = "Break key",
                            descriptiont = {},
                            name = "break"
                        },
                        {
                            description = "Menu key",
                            descriptiont = {},
                            name = "menu"
                        },
                        {
                            description = "Power key",
                            descriptiont = {},
                            name = "power"
                        },
                        {
                            description = "Euro (&euro;) key",
                            descriptiont = {},
                            name = "euro"
                        },
                        {
                            description = "Undo key",
                            descriptiont = {},
                            name = "undo"
                        },
                        {
                            description = "WWW key",
                            descriptiont = {},
                            name = "www"
                        },
                        {
                            description = "Mail key",
                            descriptiont = {},
                            name = "mail"
                        },
                        {
                            description = "Calculator key",
                            descriptiont = {},
                            name = "calculator"
                        },
                        {
                            description = "Application search key",
                            descriptiont = {},
                            name = "appsearch"
                        },
                        {
                            description = "Application home key",
                            descriptiont = {},
                            name = "apphome"
                        },
                        {
                            description = "Application back key",
                            descriptiont = {},
                            name = "appback"
                        },
                        {
                            description = "Application forward key",
                            descriptiont = {},
                            name = "appforward"
                        },
                        {
                            description = "Application refresh key",
                            descriptiont = {},
                            name = "apprefresh"
                        },
                        {
                            description = "Application bookmarks key",
                            descriptiont = {},
                            name = "appbookmarks"
                        }
                    },
                    description = "All the keys you can press. Note that some keys may not be available on your keyboard or system.",
                    descriptiont = {},
                    minidescriptiont = {},
                    name = "KeyConstant"
                },
                {
                    constants = {
                        {
                            description = "The 'A' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'A' キー。"
                            },
                            name = "a"
                        },
                        {
                            description = "The 'B' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'B' キー。"
                            },
                            name = "b"
                        },
                        {
                            description = "The 'C' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'C' キー。"
                            },
                            name = "c"
                        },
                        {
                            description = "The 'D' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'D' キー。"
                            },
                            name = "d"
                        },
                        {
                            description = "The 'E' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'E' キー。"
                            },
                            name = "e"
                        },
                        {
                            description = "The 'F' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'F' キー。"
                            },
                            name = "f"
                        },
                        {
                            description = "The 'G' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'G' キー。"
                            },
                            name = "g"
                        },
                        {
                            description = "The 'H' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'H' キー。"
                            },
                            name = "h"
                        },
                        {
                            description = "The 'I' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'I' キー。"
                            },
                            name = "i"
                        },
                        {
                            description = "The 'J' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'J' キー。"
                            },
                            name = "j"
                        },
                        {
                            description = "The 'K' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'K' キー。"
                            },
                            name = "k"
                        },
                        {
                            description = "The 'L' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'L' キー。"
                            },
                            name = "l"
                        },
                        {
                            description = "The 'M' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'M' キー。"
                            },
                            name = "m"
                        },
                        {
                            description = "The 'N' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'N' キー。"
                            },
                            name = "n"
                        },
                        {
                            description = "The 'O' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'O' キー。"
                            },
                            name = "o"
                        },
                        {
                            description = "The 'P' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'P' キー。"
                            },
                            name = "p"
                        },
                        {
                            description = "The 'Q' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'Q' キー。"
                            },
                            name = "q"
                        },
                        {
                            description = "The 'R' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'R' キー。"
                            },
                            name = "r"
                        },
                        {
                            description = "The 'S' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'S' キー。"
                            },
                            name = "s"
                        },
                        {
                            description = "The 'T' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'T' キー。"
                            },
                            name = "t"
                        },
                        {
                            description = "The 'U' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'U' キー。"
                            },
                            name = "u"
                        },
                        {
                            description = "The 'V' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'V' キー。"
                            },
                            name = "v"
                        },
                        {
                            description = "The 'W' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'W' キー。"
                            },
                            name = "w"
                        },
                        {
                            description = "The 'X' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'X' キー。"
                            },
                            name = "x"
                        },
                        {
                            description = "The 'Y' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'Y' キー。"
                            },
                            name = "y"
                        },
                        {
                            description = "The 'Z' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'Z' キー。"
                            },
                            name = "z"
                        },
                        {
                            description = "The '1' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '1' キー。"
                            },
                            name = "1"
                        },
                        {
                            description = "The '2' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '2' キー。"
                            },
                            name = "2"
                        },
                        {
                            description = "The '3' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '3' キー。"
                            },
                            name = "3"
                        },
                        {
                            description = "The '4' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '4' キー。"
                            },
                            name = "4"
                        },
                        {
                            description = "The '5' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '5' キー。"
                            },
                            name = "5"
                        },
                        {
                            description = "The '6' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '6' キー。"
                            },
                            name = "6"
                        },
                        {
                            description = "The '7' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '7' キー。"
                            },
                            name = "7"
                        },
                        {
                            description = "The '8' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '8' キー。"
                            },
                            name = "8"
                        },
                        {
                            description = "The '9' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '9' キー。"
                            },
                            name = "9"
                        },
                        {
                            description = "The '0' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '0' キー。"
                            },
                            name = "0"
                        },
                        {
                            description = "The 'return' / 'enter' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'return' / 'enter' キー。"
                            },
                            name = "return"
                        },
                        {
                            description = "The 'escape' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'escape' キー。"
                            },
                            name = "escape"
                        },
                        {
                            description = "The 'backspace' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'backspace' キー。"
                            },
                            name = "backspace"
                        },
                        {
                            description = "The 'tab' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'tab' キー。"
                            },
                            name = "tab"
                        },
                        {
                            description = "The spacebar on an American layout.",
                            descriptiont = {
                                jp = "米国配列では spacebar"
                            },
                            name = "space"
                        },
                        {
                            description = "The minus key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 加算 キー。"
                            },
                            name = "-"
                        },
                        {
                            description = "The equals key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 減算 キー。"
                            },
                            name = "="
                        },
                        {
                            description = "The left-bracket key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 左角括弧 キー。"
                            },
                            name = "["
                        },
                        {
                            description = "The right-bracket key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 右角括弧 キー。"
                            },
                            name = "]"
                        },
                        {
                            description = "The backslash key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では バックスラッシュ キー。"
                            },
                            name = "\\"
                        },
                        {
                            description = "The non-U.S. hash scancode.",
                            descriptiont = {
                                jp = "非米国圏におけるハイフンのスキャンコード。"
                            },
                            name = "nonus#"
                        },
                        {
                            description = "The semicolon key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では セミコロン キー。"
                            },
                            name = ";"
                        },
                        {
                            description = "The apostrophe key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では アポストロフィー キー。"
                            },
                            name = "'"
                        },
                        {
                            description = "The back-tick / grave key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では バックチック・重アクセント キー。"
                            },
                            name = "`"
                        },
                        {
                            description = "The comma key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では カンマ キー。"
                            },
                            name = ","
                        },
                        {
                            description = "The period key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では ピリオド キー。"
                            },
                            name = "."
                        },
                        {
                            description = "The forward-slash key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 前方スラッシュ キー。"
                            },
                            name = "/"
                        },
                        {
                            description = "The capslock key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では capslock キー。"
                            },
                            name = "capslock"
                        },
                        {
                            description = "The F1 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F1 キー。"
                            },
                            name = "f1"
                        },
                        {
                            description = "The F2 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F2 キー。"
                            },
                            name = "f2"
                        },
                        {
                            description = "The F3 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F3 キー。"
                            },
                            name = "f3"
                        },
                        {
                            description = "The F4 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F4 キー。"
                            },
                            name = "f4"
                        },
                        {
                            description = "The F5 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F5 キー。"
                            },
                            name = "f5"
                        },
                        {
                            description = "The F6 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F6 キー。"
                            },
                            name = "f6"
                        },
                        {
                            description = "The F7 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F7 キー。"
                            },
                            name = "f7"
                        },
                        {
                            description = "The F8 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F8 キー。"
                            },
                            name = "f8"
                        },
                        {
                            description = "The F9 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F9 キー。"
                            },
                            name = "f9"
                        },
                        {
                            description = "The F10 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F10 キー。"
                            },
                            name = "f10"
                        },
                        {
                            description = "The F11 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F11 キー。"
                            },
                            name = "f11"
                        },
                        {
                            description = "The F12 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F12 キー。"
                            },
                            name = "f12"
                        },
                        {
                            description = "The F13 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F13 キー。"
                            },
                            name = "f13"
                        },
                        {
                            description = "The F14 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F14 キー。"
                            },
                            name = "f14"
                        },
                        {
                            description = "The F15 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F15 キー。"
                            },
                            name = "f15"
                        },
                        {
                            description = "The F16 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F16 キー。"
                            },
                            name = "f16"
                        },
                        {
                            description = "The F17 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F17 キー。"
                            },
                            name = "f17"
                        },
                        {
                            description = "The F18 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F18 キー。"
                            },
                            name = "f18"
                        },
                        {
                            description = "The F19 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F19 キー。"
                            },
                            name = "f19"
                        },
                        {
                            description = "The F20 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F20 キー。"
                            },
                            name = "f20"
                        },
                        {
                            description = "The F21 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F21 キー。"
                            },
                            name = "f21"
                        },
                        {
                            description = "The F22 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F22 キー。"
                            },
                            name = "f22"
                        },
                        {
                            description = "The F23 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F23 キー。"
                            },
                            name = "f23"
                        },
                        {
                            description = "The F24 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では F24 キー。"
                            },
                            name = "f24"
                        },
                        {
                            description = "The left control key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では左 control キー。"
                            },
                            name = "lctrl"
                        },
                        {
                            description = "The left shift key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 左 shift キー。"
                            },
                            name = "lshift"
                        },
                        {
                            description = "The left alt / option key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では左 alt / option キー。"
                            },
                            name = "lalt"
                        },
                        {
                            description = "The left GUI (command / windows / super) key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では左 GUI (command / windows / super) キー。"
                            },
                            name = "lgui"
                        },
                        {
                            description = "The right control key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では右 control キー。"
                            },
                            name = "rctrl"
                        },
                        {
                            description = "The right shift key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では右 shift キー。"
                            },
                            name = "rshift"
                        },
                        {
                            description = "The right alt / option key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では右 alt / option キー。"
                            },
                            name = "ralt"
                        },
                        {
                            description = "The right GUI (command / windows / super) key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では右 GUI (command / windows / super) キー。"
                            },
                            name = "rgui"
                        },
                        {
                            description = "The printscreen key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では printscreen キー。"
                            },
                            name = "printscreen"
                        },
                        {
                            description = "The scroll-lock key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では scroll-lock キー。"
                            },
                            name = "scrolllock"
                        },
                        {
                            description = "The pause key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では pause キー。"
                            },
                            name = "pause"
                        },
                        {
                            description = "The insert key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では insert キー。"
                            },
                            name = "insert"
                        },
                        {
                            description = "The home key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では home キー。"
                            },
                            name = "home"
                        },
                        {
                            description = "The numlock / clear key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では numlock / clear キー。"
                            },
                            name = "numlock"
                        },
                        {
                            description = "The page-up key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では page-up キー。"
                            },
                            name = "pageup"
                        },
                        {
                            description = "The forward-delete key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 前方 delete キー。"
                            },
                            name = "delete"
                        },
                        {
                            description = "The end key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では end キー。"
                            },
                            name = "end"
                        },
                        {
                            description = "The page-down key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では page-down キー。"
                            },
                            name = "pagedown"
                        },
                        {
                            description = "The right-arrow key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では ← キー。"
                            },
                            name = "right"
                        },
                        {
                            description = "The left-arrow key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では → キー。"
                            },
                            name = "left"
                        },
                        {
                            description = "The down-arrow key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では ↓ キー。"
                            },
                            name = "down"
                        },
                        {
                            description = "The up-arrow key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では ↑ キー。"
                            },
                            name = "up"
                        },
                        {
                            description = "The non-U.S. backslash scancode.",
                            descriptiont = {
                                jp = "非米国圏におけるバックスラッシュのスキャンコード。"
                            },
                            name = "nonusbackslash"
                        },
                        {
                            description = "The application key on an American layout. Windows contextual menu, compose key.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションキー。 Windows コンテキストメニュー、修飾キー。"
                            },
                            name = "application"
                        },
                        {
                            description = "The 'execute' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '実行' キー。"
                            },
                            name = "execute"
                        },
                        {
                            description = "The 'help' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'ヘルプ' キー。"
                            },
                            name = "help"
                        },
                        {
                            description = "The 'menu' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'メニュー' キー。"
                            },
                            name = "menu"
                        },
                        {
                            description = "The 'select' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '選択' キー。"
                            },
                            name = "select"
                        },
                        {
                            description = "The 'stop' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '停止' キー。"
                            },
                            name = "stop"
                        },
                        {
                            description = "The 'again' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'やり直し' キー。"
                            },
                            name = "again"
                        },
                        {
                            description = "The 'undo' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '元に戻す' キー。"
                            },
                            name = "undo"
                        },
                        {
                            description = "The 'cut' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '切り取り' キー。"
                            },
                            name = "cut"
                        },
                        {
                            description = "The 'copy' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'コピー' キー。"
                            },
                            name = "copy"
                        },
                        {
                            description = "The 'paste' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '貼り付け' キー。"
                            },
                            name = "paste"
                        },
                        {
                            description = "The 'find' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では '検索' キー。"
                            },
                            name = "find"
                        },
                        {
                            description = "The keypad forward-slash key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの 前方スラッシュ キー。"
                            },
                            name = "kp/"
                        },
                        {
                            description = "The keypad '*' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '*' キー。"
                            },
                            name = "kp*"
                        },
                        {
                            description = "The keypad minus key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの 減算 キー。"
                            },
                            name = "kp-"
                        },
                        {
                            description = "The keypad plus key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの 加算 キー。"
                            },
                            name = "kp+"
                        },
                        {
                            description = "The keypad equals key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの 等号 キー。"
                            },
                            name = "kp="
                        },
                        {
                            description = "The keypad enter key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの enter キー。"
                            },
                            name = "kpenter"
                        },
                        {
                            description = "The keypad '1' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '1' キー。"
                            },
                            name = "kp1"
                        },
                        {
                            description = "The keypad '2' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '2' キー。"
                            },
                            name = "kp2"
                        },
                        {
                            description = "The keypad '3' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '3' キー。"
                            },
                            name = "kp3"
                        },
                        {
                            description = "The keypad '4' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '4' キー。"
                            },
                            name = "kp4"
                        },
                        {
                            description = "The keypad '5' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '5' キー。"
                            },
                            name = "kp5"
                        },
                        {
                            description = "The keypad '6' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '6' キー。"
                            },
                            name = "kp6"
                        },
                        {
                            description = "The keypad '7' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '7' キー。"
                            },
                            name = "kp7"
                        },
                        {
                            description = "The keypad '8' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '8' キー。"
                            },
                            name = "kp8"
                        },
                        {
                            description = "The keypad '9' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '9' キー。"
                            },
                            name = "kp9"
                        },
                        {
                            description = "The keypad '0' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの '0' キー。"
                            },
                            name = "kp0"
                        },
                        {
                            description = "The keypad period key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの ピリオド キー。"
                            },
                            name = "kp."
                        },
                        {
                            description = "The 1st international key on an American layout. Used on Asian keyboards.",
                            descriptiont = {
                                jp = "米国配列では１番目の国際化キー。アジア圏のキーボードで使用されています。"
                            },
                            name = "international1"
                        },
                        {
                            description = "The 2nd international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では２番目の国際化キー。"
                            },
                            name = "international2"
                        },
                        {
                            description = "The 3rd international key on an American layout. Yen.",
                            descriptiont = {
                                jp = "米国配列では３番目の国際化キー。円記号。"
                            },
                            name = "international3"
                        },
                        {
                            description = "The 4th international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では４番目の国際化キー。"
                            },
                            name = "international4"
                        },
                        {
                            description = "The 5th international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では５番目の国際化キー。"
                            },
                            name = "international5"
                        },
                        {
                            description = "The 6th international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では６番目の国際化キー。"
                            },
                            name = "international6"
                        },
                        {
                            description = "The 7th international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では７番目の国際化キー。"
                            },
                            name = "international7"
                        },
                        {
                            description = "The 8th international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では８番目の国際化キー。"
                            },
                            name = "international8"
                        },
                        {
                            description = "The 9th international key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では９番目の国際化キー。"
                            },
                            name = "international9"
                        },
                        {
                            description = "Hangul/English toggle scancode.",
                            descriptiont = {
                                jp = "「ハングル・英語相互切り替え」のスキャンコード。"
                            },
                            name = "lang1"
                        },
                        {
                            description = "Hanja conversion scancode.",
                            descriptiont = {
                                jp = "「漢字変換」のスキャンコード。"
                            },
                            name = "lang2"
                        },
                        {
                            description = "Katakana scancode.",
                            descriptiont = {
                                jp = "「カタカナ」のスキャンコード。"
                            },
                            name = "lang3"
                        },
                        {
                            description = "Hiragana scancode.",
                            descriptiont = {
                                jp = "「ひらがな」のスキャンコード"
                            },
                            name = "lang4"
                        },
                        {
                            description = "Zenkaku/Hankaku scancode.",
                            descriptiont = {
                                jp = "「全角・半角」のスキャンコード"
                            },
                            name = "lang5"
                        },
                        {
                            description = "The mute key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では消音キー。"
                            },
                            name = "mute"
                        },
                        {
                            description = "The volume up key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音量大キー。"
                            },
                            name = "volumeup"
                        },
                        {
                            description = "The volume down key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音量小キー。"
                            },
                            name = "volumedown"
                        },
                        {
                            description = "The audio next track key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音楽次曲キー。"
                            },
                            name = "audionext"
                        },
                        {
                            description = "The audio previous track key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音楽前キー。"
                            },
                            name = "audioprev"
                        },
                        {
                            description = "The audio stop key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音楽停止キー。"
                            },
                            name = "audiostop"
                        },
                        {
                            description = "The audio play key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音楽再生キー。"
                            },
                            name = "audioplay"
                        },
                        {
                            description = "The audio mute key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では音楽消音キー。"
                            },
                            name = "audiomute"
                        },
                        {
                            description = "The media select key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではメディアの選択キー。"
                            },
                            name = "mediaselect"
                        },
                        {
                            description = "The 'WWW' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'WWW' キー。"
                            },
                            name = "www"
                        },
                        {
                            description = "The Mail key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではメールキー。"
                            },
                            name = "mail"
                        },
                        {
                            description = "The calculator key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では電卓キー。"
                            },
                            name = "calculator"
                        },
                        {
                            description = "The 'computer' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'コンピューター' キー。"
                            },
                            name = "computer"
                        },
                        {
                            description = "The AC Search key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションの検索キー。"
                            },
                            name = "acsearch"
                        },
                        {
                            description = "The AC Home key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションのホームキー。"
                            },
                            name = "achome"
                        },
                        {
                            description = "The AC Back key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションの戻る キー。"
                            },
                            name = "acback"
                        },
                        {
                            description = "The AC Forward key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションの進むキー。"
                            },
                            name = "acforward"
                        },
                        {
                            description = "Th AC Stop key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションの停止キー。"
                            },
                            name = "acstop"
                        },
                        {
                            description = "The AC Refresh key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションの更新キー。"
                            },
                            name = "acrefresh"
                        },
                        {
                            description = "The AC Bookmarks key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではアプリケーションのブックマークキー。"
                            },
                            name = "acbookmarks"
                        },
                        {
                            description = "The system power scancode.",
                            descriptiont = {
                                jp = "米国配列ではシステム電源のスキャンコード。"
                            },
                            name = "power"
                        },
                        {
                            description = "The brightness-down scancode.",
                            descriptiont = {
                                jp = "米国配列では画面暗のスキャンコード。"
                            },
                            name = "brightnessdown"
                        },
                        {
                            description = "The brightness-up scancode.",
                            descriptiont = {
                                jp = "米国配列では画面明のスキャンコード。"
                            },
                            name = "brightnessup"
                        },
                        {
                            description = "The display switch scancode.",
                            descriptiont = {
                                jp = "米国配列では画面切り替えのスキャンコード。"
                            },
                            name = "displayswitch"
                        },
                        {
                            description = "The keyboard illumination toggle scancode.",
                            descriptiont = {
                                jp = "米国配列ではキーボード昭明での点灯・消灯を相互切り替えするスキャンコード。"
                            },
                            name = "kbdillumtoggle"
                        },
                        {
                            description = "The keyboard illumination down scancode.",
                            descriptiont = {
                                jp = "米国配列ではキーボード昭明を暗くするスキャンコード。"
                            },
                            name = "kbdillumdown"
                        },
                        {
                            description = "The keyboard illumination up scancode.",
                            descriptiont = {
                                jp = "米国配列ではキーボード昭明を明るくするスキャンコード。"
                            },
                            name = "kbdillumup"
                        },
                        {
                            description = "The eject scancode.",
                            descriptiont = {
                                jp = "ディスク排出のスキャンコード。"
                            },
                            name = "eject"
                        },
                        {
                            description = "The system sleep scancode.",
                            descriptiont = {
                                jp = "システム休止のスキャンコード。"
                            },
                            name = "sleep"
                        },
                        {
                            description = "The alt-erase key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では alt-erase キー。"
                            },
                            name = "alterase"
                        },
                        {
                            description = "The sysreq key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では sysreq キー。"
                            },
                            name = "sysreq"
                        },
                        {
                            description = "The 'cancel' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'cancel' キー。"
                            },
                            name = "cancel"
                        },
                        {
                            description = "The 'clear' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'clear' キー。"
                            },
                            name = "clear"
                        },
                        {
                            description = "The 'prior' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'prior' キー。"
                            },
                            name = "prior"
                        },
                        {
                            description = "The 'return2' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'return2' キー。"
                            },
                            name = "return2"
                        },
                        {
                            description = "The 'separator' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'separator' キー。"
                            },
                            name = "separator"
                        },
                        {
                            description = "The 'out' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'out' キー。"
                            },
                            name = "out"
                        },
                        {
                            description = "The 'oper' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'oper' キー。"
                            },
                            name = "oper"
                        },
                        {
                            description = "The 'clearagain' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'clearagain' キー。"
                            },
                            name = "clearagain"
                        },
                        {
                            description = "The 'crsel' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'crsel' キー。"
                            },
                            name = "crsel"
                        },
                        {
                            description = "The 'exsel' key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では 'exsel' キー。"
                            },
                            name = "exsel"
                        },
                        {
                            description = "The keypad 00 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの 00 キー。"
                            },
                            name = "kp00"
                        },
                        {
                            description = "The keypad 000 key on an American layout.",
                            descriptiont = {
                                jp = "米国配列ではテンキーの 000 キー。"
                            },
                            name = "kp000"
                        },
                        {
                            description = "The thousands-separator key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では桁区切り文字キー。"
                            },
                            name = "thsousandsseparator"
                        },
                        {
                            description = "The decimal separator key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では小数点キー。"
                            },
                            name = "decimalseparator"
                        },
                        {
                            description = "The currency unit key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では通貨単位キー。"
                            },
                            name = "currencyunit"
                        },
                        {
                            description = "The currency sub-unit key on an American layout.",
                            descriptiont = {
                                jp = "米国配列では通貨副単位キー。"
                            },
                            name = "currencysubunit"
                        },
                        {
                            description = "The 'app1' scancode.",
                            descriptiont = {
                                jp = "'app1' のスキャンコード。"
                            },
                            name = "app1"
                        },
                        {
                            description = "The 'app2' scancode.",
                            descriptiont = {
                                jp = "'app2' のスキャンコード。"
                            },
                            name = "app2"
                        },
                        {
                            description = "An unknown key.",
                            descriptiont = {
                                jp = "不明なキー"
                            },
                            name = "unknown"
                        }
                    },
                    description = "Keyboard scancodes.\n\nScancodes are keyboard layout-independent, so the scancode \"w\" will be generated if the key in the same place as the \"w\" key on an American QWERTY keyboard is pressed, no matter what the key is labelled or what the user's operating system settings are.\n\nUsing scancodes, rather than keycodes, is useful because keyboards with layouts differing from the US/UK layout(s) might have keys that generate 'unknown' keycodes, but the scancodes will still be detected. This however would necessitate having a list for each keyboard layout one would choose to support.\n\nOne could use textinput or textedited instead, but those only give back the end result of keys used, i.e. you can't get modifiers on their own from it, only the final symbols that were generated.",
                    descriptiont = {
                        jp = "キーボードのスキャンコード。\n\nスキャンコードはキーボード配列に依存しないため、キーにどの様な刻印がされているか、あるいは利用者のオペレーティング・システムの設定がどの様なものであるかに関わらず、米国 QWERTY 配列のキーボードにある \"w\" キーと同じ位置にあるキーが押された場合はスキャンコードの \"w\" が生成されます。\n\nキーコードよりスキャンコードを使用する方が、米国 / 英国配列とは異なるキーボード配列で 'unknown' キーコードを生成するキーを有する場合があるので有用ですが、それでもスキャンコードは検出されます。しかしこれは、ある配列へ対応することを決定するために各キーボード配列用の一覧を有することが必要になります。\n\nその代わりに textinput あるいは textedited を使用することはできますが、処理後に使用されたキーの結果だけを返します。すなわち、独自に修飾キーを受け取ることはできず、最後に入力された記号のみ生成されます。"
                    },
                    minidescriptiont = {
                        jp = "キーボードのスキャンコード。"
                    },
                    name = "Scancode"
                }
            },
            functions = {
                {
                    description = "Gets the key corresponding to the given hardware scancode.\n\nUnlike key constants, Scancodes are keyboard layout-independent. For example the scancode \"w\" will be generated if the key in the same place as the \"w\" key on an American keyboard is pressed, no matter what the key is labelled or what the user's operating system settings are.\n\nScancodes are useful for creating default controls that have the same physical locations on on all systems.",
                    descriptiont = {
                        jp = "指定されたハードウェア・スキャンコードに対してキーを対応させます。\n\nキー定数とは異なり、スキャンコードはキーボード配列に依存しません。例えばキーにどの様な刻印がされているか、あるいは利用者のオペレーティング・システムの設定がどの様なものであるかに関わらず、 米国配列のキーボードにある \"w\" キーと同じ位置にあるキーが押された場合はスキャンコードの \"w\" が生成されます。\n\nスキャンコードは全てのシステムにて同一の物理配置があるときに標準の操作方法を作成するのに有用です。"
                    },
                    minidescriptiont = {
                        jp = "指定されたハードウェア・スキャンコードに対してキーを対応させます。"
                    },
                    name = "getKeyFromScancode",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The scancode to get the key from.",
                                    descriptiont = {
                                        jp = "キー取得先のスキャンコード。"
                                    },
                                    name = "scancode",
                                    type = "Scancode"
                                }
                            },
                            returns = {
                                {
                                    description = "The key corresponding to the given scancode, or \"unknown\" if the scancode doesn't map to a KeyConstant on the current system.",
                                    descriptiont = {
                                        jp = "指定されたスキャンコードに対して対応するキー、または現在のシステムにおいてスキャンコードが KeyConstant のマップに存在しない場合は \"unknown\" を返します。"
                                    },
                                    name = "key",
                                    type = "KeyConstant"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the hardware scancode corresponding to the given key.\n\nUnlike key constants, Scancodes are keyboard layout-independent. For example the scancode \"w\" will be generated if the key in the same place as the \"w\" key on an American keyboard is pressed, no matter what the key is labelled or what the user's operating system settings are.\n\nScancodes are useful for creating default controls that have the same physical locations on on all systems.",
                    descriptiont = {
                        jp = "指定されたキーに対してハードウェア・スキャンコードを対応させます。\n\nキー定数とは異なり、スキャンコードはキーボード配列に依存しません。例えばキーにどの様な刻印がされているか、あるいは利用者のオペレーティング・システムの設定がどの様なものであるかに関わらず、 米国配列のキーボードにある \"w\" キーと同じ位置にあるキーが押された場合はスキャンコードの \"w\" が生成されます。\n\nスキャンコードは全てのシステムにて同一の物理配置があるときに標準の操作方法を作成するのに有用です。"
                    },
                    minidescriptiont = {
                        jp = "指定されたキーに対してハードウェア・スキャンコードを対応させます。"
                    },
                    name = "getScancodeFromKey",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The key to get the scancode from.",
                                    descriptiont = {
                                        jp = "スキャンコード取得先のキー。"
                                    },
                                    name = "key",
                                    type = "KeyConstant"
                                }
                            },
                            returns = {
                                {
                                    description = "The scancode corresponding to the given key, or \"unknown\" if the given key has no known physical representation on the current system.",
                                    descriptiont = {
                                        jp = "指定されたキーに対して対応するスキャンコード、または現在のシステムにおいて指定されたキーが物理的な表現として認識されない場合は \"unknown\" を返します。"
                                    },
                                    name = "scancode",
                                    type = "Scancode"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether key repeat is enabled.",
                    descriptiont = {
                        de = "Gibt zurück ob die Tastenwiederholung aktiv ist oder nicht.",
                        jp = "キーリピートが有効であるかどうか取得します。",
                        ko = "키 반복 입력을 감지하고 있는지 확인합니다."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück ob die Tastenwiederholung aktiv ist oder nicht.",
                        jp = "キーリピートが有効であるかどうか取得します。",
                        ko = "키 반복 입력을 감지하고 있는지 확인합니다."
                    },
                    name = "hasKeyRepeat",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Whether key repeat is enabled.",
                                    descriptiont = {
                                        de = "Ob Tastenwiederholung aktiv ist.",
                                        jp = "キーリピートが有効であれば true を、無効であれば false を返します。",
                                        ko = "키를 누르고 있을 때 반복적으로 감지하고 있으면 true."
                                    },
                                    name = "enabled",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether text input events are enabled.",
                    descriptiont = {
                        de = "Gibt zurück, ob Texteingaben-Ereignisse aktiviert sind.",
                        jp = "テキスト入力イベントが有効であるかどうか取得します。",
                        ko = "텍스트 입력을 감지하고 있는지 확인합니다."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück, ob Texteingaben-Ereignisse aktiviert sind.",
                        jp = "テキスト入力イベントが有効であるかどうか取得します。",
                        ko = "텍스트 입력을 감지하고 있는지 확인합니다."
                    },
                    name = "hasTextInput",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Whether text input events are enabled.",
                                    descriptiont = {
                                        de = "Ob Text-Ereignisse aktiviert sind, oder nicht.",
                                        jp = "テキスト入力イベントが有効であれば true を、無効であれば false を返します。",
                                        ko = "텍스트 입력을 감지하고 있으면 true."
                                    },
                                    name = "enabled",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks whether a certain key is down. Not to be confused with love.keypressed or love.keyreleased.",
                    descriptiont = {
                        de = "Prüft ob eine bestimmte Taste gedrückt wird. Diese Funktion gibt eine boolesche Variable zurück und sollte nicht mit love.keypressed bzw. love.keyreleased verwechselt werden.",
                        jp = "特定のキーが押されたかどうか検出します。 love.keypressed または love.keyreleased とは混同しないでください。",
                        ko = "특정 키가 눌렸는지 확인합니다. love.keypressed나 love.keyreleased와 혼동하지 마세요.",
                        pt = "Verifica se certa tecla está pressionada.",
                        ru = "Проверяет, является ли определенная клавиша нажатой."
                    },
                    minidescriptiont = {
                        de = "Prüft ob eine bestimmte Taste gedrückt wird.",
                        jp = "特定のキーが押されたかどうか検出します。",
                        ko = "특정 키가 눌렸는지 확인합니다.",
                        pt = "Verifica se certa tecla está pressionada.",
                        ru = "Проверяет, является ли определенная клавиша нажатой."
                    },
                    name = "isDown",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The key to check.",
                                    descriptiont = {
                                        de = "Die Tasten, die geprüft werden sollen.",
                                        jp = "検出したいキー。",
                                        ko = "확인할 키.",
                                        pt = "A tecla que será verificada.",
                                        ru = "Клавиша для проверки."
                                    },
                                    name = "key",
                                    type = "KeyConstant"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the key is down, false if not.",
                                    descriptiont = {
                                        de = "Wahr wenn eine der Tasten gedrückt wird.",
                                        jp = "true ならばキーは押されており、それ以外ならば false です。",
                                        ko = "전달된 키중 하나라도 눌렸으면 true.",
                                        pt = "True se a tecla está pressionada, senão false.",
                                        ru = "True, если клавиша нажата, иначе false."
                                    },
                                    name = "down",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A key to check.",
                                    descriptiont = {
                                        jp = "検出したいキー。"
                                    },
                                    name = "key",
                                    type = "KeyConstant"
                                },
                                {
                                    description = "Additional keys to check.",
                                    descriptiont = {
                                        jp = "検出したい追加のキー。"
                                    },
                                    name = "...",
                                    type = "KeyConstant"
                                }
                            },
                            returns = {
                                {
                                    description = "True if any supplied key is down, false if not.",
                                    descriptiont = {
                                        jp = "true ならば用意された任意のキーは押されており、それ以外ならば false です。"
                                    },
                                    name = "anyDown",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks whether the specified Scancodes are pressed. Not to be confused with love.keypressed or love.keyreleased.\n\nUnlike regular KeyConstants, Scancodes are keyboard layout-independent. The scancode \"w\" is used if the key in the same place as the \"w\" key on an American keyboard is pressed, no matter what the key is labelled or what the user's operating system settings are.",
                    descriptiont = {
                        jp = "指定されたスキャンコードが押されたかどうか確認します。 love.keypressed または love.keyreleased とは混同しないでください。\n\n正規のキー定数とは異なり、スキャンコードはキーボード配列に依存しません。キーにどの様な刻印がされているか、あるいは利用者のオペレーティング・システムの設定がどの様なものであるかに関わらず、米国配列のキーボードにある \"w\" キーと同じ位置にあるキーが押された場合はスキャンコードの \"w\" が使用されます。"
                    },
                    minidescriptiont = {
                        jp = "指定されたスキャンコードが押されたかどうか確認します。"
                    },
                    name = "isScancodeDown",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "A Scancode to check.",
                                    descriptiont = {
                                        jp = "検出したいキー。"
                                    },
                                    name = "scancode",
                                    type = "Scancode"
                                },
                                {
                                    description = "Additional Scancodes to check.",
                                    descriptiont = {
                                        jp = "検出したい追加のキー。"
                                    },
                                    name = "...",
                                    type = "Scancode"
                                }
                            },
                            returns = {
                                {
                                    description = "True if any supplied Scancode is down, false if not.",
                                    descriptiont = {
                                        jp = "true ならば用意された任意のキーは押されており、それ以外ならば false です。"
                                    },
                                    name = "down",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Enables or disables key repeat. It is disabled by default.\n\nThe interval between repeats depends on the user's system settings.",
                    descriptiont = {
                        jp = "love.keypressed に対するキーリピートを有効または無効にします。デフォルト値では無効です。",
                        ko = "키 반복 입력을 감지할 것인지 결정합니다. 기본값은 감지하지 않음 입니다.",
                        pt = "Habilita a repetição de um tecla, configura o atraso e o intervalo.",
                        ru = "Включает повторение клавиш и устанавливает интервал с задержкой."
                    },
                    minidescriptiont = {
                        jp = "love.keypressed に対するキーリピートを有効または無効にします。デフォルト値では無効です。",
                        ko = "키 반복 입력을 감지할 것인지 결정합니다.",
                        pt = "Habilita a repetição de um tecla, configura o atraso e o intervalo.",
                        ru = "Включает повторение клавиш и устанавливает интервал с задержкой."
                    },
                    name = "setKeyRepeat",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Whether repeat keypress events should be enabled when a key is held down.",
                                    descriptiont = {
                                        jp = "有効にするとキーを押し続けたときに Keypress イベントでキーリピートを行います。",
                                        ko = "키를 누르고 있을 때 반복적으로 감지하려면 true."
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            },
                            descriptiont = {
                                ko = "반복 주기는 사용자의 시스템에 의존적입니다.\n\n== 예제 ==\n\n{{newin|0.9.0|090|type=example}}\n\n왼쪽이나 오른쪽 방향키를 눌러 원을 움직입니다.\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n\9love.keyboard.setKeyRepeat(true)\n\n\9x = 50\n\nend\n\nfunction love.keypressed(key, isrepeat)\n\n\9if key == \"right\" then\n\n\9\9x = (x + 80) % love.graphics.getWidth()\n\n\9elseif key == \"left\" then\n\n\9\9x = (x - 80) % love.graphics.getWidth()\n\n\9end\n\nend\n\nfunction love.draw()\n\n\9love.graphics.circle(\"fill\", x, 100)\n\nend\n\n&lt;/source&gt;"
                            }
                        }
                    }
                },
                {
                    description = "Enables or disables text input events. It is enabled by default on Windows, Mac, and Linux, and disabled by default on iOS and Android.",
                    descriptiont = {
                        de = "Aktiviert oder Deaktiviert Texteingabe-Ereignisse. Standardmäßig sind diese aktiviert.",
                        jp = "テキスト入力イベントを有効または無効にします。 Windows, Mac, and Linux のデフォルト値では有効 (enable) であり、 iOS および Android のデフォルト値では無効 (disable) です。\n\nタッチデバイスでは、これが有効ならばシステム固有のスクリーンキーボード表示します。",
                        ko = "텍스트 입력을 감지할 것인지. 설정합니다. 기본값은 감지함 입니다."
                    },
                    minidescriptiont = {
                        de = "Aktiviert oder Deaktiviert Texteingabe-Ereignisse.",
                        jp = "テキスト入力イベントを有効または無効にします。",
                        ko = "텍스트 입력을 감지할 것인지. 설정합니다."
                    },
                    name = "setTextInput",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Whether text input events should be enabled.",
                                    descriptiont = {
                                        de = "Ob Texteingabe-Ereignisse aktiviert sein sollen oder nicht.",
                                        jp = "テキスト入力イベントを使用可能にするかどうか。",
                                        ko = "텍스트 입력을 감지하려면 true."
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Whether text input events should be enabled.",
                                    descriptiont = {
                                        jp = "テキスト入力イベントを使用可能にするかどうか。"
                                    },
                                    name = "enable",
                                    type = "boolean"
                                },
                                {
                                    description = "On-screen keyboard x position.",
                                    descriptiont = {
                                        jp = "テキスト矩形領域の x 位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "On-screen keyboard y position.",
                                    descriptiont = {
                                        jp = "テキスト矩形領域の y 位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "On-screen keyboard width.",
                                    descriptiont = {
                                        jp = "テキスト矩形領域の幅。"
                                    },
                                    name = "w",
                                    type = "number"
                                },
                                {
                                    description = "On-screen keyboard height.",
                                    descriptiont = {
                                        jp = "テキスト矩形領域の高さ。"
                                    },
                                    name = "h",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                jp = "この異形は iOS および Android においてシステムのスクリーンキーボードがテキストを覆い隠してしまうのを防ぐために指定されたテキストの矩形領域をゲームで表示することを OS へ通知します。"
                            }
                        }
                    }
                }
            },
            name = "keyboard"
        },
        {
            description = "Provides system-independent mathematical functions.",
            enums = {
                {
                    constants = {
                        {
                            description = "The LZ4 compression format. Compresses and decompresses very quickly, but the compression ratio is not the best. LZ4-HC is used when compression level 9 is specified.",
                            descriptiont = {
                                jp = "LZ4 法による圧縮形式。圧縮、および展開は非常に高速ですが、圧縮率は最悪です。圧縮率 9 が指定された時は LZ4-HC 法を使用します。こちらに性能測定結果の一部があります。"
                            },
                            name = "lz4"
                        },
                        {
                            description = "The zlib format is DEFLATE-compressed data with a small bit of header data. Compresses relatively slowly and decompresses moderately quickly, and has a decent compression ratio.",
                            descriptiont = {
                                jp = "zlib 形式は小型の 1 bit ヘッダデータを有する DEFLATE (デフレート) 法により圧縮されたデータです。圧縮は幾分遅めであり、展開は適度に早く、そして圧縮率はまともです。"
                            },
                            name = "zlib"
                        },
                        {
                            description = "The gzip format is DEFLATE-compressed data with a slightly larger header than zlib. Since it uses DEFLATE it has the same compression characteristics as the zlib format.",
                            descriptiont = {
                                jp = "gzip 形式は zlib より少し大きいヘッダデータを有する DEFLATE 法により圧縮されたデータです。 DEFLATE 法を使用しているため、 zlib 形式と同じ圧縮特性があります。"
                            },
                            name = "gzip"
                        }
                    },
                    description = "Compressed data formats.",
                    descriptiont = {
                        jp = "圧縮されたデータ形式。"
                    },
                    minidescriptiont = {
                        jp = "圧縮されたデータ形式。"
                    },
                    name = "CompressedDataFormat"
                }
            },
            functions = {
                {
                    description = "Compresses a string or data using a specific compression algorithm.",
                    descriptiont = {
                        jp = "特定の圧縮アルゴリズムを使用して文字列またはデータを圧縮します。"
                    },
                    minidescriptiont = {
                        jp = "特定の圧縮アルゴリズムを使用して文字列またはデータを圧縮します。"
                    },
                    name = "compress",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The raw (un-compressed) string to compress.",
                                    descriptiont = {
                                        jp = "圧縮対象の生文字列 (無圧縮)。"
                                    },
                                    name = "rawstring",
                                    type = "string"
                                },
                                {
                                    default = "\"lz4\"",
                                    description = "The format to use when compressing the string.",
                                    descriptiont = {
                                        jp = "文字列の圧縮時に使用する形式。"
                                    },
                                    name = "format",
                                    type = "CompressedDataFormat"
                                },
                                {
                                    default = "-1",
                                    description = "The level of compression to use, between 0 and 9. -1 indicates the default level. The meaning of this argument depends on the compression format being used.",
                                    descriptiont = {
                                        jp = "0 から 9 までの使用する圧縮率。 -1 は標準の圧縮率を表します。この引数の意味は使用される圧縮形式に依存することを表します。"
                                    },
                                    name = "level",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Data object containing the compressed version of the string.",
                                    descriptiont = {
                                        jp = "圧縮版の文字列を有する新規 Data オブジェクト。"
                                    },
                                    name = "compressedData",
                                    type = "CompressedData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A Data object containing the raw (un-compressed) data to compress.",
                                    descriptiont = {
                                        jp = "圧縮対象の生データ (無圧縮) を有する Data オブジェクト。"
                                    },
                                    name = "data",
                                    type = "Data"
                                },
                                {
                                    default = "\"lz4\"",
                                    description = "The format to use when compressing the data.",
                                    descriptiont = {
                                        jp = "データの圧縮時に使用する形式。"
                                    },
                                    name = "format",
                                    type = "CompressedDataFormat"
                                },
                                {
                                    default = "-1",
                                    description = "The level of compression to use, between 0 and 9. -1 indicates the default level. The meaning of this argument depends on the compression format being used.",
                                    descriptiont = {
                                        jp = "0 から 9 までの使用する圧縮率。 -1 は標準の圧縮率を表します。この引数の意味は使用される圧縮形式に依存することを表します。"
                                    },
                                    name = "level",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Data object containing the compressed version of the raw data.",
                                    descriptiont = {
                                        jp = "圧縮版の生データを有する新規 Data オブジェクト。"
                                    },
                                    name = "compressedData",
                                    type = "CompressedData"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Decompresses a CompressedData or previously compressed string or Data object.",
                    descriptiont = {
                        jp = "CompressedData または以前に圧縮された文字列あるいは Data オブジェクトを展開します。"
                    },
                    minidescriptiont = {
                        jp = "CompressedData または以前に圧縮された文字列あるいは Data オブジェクトを展開します。"
                    },
                    name = "decompress",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The compressed data to decompress.",
                                    descriptiont = {
                                        jp = "展開対象の圧縮されたデータ。"
                                    },
                                    name = "compressedData",
                                    type = "CompressedData"
                                }
                            },
                            returns = {
                                {
                                    description = "A string containing the raw decompressed data.",
                                    descriptiont = {
                                        jp = "展開された生データを有する文字列。"
                                    },
                                    name = "rawstring",
                                    type = "string"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A string containing data previously compressed with love.math.compress.",
                                    descriptiont = {
                                        jp = "以前 love.math.compress により圧縮されたデータを有する文字列。"
                                    },
                                    name = "compressedString",
                                    type = "string"
                                },
                                {
                                    description = "The format that was used to compress the given string.",
                                    descriptiont = {
                                        jp = "与えられた文字列を圧縮するために使用された形式。"
                                    },
                                    name = "format",
                                    type = "CompressedDataFormat"
                                }
                            },
                            returns = {
                                {
                                    description = "A string containing the raw decompressed data.",
                                    descriptiont = {
                                        jp = "展開された生データを有する文字列。"
                                    },
                                    name = "rawstring",
                                    type = "string"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A Data object containing data previously compressed with love.math.compress.",
                                    descriptiont = {
                                        jp = "以前 love.math.compress により圧縮されたデータを有する Data オブジェクト。"
                                    },
                                    name = "data",
                                    type = "Data"
                                },
                                {
                                    description = "The format that was used to compress the given data.",
                                    descriptiont = {
                                        jp = "与えられたデータを圧縮するために使用された形式。"
                                    },
                                    name = "format",
                                    type = "CompressedDataFormat"
                                }
                            },
                            returns = {
                                {
                                    description = "A string containing the raw decompressed data.",
                                    descriptiont = {
                                        jp = "展開された生データを有する文字列。"
                                    },
                                    name = "rawstring",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Converts a color from gamma-space (sRGB) to linear-space (RGB). This is useful when doing gamma-correct rendering and you need to do math in linear RGB in the few cases where LÖVE doesn't handle conversions automatically.",
                    descriptiont = {
                        jp = "ガンマ空間 (sRGB) から線形空間 (RGB) へ色変換します。これはガンマ補正表示を行う場合、および LÖVE が線形 RGB を自動変換処理しない場合に計算をする必要がある場合に有用です。\n\nガンマ補正表示に関する詳細は ここ、 ここ、さらにここ にあります。"
                    },
                    minidescriptiont = {
                        jp = "ガンマ空間 (sRGB) から線形空間 (RGB) へ色変換します。"
                    },
                    name = "gammaToLinear",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The red channel of the sRGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい sRGB 色の赤チャンネル。"
                                    },
                                    name = "r",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the sRGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい sRGB 色の緑チャンネル。"
                                    },
                                    name = "g",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the sRGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい sRGB 色の青チャンネル。"
                                    },
                                    name = "b",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The red channel of the converted color in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間へ変換された色の赤チャンネル。"
                                    },
                                    name = "lr",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the converted color in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間へ変換された色の緑チャンネル。"
                                    },
                                    name = "lg",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the converted color in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間へ変換された色の青チャンネル。"
                                    },
                                    name = "lb",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "An array with the red, green, and blue channels of the sRGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい sRGB 色における赤、青、および青チャンネルの配列。"
                                    },
                                    name = "color",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "The red channel of the converted color in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間へ変換された色の赤チャンネル。"
                                    },
                                    name = "lr",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the converted color in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間へ変換された色の緑チャンネル。"
                                    },
                                    name = "lg",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the converted color in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間へ変換された色の青チャンネル。"
                                    },
                                    name = "lb",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The value of a color channel in sRGB space to convert.",
                                    descriptiont = {
                                        jp = "変換したい sRGB 空間における色チャンネルの値。"
                                    },
                                    name = "c",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The value of the color channel in linear RGB space.",
                                    descriptiont = {
                                        jp = "線形 RGB 空間における色チャンネルの値。"
                                    },
                                    name = "lc",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the seed of the random number generator.\n\nThe state is split into two numbers due to Lua's use of doubles for all number values - doubles can't accurately represent integer values above 2^53.",
                    descriptiont = {
                        jp = "乱数生成器の種を取得します。\n\n種は Lua の全ての数値に対してdouble を使用することにより二つの数値へ分割されます ― double において 2 の 53 乗以上になる整数値を正確に表現できませんが、種であれば 2 の 64 乗まで整数値の表現ができます。",
                        ko = "난수 생성기의 시드를 얻어옵니다.\n\n루아에선 모든 수를 배정밀도 부동소수점(double)으로 처리합니다. 때문에 2^53 이상의 정수의 경우 그 값을 정확하게 표시하지 못합니다. 시드는 2^64 정수로 이루어져 있으므로 LÖVE는 이를 온전히 전달하기 위해 비트를 둘로 쪼개서 반환합니다."
                    },
                    minidescriptiont = {
                        jp = "乱数生成器の種を取得します。",
                        ko = "난수 생성기의 시드를 얻어옵니다."
                    },
                    name = "getRandomSeed",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Integer number representing the lower 32 bits of the random number generator's 64 bit state value.",
                                    descriptiont = {
                                        jp = "乱数生成器の 64 bit 種値のうち下位 32 bit の整数表現。",
                                        ko = "64비트 시드값의 하위 32비트를 표현하는 정수."
                                    },
                                    name = "low",
                                    type = "number"
                                },
                                {
                                    description = "Integer number representing the higher 32 bits of the random number generator's 64 bit state value.",
                                    descriptiont = {
                                        jp = "乱数生成器の 64 bit 種値のうち上位 32 bit の整数表現。",
                                        ko = "64비트 시드값의 상위 32비트를 표현하는 정수."
                                    },
                                    name = "high",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current state of the random number generator. This returns an opaque implementation-dependent string which is only useful for later use with RandomGenerator:setState.\n\nThis is different from RandomGenerator:getSeed in that getState gets the RandomGenerator's current state, whereas getSeed gets the previously set seed number.\n\nThe value of the state string does not depend on the current operating system.",
                    descriptiont = {},
                    minidescriptiont = {},
                    name = "getRandomState",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current state of the RandomGenerator object, represented as a string.",
                                    name = "state",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks whether a polygon is convex.\n\nPolygonShapes in love.physics, some forms of Mesh, and polygons drawn with love.graphics.polygon must be simple convex polygons.",
                    descriptiont = {
                        jp = "凸面の多角形かどうか確認します。\n\nlove.physics での PolygonShapes, Mesh の一部形式、 love.graphics.polygon にて描画された多角形は必ず単一の凸面の多角形になります。",
                        ko = "볼록한 다각형인지 검사합니다.\n\nPolygonShape, 특정 형태의 Mesh, love.graphics.polygon으로 그려지는 다각형은 반드시 볼록한 다각형이어야 합니다."
                    },
                    minidescriptiont = {
                        jp = "凸面の多角形かどうか確認します。",
                        ko = "볼록한 다각형인지 검사합니다."
                    },
                    name = "isConvex",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The vertices of the polygon as a table in the form of {x1, y1, x2, y2, x3, y3, ...}.",
                                    descriptiont = {
                                        jp = "多角形の頂点として &lt;nowiki&gt;{x1, y1, x2, y2, x3, y3, ...}&lt;/nowiki&gt; の形式のテーブル。",
                                        ko = "{x1, y1, x2, y2, x3, y3, ...}의 형태로 나타내는 꼭짓점 테이블."
                                    },
                                    name = "vertices",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the given polygon is convex.",
                                    descriptiont = {
                                        jp = "凸面の多角形かどうか。",
                                        ko = "볼록한 다각형이면 true를 리턴."
                                    },
                                    name = "convex",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The position of the first vertex of the polygon on the x-axis.",
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The position of the first vertex of the polygon on the y-axis.",
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The position of the second vertex of the polygon on the x-axis.",
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The position of the second vertex of the polygon on the y-axis.",
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "The position of the third vertex of the polygon on the x-axis.",
                                    name = "x3",
                                    type = "number"
                                },
                                {
                                    description = "The position of the third vertex of the polygon on the y-axis.",
                                    name = "y3",
                                    type = "number"
                                },
                                {
                                    description = "Additional vertices.",
                                    name = "...",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the given polygon is convex.",
                                    name = "convex",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Converts a color from linear-space (RGB) to gamma-space (sRGB). This is useful when storing linear RGB color values in an image, because the linear RGB color space has less precision than sRGB for dark colors, which can result in noticeable color banding when drawing.\n\nIn general, colors chosen based on what they look like on-screen are already in gamma-space and should not be double-converted. Colors calculated using math are often in the linear RGB space.",
                    descriptiont = {
                        jp = "線形空間 (RGB) からガンマ空間 (sRGB) へ色変換します。これは線形 RGB 色の値を画像へ格納する場合に有用です。理由として暗色に対して線形 RGB 色空間は sRGB より低精度であるため、結果として描画時に気付くほどの色帯域となるからです。\n\n一般に、画面上で見える物に基づいて選択された色が既にガンマ空間に当てはまるならば、倍数変換をしないでください。数学的なものを使用して計算された色において大抵は線形 RGB 空間に当てはまります。\n\nガンマ補正表示に関する詳細は ここ、 ここ、さらにここ にあります。"
                    },
                    minidescriptiont = {
                        jp = "線形空間 (RGB) からガンマ空間 (sRGB) へ色変換します。"
                    },
                    name = "linearToGamma",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The red channel of the linear RGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい線形 RGB 色の赤チャンネル。"
                                    },
                                    name = "lr",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the linear RGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい線形 RGB 色の緑チャンネル。"
                                    },
                                    name = "lg",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the linear RGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい線形 RGB 色の青チャンネル。"
                                    },
                                    name = "lb",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The red channel of the converted color in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間へ変換された色の赤チャンネル。"
                                    },
                                    name = "cr",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the converted color in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間へ変換された色の緑チャンネル。"
                                    },
                                    name = "cg",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the converted color in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間へ変換された色の青チャンネル。"
                                    },
                                    name = "cb",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "An array with the red, green, and blue channels of the linear RGB color to convert.",
                                    descriptiont = {
                                        jp = "変換したい RGB 色の赤、青、および青チャンネルの配列。"
                                    },
                                    name = "color",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "The red channel of the converted color in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間へ変換された色の赤チャンネル。"
                                    },
                                    name = "cr",
                                    type = "number"
                                },
                                {
                                    description = "The green channel of the converted color in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間へ変換された色の緑チャンネル。"
                                    },
                                    name = "cg",
                                    type = "number"
                                },
                                {
                                    description = "The blue channel of the converted color in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間へ変換された色の青チャンネル。"
                                    },
                                    name = "cb",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The value of a color channel in linear RGB space to convert.",
                                    descriptiont = {
                                        jp = "変換したい線形 RGB 空間における色チャンネルの値。"
                                    },
                                    name = "lc",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The value of the color channel in gamma sRGB space.",
                                    descriptiont = {
                                        jp = "ガンマ sRGB 空間における色チャンネルの値。"
                                    },
                                    name = "c",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new BezierCurve object.\n\nThe number of vertices in the control polygon determines the degree of the curve, e.g. three vertices define a quadratic (degree 2) Bézier curve, four vertices define a cubic (degree 3) Bézier curve, etc.",
                    descriptiont = {
                        jp = "BezierCurve オブジェクトの新規作成。\n\n制御用多角形にある頂点の個数は曲線の次数を決定します。例えば、頂点が３つであれば二次式(次数２)のベジェ曲線の定義を行い、頂点が４つであれば三次式(次数３)などのベジェ曲線の定義を行います。",
                        ko = "새로운 베지에 곡선을 생성합니다.\n\n인자로 넘어온 조절점의 개수가 곡선의 차수를 결정합니다. 예를 들어 세 점은 이차 베지에 곡선을, 네 점은 삼차 베지에 곡선을 만들게 됩니다.",
                        ru = "Создает новый обект BezierCurve.\n\nКоличество вершин в определенном многоугольнике определяют степень кривой, например три вершины определяют квадратичную (степень 2) кривую Безье, четыре вершины определяют кубическую (степень 3) кривую Безье, и т.д."
                    },
                    minidescriptiont = {
                        jp = "BezierCurve オブジェクトの新規作成。",
                        ko = "새로운 베지에 곡선을 생성합니다.",
                        ru = "Создает новый обект BezierCurve."
                    },
                    name = "newBezierCurve",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The vertices of the control polygon as a table in the form of {x1, y1, x2, y2, x3, y3, ...}.",
                                    descriptiont = {
                                        jp = "制御用多角形の頂点として &lt;nowiki&gt;{x1, y1, x2, y2, x3, y3, ...}&lt;/nowiki&gt; 形式のテーブル。",
                                        ko = "{x1, y1, x2, y2, x3, y3, ...}과 같은 형태로 이루어진 조절점 테이블."
                                    },
                                    name = "vertices",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "A Bézier curve object.",
                                    descriptiont = {
                                        jp = "ベジェ曲線オブジェクト。",
                                        ko = "새 베지에 곡선 객체."
                                    },
                                    name = "curve",
                                    type = "BezierCurve"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The position of the first vertex of the control polygon on the x-axis.",
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The position of the first vertex of the control polygon on the y-axis.",
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The position of the second vertex of the control polygon on the x-axis.",
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The position of the second vertex of the control polygon on the y-axis.",
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "The position of the third vertex of the control polygon on the x-axis.",
                                    name = "x3",
                                    type = "number"
                                },
                                {
                                    description = "The position of the third vertex of the control polygon on the y-axis.",
                                    name = "y3",
                                    type = "number"
                                },
                                {
                                    description = "Additional vertices.",
                                    name = "...",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A Bézier curve object.",
                                    name = "curve",
                                    type = "BezierCurve"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new RandomGenerator object which is completely independent of other RandomGenerator objects and random functions.",
                    descriptiont = {
                        jp = "他の RandomGenerator オブジェクトおよび乱数の関数とは完全に独立した RandomGenerator オブジェクトを新規作成します。",
                        ko = "새로운 난수 생성기를 생성합니다.",
                        ru = "Создает новый объект RandomGenerator (Русский), который является полностью независимым от других RandomGenerator объектов  и случайных функций."
                    },
                    minidescriptiont = {
                        jp = " RandomGenerator オブジェクトの新規作成。",
                        ko = "새로운 난수 생성기를 생성합니다.",
                        ru = "Создает новый объект RandomGenerator (Русский)."
                    },
                    name = "newRandomGenerator",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The new Random Number Generator object.",
                                    descriptiont = {
                                        jp = "新規の乱数生成器オブジェクト。",
                                        ko = "난수 생성기.",
                                        ru = "Новый объект Генератора случайных чисел."
                                    },
                                    name = "rng",
                                    type = "RandomGenerator"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The initial seed number to use for this object.",
                                    descriptiont = {
                                        jp = "このオブジェクトで使用する初期の種の数値。",
                                        ru = "Начальное число seed используемых для этого объекта."
                                    },
                                    name = "seed",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                ru = "Смотрите RandomGenerator:setSeed (Руусский)."
                            },
                            returns = {
                                {
                                    description = "The new Random Number Generator object.",
                                    descriptiont = {
                                        jp = "新規の乱数生成器オブジェクト。",
                                        ru = "Новый объект Генератора случайных чисел."
                                    },
                                    name = "rng",
                                    type = "RandomGenerator"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The lower 32 bits of the state number to use for this instance of the object.",
                                    descriptiont = {
                                        jp = "このオブジェクトで使用する下位 32 bit の種の数値。",
                                        ko = "이 객체에 사용할 64비트 시드값의 하위 32비트를 표현하는 정수.",
                                        ru = "Низкие 32 битные числа семян для использования этого объекта."
                                    },
                                    name = "low",
                                    type = "number"
                                },
                                {
                                    description = "The higher 32 bits of the state number to use for this instance of the object.",
                                    descriptiont = {
                                        jp = "このオブジェクトで使用する上位 32 bit の種の数値。",
                                        ko = "이 객체에 사용할 64비트 시드값의 상위 32비트를 표현하는 정수.",
                                        ru = "Высокие 32 битные числа семян для использования этого объекта."
                                    },
                                    name = "high",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                ko = "RandomGenerator:setState를 참조하세요.\n\nRandomGenerator:setState를 참조하세요.",
                                ru = "Смотрите RandomGenerator:setSeed (Русский).\n\n== Примеры ==\n\nСоздает новый объект RandomGenerator, затем генерирует число между 1 и 100 включительно.\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n\9rng = love.math.newRandomGenerator()\n\n\9randomNumber = rng:random(1,100)\n\nend\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The new Random Number Generator object.",
                                    descriptiont = {
                                        jp = "新規の乱数生成器オブジェクト。",
                                        ko = "난수 생성기.",
                                        ru = "Новый объект Генератора случайных чисел."
                                    },
                                    name = "rng",
                                    type = "RandomGenerator"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Generates a Simplex or Perlin noise value in 1-4 dimensions. The return value will always be the same, given the same arguments.\n\nSimplex noise is closely related to Perlin noise. It is widely used for procedural content generation.\n\nThere are many webpages which discuss Perlin and Simplex noise in detail.",
                    descriptiont = {
                        jp = "１～４次元によるシンプレックスまたはパーリンノイズの値を生成します。返値は同一引数を与えられても、常に同じです。\n\nシンプレックスノイズはパーリンノイズと密接な関係があります。これは手続き内容の生成に対して幅広く使用されます。\n\nこちらにパーリンおよびシンプレックスノイズに関する詳細な議論は多数のウェブ・ページ にあります。",
                        ko = "1~4차원에 대한 Simplex 노이즈를 생성합니다.\n\nSimplex 노이즈(영어)는Perlin 노이즈(영어)의 업그레이드 버전입니다. PCG(영어)에 폭넓게 사용됩니다.\n\nStefan Gustavson의 Simplex noise demystified(영어)에서 Simplex 노이즈에 관한 자세한 설명을 얻으실 수 있습니다.",
                        ru = "Генерирует симплексный шум в одном-четырёх измерениях.\n\nСимплексный шум близок к шуму Перлина. Широко используется для процедурной генерации игрового контента.\n\nСуществует множество интернет страниц, где детально обсуждаются симплексный шум и шум Перлина.\n\nГенерирует симплексный Шум в одном измерении.\n\n&lt;source lang=\"lua\"&gt;\n\nvalue = love.math.noise( x )\n\n&lt;/source&gt;\n\nГенерирует симплексный шум в двух измерениях.\n\n&lt;source lang=\"lua\"&gt;\n\nvalue = love.math.noise( x, y )\n\n&lt;/source&gt;\n\nГенерирует симплексный шум в трёх измерениях.\n\n&lt;source lang=\"lua\"&gt;\n\nvalue = love.math.noise( x, y, z )\n\n&lt;/source&gt;\n\nГенерирует симплексный шум в четырёх измерениях.\n\n&lt;source lang=\"lua\"&gt;\n\nvalue = love.math.noise( x, y, z, w )\n\n&lt;/source&gt;\n\n* parent::love.math (Русский)\n\nCategory:Functions"
                    },
                    minidescriptiont = {
                        jp = "１～４次元によるシンプレックスまたはパーリンノイズの値を生成します。",
                        ko = "1~4차원에 대한 Simplex 노이즈를 생성합니다.",
                        ru = "Генерация значения симплексного шума в одном-четырёх измерениях."
                    },
                    name = "noise",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The number used to generate the noise value.",
                                    descriptiont = {
                                        jp = "ノイズ値の生成に使用する数値。",
                                        ko = "노이즈를 만드는 데 사용되는 값."
                                    },
                                    name = "x",
                                    type = "number"
                                }
                            },
                            description = "Generates Simplex noise from 1 dimension.",
                            descriptiont = {
                                jp = "１次元によるシンプレックスノイズを生成します。",
                                ko = "1차원 Simplex 노이즈를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The noise value in the range of [0, 1].",
                                    descriptiont = {
                                        jp = "1 の範囲におけるノイズ値。",
                                        ko = "0과 1 사이의 노이즈 값."
                                    },
                                    name = "value",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first value of the 2-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第一の値としてノイズ値を生成するために使用される２次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 2차원 벡터의 첫 번째 값."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The second value of the 2-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第二の値としてノイズ値を生成するために使用される２次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 2차원 벡터의 두 번째 값."
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            },
                            description = "Generates Simplex noise from 2 dimensions.",
                            descriptiont = {
                                jp = "２次元によるシンプレックスノイズを生成します。",
                                ko = "2차원 Simplex 노이즈를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The noise value in the range of [0, 1].",
                                    descriptiont = {
                                        jp = "1 の範囲におけるノイズ値。",
                                        ko = "0과 1 사이의 노이즈 값."
                                    },
                                    name = "value",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first value of the 3-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第一の値としてノイズ値を生成するために使用される３次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 3차원 벡터의 첫 번째 값."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The second value of the 3-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第二の値としてノイズ値を生成するために使用される３次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 3차원 벡터의 두 번째 값."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The third value of the 3-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第三の値としてノイズ値を生成するために使用される３次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 3차원 벡터의 세 번째 값."
                                    },
                                    name = "z",
                                    type = "number"
                                }
                            },
                            description = "Generates Perlin noise (Simplex noise in version 0.9.2 and older) from 3 dimensions.",
                            descriptiont = {
                                jp = "３次元によるシンプレックスまたはパーリンノイズ (version 0.9.2 以前ではシンプレックスノイズ) を生成します。",
                                ko = "3차원 Simplex 노이즈를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The noise value in the range of [0, 1].",
                                    descriptiont = {
                                        jp = "1 の範囲におけるノイズ値。",
                                        ko = "0과 1 사이의 노이즈 값."
                                    },
                                    name = "value",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first value of the 4-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第一の値としてノイズ値を生成するために使用される４次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 4차원 벡터의 첫 번째 값."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The second value of the 4-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第二の値としてノイズ値を生成するために使用される４次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 4차원 벡터의 두 번째 값."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The third value of the 4-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第三の値としてノイズ値を生成するために使用される４次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 4차원 벡터의 세 번째 값."
                                    },
                                    name = "z",
                                    type = "number"
                                },
                                {
                                    description = "The fourth value of the 4-dimensional vector used to generate the noise value.",
                                    descriptiont = {
                                        jp = "第四の値としてノイズ値を生成するために使用される４次元ベクトル。",
                                        ko = "노이즈를 만드는 데 사용되는 4차원 벡터의 네 번째 값."
                                    },
                                    name = "w",
                                    type = "number"
                                }
                            },
                            description = "Generates Perlin noise (Simplex noise in version 0.9.2 and older) from 4 dimensions.",
                            descriptiont = {
                                jp = "４次元によるシンプレックスまたはパーリンノイズ (version 0.9.2 以前ではシンプレックスノイズ) を生成します。",
                                ko = "4차원 Simplex 노이즈를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The noise value in the range of [0, 1].",
                                    descriptiont = {
                                        jp = "1 の範囲におけるノイズ値。",
                                        ko = "0과 1 사이의 노이즈 값."
                                    },
                                    name = "value",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Generates a pseudo-random number in a platform independent manner.",
                    descriptiont = {
                        jp = "プラットフォームに依存しない方法で疑似乱数を生成します。",
                        ko = "고르게 분포되어 있는 유사난수를 생성합니다."
                    },
                    minidescriptiont = {
                        jp = "一様分布による疑似乱数の整数を取得します。",
                        ko = "고르게 분포되어 있는 유사난수를 생성합니다."
                    },
                    name = "random",
                    variants = {
                        {
                            description = "Get uniformly distributed pseudo-random real number within [0, 1].",
                            descriptiont = {
                                jp = "一様分布による疑似乱数を [0,1] の範囲で整数として取得します。",
                                ko = "1에 고르게 분포되어 있는 난수를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The pseudo-random number.",
                                    descriptiont = {
                                        jp = "疑似乱数。",
                                        ko = "난수."
                                    },
                                    name = "number",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The maximum possible value it should return.",
                                    descriptiont = {
                                        jp = "返すことができる最大値。",
                                        ko = "난수의 최댓값."
                                    },
                                    name = "max",
                                    type = "number"
                                }
                            },
                            description = "Get a uniformly distributed pseudo-random integer within [1, max].",
                            descriptiont = {
                                jp = "一様分布による疑似乱数を [1,max] の範囲内で整数として取得します。",
                                ko = "max에 고르게 분포되어 있는 난수를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The pseudo-random integer number.",
                                    descriptiont = {
                                        jp = "疑似乱数の整数。",
                                        ko = "난수."
                                    },
                                    name = "number",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The minimum possible value it should return.",
                                    descriptiont = {
                                        jp = "返すことができる最小値。",
                                        ko = "난수의 최솟값."
                                    },
                                    name = "min",
                                    type = "number"
                                },
                                {
                                    description = "The maximum possible value it should return.",
                                    descriptiont = {
                                        jp = "返すことができる最大値。",
                                        ko = "난수의 최댓값."
                                    },
                                    name = "max",
                                    type = "number"
                                }
                            },
                            description = "Get uniformly distributed pseudo-random integer within [min, max].",
                            descriptiont = {
                                jp = "一様分布による疑似乱数を max の範囲内で整数として取得します。",
                                ko = "max에 고르게 분포되어 있는 난수를 생성합니다."
                            },
                            returns = {
                                {
                                    description = "The pseudo-random integer number.",
                                    descriptiont = {
                                        jp = "疑似乱数の整数。",
                                        ko = "난수."
                                    },
                                    name = "number",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Get a normally distributed pseudo random number.",
                    descriptiont = {
                        jp = "正規分布による疑似乱数を取得します。",
                        ko = "정규 분포를 따르는 유사난수를 생성합니다."
                    },
                    minidescriptiont = {
                        jp = "正規分布による疑似乱数を取得します。",
                        ko = "정규 분포를 따르는 유사난수를 생성합니다."
                    },
                    name = "randomNormal",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "1",
                                    description = "Standard deviation of the distribution.",
                                    descriptiont = {
                                        jp = "分布の標準偏差。",
                                        ko = "표준편차."
                                    },
                                    name = "stddev",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The mean of the distribution.",
                                    descriptiont = {
                                        jp = "平均分布値。",
                                        ko = "평균."
                                    },
                                    name = "mean",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "Normally distributed random number with variance (stddev)² and the specified mean.",
                                    descriptiont = {
                                        jp = "指定された平均および偏差 (stddev)² により返された正規分布の乱数。",
                                        ko = "난수."
                                    },
                                    name = "number",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the seed of the random number generator using the specified integer number.",
                    descriptiont = {
                        jp = "指定された整数値を使用して乱数生成器の種を設定します。",
                        ko = "난수 생성기의 시드를 설정합니다."
                    },
                    minidescriptiont = {
                        jp = "乱数生成器の種を設定します。",
                        ko = "난수 생성기의 시드를 설정합니다."
                    },
                    name = "setRandomSeed",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The integer number with which you want to seed the randomization. Must be within the range of [1, 2^53].",
                                    descriptiont = {
                                        jp = "無作為に抽出する種として整数の数値。必ず 2^53 - 1 の範囲内にしてください。"
                                    },
                                    name = "seed",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The lower 32 bits of the state value. Must be within the range of [0, 2^32 - 1].",
                                    descriptiont = {
                                        jp = "下位 32 bit の種の数値。必ず 2^32 - 1 の範囲内にしてください。",
                                        ko = "64비트 시드값의 하위 32비트를 표현하는 정수."
                                    },
                                    name = "low",
                                    type = "number"
                                },
                                {
                                    description = "The higher 32 bits of the state value. Must be within the range of [0, 2^32 - 1].",
                                    descriptiont = {
                                        jp = "上位 32 bit の種の数値。必ず 2^32 - 1 の範囲内にしてください。",
                                        ko = "64비트 시드값의 상위 32비트를 표현하는 정수."
                                    },
                                    name = "high",
                                    type = "number"
                                }
                            },
                            descriptiont = {
                                jp = "32 bit の整数の値を二つ組み合わせて 64 bit 整数値として扱い乱数生成器で使用する種の値として設定します。",
                                ko = "두 개의 32비트 정수를 결합해 64비트의 시드를 설정합니다."
                            }
                        }
                    }
                },
                {
                    description = "Gets the current state of the random number generator. This returns an opaque implementation-dependent string which is only useful for later use with RandomGenerator:setState.\n\nThis is different from RandomGenerator:getSeed in that getState gets the RandomGenerator's current state, whereas getSeed gets the previously set seed number.\n\nThe value of the state string does not depend on the current operating system.",
                    descriptiont = {},
                    minidescriptiont = {},
                    name = "setRandomState",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The current state of the RandomGenerator object, represented as a string.",
                                    name = "state",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Triangulate a simple polygon.",
                    descriptiont = {
                        jp = "単一の凸面または凹面の多角形を三角形へ分解します。",
                        ko = "단순한 다각형을 삼각형으로 분해합니다."
                    },
                    minidescriptiont = {
                        jp = " 単一の多角形を三角形へ分解します。",
                        ko = "단순한 다각형을 삼각형으로 분해합니다."
                    },
                    name = "triangulate",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Polygon to triangulate. Must not intersect itself.",
                                    descriptiont = {
                                        jp = "三角形に分けたい多角形。それ自体と交差してはいけません。",
                                        ko = "삼각형으로 분해할 다각형. 선분이 서로 겹처있으면 분해 불가."
                                    },
                                    name = "polygon",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "List of triangles the polygon is composed of, in the form of {{x1, y1, x2, y2, x3, y3}, {x1, y1, x2, y2, x3, y3}, ...}.",
                                    descriptiont = {
                                        jp = "多角形として構成されていた三角形の一覧であり、形式は &lt;nowiki&gt;{{x1, y1, x2, y2, x3, y3},  {x1, y1, x2, y2, x3, y3}, ...}&lt;/nowiki&gt; です。",
                                        ko = "&lt;nowiki&gt;{{x1, y1, x2, y2, x3, y3},  {x1, y1, x2, y2, x3, y3}, ...}&lt;/nowiki&gt;의 형태로 나타내는 삼각형 리스트."
                                    },
                                    name = "triangles",
                                    type = "table"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The position of the first vertex of the polygon on the x-axis.",
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The position of the first vertex of the polygon on the y-axis.",
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The position of the second vertex of the polygon on the x-axis.",
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The position of the second vertex of the polygon on the y-axis.",
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "The position of the third vertex of the polygon on the x-axis.",
                                    name = "x3",
                                    type = "number"
                                },
                                {
                                    description = "The position of the third vertex of the polygon on the y-axis.",
                                    name = "y3",
                                    type = "number"
                                },
                                {
                                    description = "Additional vertices.",
                                    name = "...",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "List of triangles the polygon is composed of, in the form of {{x1, y1, x2, y2, x3, y3}, {x1, y1, x2, y2, x3, y3}, ...}.",
                                    name = "triangles",
                                    type = "table"
                                }
                            }
                        }
                    }
                }
            },
            name = "math",
            types = {
                {
                    constructors = {
                        "newBezierCurve"
                    },
                    description = "A Bézier curve object that can evaluate and render Bézier curves of arbitrary degree.",
                    descriptiont = {
                        jp = "ベジェ曲線オブジェクトは任意の次数でベジェ曲線の評価および表示を行います。ベジェ曲線についての詳細な情報は Wikipedia にあるこの素晴らしい記事を調べてみてください。",
                        ko = "베지에 곡선입니다.\n\n이 곡선에 대한 자세한 정보는 위키백과의 베지에 곡선 항목을 참조하세요.",
                        ru = "Объект кривая Безье, который может определять количество и создавать кривые Безье произвольной степени.\n\nДля получения более подробной информации о кривых Безье посетите эту отличную статью в Википедии."
                    },
                    functions = {
                        {
                            description = "Evaluate Bézier curve at parameter t. The parameter must be between 0 and 1 (inclusive).\n\nThis function can be used to move objects along paths or tween parameters. However it should not be used to render the curve, see BezierCurve:render for that purpose.",
                            descriptiont = {},
                            minidescriptiont = {},
                            name = "evaluate",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Where to evaluate the curve.",
                                            name = "t",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "x coordinate of the curve at parameter t.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "y coordinate of the curve at parameter t.",
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get coordinates of the i-th control point. Indices start with 1.",
                            descriptiont = {
                                jp = "第 i 番目における制御点の座標を取得します。索引は 1 から始まります。",
                                ko = "i번째 조절점을 얻어옵니다. 인덱스는 1부터 시작합니다.",
                                ru = "Получает координаты контрольной точки i, Индексы начинаются с 1."
                            },
                            minidescriptiont = {
                                jp = "第 i 番目における制御点の座標を取得します。",
                                ko = "i번째 조절점을 얻어옵니다.",
                                ru = "Получает координаты контрольной точки i, Индексы начинаются с 1."
                            },
                            name = "getControlPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Index of the control point.",
                                            descriptiont = {
                                                jp = "制御点の索引",
                                                ko = "얻어올 조절점의 인덱스.",
                                                ru = "Индекс контрольной точки."
                                            },
                                            name = "i",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        ko = "=== Synopsis ===\n\n&lt;source lang=\"lua\"&gt;\n\nx, y = BezierCurve:getControlPoint(i)\n\n&lt;/source&gt;"
                                    },
                                    returns = {
                                        {
                                            description = "Position of the control point along the x axis.",
                                            descriptiont = {
                                                jp = "x 軸からの制御点の位置。",
                                                ko = "조절점의 x좌표.",
                                                ru = "Положение контрольной точки вдоль оси x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "Position of the control point along the y axis.",
                                            descriptiont = {
                                                jp = "y 軸からの制御点の位置。",
                                                ko = "조절점의 y좌표.",
                                                ru = "Положение контрольной точки вдоль оси y."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the number of control points in the Bézier curve.",
                            descriptiont = {
                                jp = "ベジェ曲線にある制御点の個数を取得します。",
                                ko = "조절점의 개수를 구합니다.",
                                ru = "Получает число контрольных точек на кривой Безье."
                            },
                            minidescriptiont = {
                                jp = "ベジェ曲線にある制御点の個数を取得します。",
                                ko = "조절점의 개수를 구합니다.",
                                ru = "Получает число контрольных точек на кривой Безье."
                            },
                            name = "getControlPointCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of control points.",
                                            descriptiont = {
                                                jp = "ベジェ曲線にある制御点の個数。",
                                                ko = "조절점의 개수.",
                                                ru = "Число контрольных точек."
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get degree of the Bézier curve. The degree is equal to number-of-control-points - 1.",
                            descriptiont = {
                                jp = "ベジェ曲線の次数(階数)を取得します。次数は制御点の個数 - 1 と等価です。",
                                ko = "베지에 곡선의 차수를 구합니다. 차수는 조절점 개수 - 1 입니다.",
                                ru = "Получает степень кривой Безье. Степень равна числу контрольных точек - 1."
                            },
                            minidescriptiont = {
                                jp = "ベジェ曲線の次数(階数)を取得します。",
                                ko = "베지에 곡선의 차수를 구합니다.",
                                ru = "Получает степень кривой Безье.."
                            },
                            name = "getDegree",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Degree of the Bézier curve.",
                                            descriptiont = {
                                                jp = "ベジェ曲線の次数(階数)。",
                                                ko = "베지에 곡선의 차수.",
                                                ru = "Степень кривой Безье."
                                            },
                                            name = "degree",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the derivative of the Bézier curve.\n\nThis function can be used to rotate sprites moving along a curve in the direction of the movement and compute the direction perpendicular to the curve at some parameter t.",
                            descriptiont = {
                                jp = "ベジェ曲線の派生物を取得します。\n\nこの関数は移動の方向として曲線に沿って回転移動するスプライトおよび、ある引数 t に対する曲線の垂直方向を計算するために使用できます。",
                                ko = "베지에 곡선의 도함수를 구합니다.\n\n이 함수는 곡선을 따라 움직이고 있는 스프라이트의 이동 방향을 회전 시킬 때, 곡선 내의 특정한 지점에서 직각 방향을 구할 때와 같은 특수한 경우에 아주 유용하게 사용할 수 있습니다.",
                                ru = "Получить производную кривую Безье.\n\nЭта функция может быть использована, чтобы повернуть спрайты, движущиеся вдоль кривой по направлению движения и вычислить направление перпендикулярно к кривой в некотором параметре t."
                            },
                            minidescriptiont = {
                                jp = "ベジェ曲線の派生物を取得します。",
                                ko = "베지에 곡선의 도함수를 구합니다.",
                                ru = "Получить производную кривую Безье."
                            },
                            name = "getDerivative",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The derivative curve.",
                                            descriptiont = {
                                                jp = "曲線の派生物。",
                                                ko = "미분당한 베지에 곡선.",
                                                ru = "Производная кривая."
                                            },
                                            name = "derivative",
                                            type = "BezierCurve"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a BezierCurve that corresponds to the specified segment of this BezierCurve.",
                            descriptiont = {
                                jp = "現在の BezierCurve で指定された線分に対応する BezierCurve を取得します。"
                            },
                            minidescriptiont = {
                                jp = "現在の BezierCurve で指定された線分に対応する BezierCurve を取得します。"
                            },
                            name = "getSegment",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The starting point along the curve. Must be between 0 and 1.",
                                            descriptiont = {
                                                jp = "曲線からの始点。 0 から 1 までの範囲内にする必要があります。"
                                            },
                                            name = "startpoint",
                                            type = "number"
                                        },
                                        {
                                            description = "The end of the segment. Must be between 0 and 1.",
                                            descriptiont = {
                                                jp = "線分の終点。 0 から 1 までの範囲内にする必要があります。"
                                            },
                                            name = "endpoint",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "A BezierCurve that corresponds to the specified segment.",
                                            descriptiont = {
                                                jp = "指定された線分に対応する BezierCurve です。"
                                            },
                                            name = "curve",
                                            type = "BezierCurve"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Insert control point as the new i-th control point. Existing control points from i onwards are pushed back by 1. Indices start with 1. Negative indices wrap around: -1 is the last control point, -2 the one before the last, etc.",
                            descriptiont = {
                                jp = "第 i 番目の制御点へ制御点を新規挿入します。既存の制御点は i から前方へ 1 つ移動します。負数の索引は丸め込みます: -1 は最後の制御点、 -2 は最後から一つ前、など。",
                                ko = "i번째 위치 다음에 조절점을 삽입합니다. 인덱스는 1부터 시작합니다. 음수 인덱스의 경우 -1은 마지막 위치를, -2는 마지막 점의 바로 앞 점을 가리킵니다.",
                                ru = "Вставляет контрольную точку после контрольной точки i. Индексы начинаются с 1. Отрицательные показатели обходят: -1 это последняя контрольная точка, -2 один перед последний контрольной точкой, и т.д."
                            },
                            minidescriptiont = {
                                jp = "第 i 番目の制御点へ制御点を新規挿入します。",
                                ko = "i번째 위치 다음에 조절점을 삽입합니다.",
                                ru = "Вставляет контрольную точку после контрольной точки i."
                            },
                            name = "insertControlPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Position of the control point along the x axis.",
                                            descriptiont = {
                                                jp = "x 軸からの制御点の位置。",
                                                ko = "조절점의 x좌표.",
                                                ru = "Положение контрольной точки вдоль оси x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "Position of the control point along the y axis.",
                                            descriptiont = {
                                                jp = "y 軸からの制御点の位置。",
                                                ko = "조절점의 y좌표.",
                                                ru = "Положение контрольной точки вдоль оси у."
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            default = "-1",
                                            description = "Index of the control point.",
                                            descriptiont = {
                                                jp = "制御点の索引。",
                                                ko = "삽입할 조절점의 인덱스.",
                                                ru = "Индекс контрольной точки."
                                            },
                                            name = "i",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Removes the specified control point.",
                            descriptiont = {
                                jp = "指定された制御点を削除します。"
                            },
                            minidescriptiont = {
                                jp = "指定された制御点を削除します。"
                            },
                            name = "removeControlPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the control point to remove.",
                                            descriptiont = {
                                                jp = "削除を行う制御点の索引。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get a list of coordinates to be used with love.graphics.line.\n\nThis function samples the Bézier curve using recursive subdivision. You can control the recursion depth using the depth parameter.\n\nIf you are just interested to know the position on the curve given a parameter, use BezierCurve:evaluate.",
                            descriptiont = {
                                jp = "love.graphics.line で使用される座標の一覧を取得します。\n\nこの関数は再帰的に再分割を行いベジェ曲線を標本化します。再帰の深さは depth 引数を使用して制御できます。\n\n引数に与えられた曲線ついての位置を知ることに興味があるならば、 BezierCurve:evaluate を使用してください。",
                                ko = "곡선을 짧은 선분들로 분해합니다. love.graphics.line을 이용해 분해한 선분들을 화면에 출력할 수 있습니다.\n\n이 함수는 곡선을 짧은 선분들로 분해해 각 점의 좌표를 리턴합니다. 만약 특정한 하나의 위치를 구하길 원한다면 BezierCurve:evaluate을 참조하시길 바랍니다.",
                                ru = "Получает список координат, которые будут использоваться вместе с love.graphics.line (Русский).\n\nОбразцы функции кривой Безье, используют рекурсивное разбитие (рекурсия на Википедии). Вы можете контролировать глубину рекурсии с помощью параметра глубины.\n\nЕсли вы просто хотите узнать позицию на кривой учитывая параметр, используете BezierCurve:evaluate (Русский)."
                            },
                            minidescriptiont = {
                                jp = "曲線に関する座標の一覧を取得します。",
                                ko = "곡선을 짧은 선분들로 분해합니다.",
                                ru = "Получает список точек на кривой."
                            },
                            name = "render",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "5",
                                            description = "Number of recursive subdivision steps.",
                                            descriptiont = {
                                                jp = "再起的に再分割された階数。",
                                                ko = "분해한 후 리턴될 점들의 개수. 값이 클수록 더 정밀함."
                                            },
                                            name = "depth",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "List of x,y-coordinate pairs of points on the curve.",
                                            descriptiont = {
                                                jp = "曲線状にある点における対の x, y 座標の一覧。",
                                                ko = "각 점의 좌표 리스트."
                                            },
                                            name = "coordinates",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get a list of coordinates on a specific part of the curve, to be used with love.graphics.line.\n\nThis function samples the Bézier curve using recursive subdivision. You can control the recursion depth using the depth parameter.\n\nIf you are just need to know the position on the curve given a parameter, use BezierCurve:evaluate.",
                            descriptiont = {
                                jp = "love.graphics.line で使用するために、特定の曲線部分に関する座標の一覧を取得します。\n\nこの関数は再帰的細分を使用してベジェ曲線の標本を取得します。 引数 depth を使用して再帰の深度を制御することができます。\n\n与えられた引数に関する曲線位置を知る必要があるだけならば、 BezierCurve:evaluate を使用してください。"
                            },
                            minidescriptiont = {
                                jp = "特定の曲線部分に関する座標の一覧を取得します。"
                            },
                            name = "renderSegment",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The starting point along the curve. Must be between 0 and 1.",
                                            descriptiont = {
                                                jp = "曲線からの始点。 0 から 1 までの範囲内にする必要があります。"
                                            },
                                            name = "startpoint",
                                            type = "number"
                                        },
                                        {
                                            description = "The end of the segment to render. Must be between 0 and 1.",
                                            descriptiont = {
                                                jp = "表示を行う線分の終点。 0 から 1 までの範囲内にする必要があります。"
                                            },
                                            name = "endpoint",
                                            type = "number"
                                        },
                                        {
                                            default = "5",
                                            description = "Number of recursive subdivision steps.",
                                            descriptiont = {
                                                jp = "再帰的細分刻み幅の数。"
                                            },
                                            name = "depth",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "List of x,y-coordinate pairs of points on the curve.",
                                            descriptiont = {
                                                jp = "指定された曲線部分に関する地点における x, y 座標対の一覧。"
                                            },
                                            name = "coordinates",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Rotate the Bézier curve by an angle.",
                            descriptiont = {
                                jp = "角度によりベジェ曲線を回転します。",
                                ko = "곡선을 회전합니다.",
                                ru = "Поворачивает кривую Безье под углом."
                            },
                            minidescriptiont = {
                                jp = "角度によりベジェ曲線を回転します。",
                                ko = "곡선을 회전합니다.",
                                ru = "Поворачивает кривую Безье под углом."
                            },
                            name = "rotate",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Rotation angle in radians.",
                                            descriptiont = {
                                                jp = "弧度による回転角度。",
                                                ko = "회전할 라디안.",
                                                ru = "Угол поворота в радианах."
                                            },
                                            name = "angle",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "X coordinate of the rotation center.",
                                            descriptiont = {
                                                jp = "回転の中心点における X 軸。",
                                                ko = "회전의 중심이 될 x좌표.",
                                                ru = "X координата центра вращения."
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Y coordinate of the rotation center.",
                                            descriptiont = {
                                                jp = "回転の中心点における Y 軸。",
                                                ko = "회전의 중심이 될 y좌표.",
                                                ru = "Y координата центра вращения."
                                            },
                                            name = "oy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Scale the Bézier curve by a factor.",
                            descriptiont = {
                                jp = "係数によりベジェ曲線の尺度を変更します。",
                                ko = "곡선을 확대합니다.",
                                ru = "Масштаб кривой Безье с коэффициентом."
                            },
                            minidescriptiont = {
                                jp = "ベジェ曲線の尺度を変更します。",
                                ko = "곡선을 확대합니다.",
                                ru = "Масштабирование кривой Безье."
                            },
                            name = "scale",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Scale factor.",
                                            descriptiont = {
                                                jp = "尺度変更係数。",
                                                ko = "확대 배율.",
                                                ru = "Масштаб."
                                            },
                                            name = "s",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "X coordinate of the scaling center.",
                                            descriptiont = {
                                                jp = "尺度変更における中心の X 座標。",
                                                ko = "확대의 중심이 될 x좌표.",
                                                ru = "X координата масштабирования центра."
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "Y coordinate of the scaling center.",
                                            descriptiont = {
                                                jp = "尺度変更における中心の Y 座標。",
                                                ko = "확대의 중심이 될 y좌표.",
                                                ru = "Y координата масштабирования центра."
                                            },
                                            name = "oy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set coordinates of the i-th control point. Indices start with 1.",
                            descriptiont = {
                                jp = "第 i 番目における制御点の座標を設定します。索引は 1 から始まります。",
                                ko = "i번째 조절점을 설정합니다. 인덱스는 1부터 시작합니다.",
                                ru = "Устанавливает координаты контрольной точки i. Индексы начинаются с 1."
                            },
                            minidescriptiont = {
                                jp = "第 i 番目における制御点の座標を設定します。",
                                ko = "i번째 조절점을 설정합니다.",
                                ru = "Устанавливает координаты контрольной точки i."
                            },
                            name = "setControlPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Index of the control point.",
                                            descriptiont = {
                                                jp = "制御点の索引。",
                                                ko = "설정할 조절점의 인덱스.",
                                                ru = "Индекс контрольной точки."
                                            },
                                            name = "i",
                                            type = "number"
                                        },
                                        {
                                            description = "Position of the control point along the x axis.",
                                            descriptiont = {
                                                jp = "x 軸からの制御点の位置。",
                                                ko = "조절점의 x좌표.",
                                                ru = "Положение контрольной точки вдоль оси x."
                                            },
                                            name = "ox",
                                            type = "number"
                                        },
                                        {
                                            description = "Position of the control point along the y axis.",
                                            descriptiont = {
                                                jp = "y 軸からの制御点の位置。",
                                                ko = "조절점의 y좌표.",
                                                ru = "Положение контрольной точки вдоль оси y."
                                            },
                                            name = "oy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Move the Bézier curve by an offset.",
                            descriptiont = {
                                jp = "ベジェ曲線を支距により移動します。",
                                ko = "곡선을 상대적인 위치로 이동시킵니다.",
                                ru = "Перемещает кривую Безье по смещению."
                            },
                            minidescriptiont = {
                                jp = "ベジェ曲線を支距により移動します。",
                                ko = "곡선을 상대적인 위치로 이동시킵니다.",
                                ru = "Перемещение кривой Безье."
                            },
                            name = "translate",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Offset along the x axis.",
                                            descriptiont = {
                                                jp = "x 軸からの支距。",
                                                ko = "이동시킬 x축 거리.",
                                                ru = "Смещение по оси x."
                                            },
                                            name = "dx",
                                            type = "number"
                                        },
                                        {
                                            description = "Offset along the y axis.",
                                            descriptiont = {
                                                jp = "y 軸からの支距。",
                                                ko = "이동시킬 y축 거리.",
                                                ru = "Смещение по оси y."
                                            },
                                            name = "dy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "BezierCurve",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "compress"
                    },
                    description = "Represents byte data compressed using a specific algorithm.\n\nlove.math.decompress can be used to de-compress the data.",
                    descriptiont = {
                        jp = "特定のアルゴリズムを使用して圧縮されたバイトデータを表します。\n\nlove.math.decompress はデータの展開に使用することができます。"
                    },
                    functions = {
                        {
                            description = "Gets the compression format of the CompressedData.",
                            descriptiont = {
                                jp = "CompressedData の圧縮形式を取得します。"
                            },
                            minidescriptiont = {
                                jp = "CompressedData の圧縮形式を取得します。"
                            },
                            name = "getFormat",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The format of the CompressedData.",
                                            descriptiont = {
                                                jp = "CompressedData の圧縮形式です。"
                                            },
                                            name = "format",
                                            type = "CompressedDataFormat"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "CompressedData",
                    parenttype = "Data",
                    supertypes = {
                        "Data",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newRandomGenerator"
                    },
                    description = "A random number generation object which has its own random state.",
                    descriptiont = {
                        de = "Ein Zufallszahlengenerator-Objekt welches seinen eigenen zufälligen Zustand hat.",
                        jp = "単独で乱数の状態を保持している乱数生成オブジェクトです。",
                        ko = "자기 고유의 상태를 가지는 난수 생성기입니다.",
                        ru = "Случайное число генерации объекта, который имеет свое собственное случайное состояние."
                    },
                    functions = {
                        {
                            description = "Gets the state of the random number generator.\n\nThe state is split into two numbers due to Lua's use of doubles for all number values - doubles can't accurately represent integer values above 2^53.",
                            descriptiont = {
                                jp = "乱数生成器オブジェクトの種を取得します。\n\n種は Lua の全ての数値に対して倍精度浮動小数点数を使用することにより二つの数値へ分割されます ― 倍数において 2 の 53 乗以上の整数値を正確に表現できませんが、種値の範囲では 0, 2 の 64 乗 -1  まで整数値の表現になります。",
                                ko = "난수 생성기의 시드를 얻어옵니다.\n\n루아에선 모든 수를 배정밀도 부동소수점(double)으로 처리합니다. 때문에 2^53 이상의 정수의 경우 그 값을 정확하게 표시하지 못합니다. 시드는 2^64 정수로 이루어져 있으므로 LÖVE는 이를 온전히 전달하기 위해 비트를 둘로 쪼개서 반환합니다.",
                                ru = "Получает семя объекта генератора случайных чисел.\n\nСемя делится на два числа из-за использования Lua оно удваивается для всех числовых значений - число двойной точности не может точно представлять целые значения выше 2^53, но начальное значение представляет собой целое число в диапазоне 2^64 - 1."
                            },
                            minidescriptiont = {
                                jp = "乱数生成器オブジェクトの種を取得します。",
                                ko = "난수 생성기의 시드를 얻어옵니다.",
                                ru = "Получает семя объекта генератора случайных чисел."
                            },
                            name = "getSeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Integer number representing the lower 32 bits of the random number generator's 64 bit state value.",
                                            descriptiont = {
                                                jp = "RandomGenerator の 64 bit 種値のうち下位 32 bit の整数表現。",
                                                ko = "64비트 시드값의 하위 32비트를 표현하는 정수.",
                                                ru = "Целое число, представляющее меньше 32 битного 64 битного RandomGenerator значения семени."
                                            },
                                            name = "low",
                                            type = "number"
                                        },
                                        {
                                            description = "Integer number representing the higher 32 bits of the random number generator's 64 bit state value.",
                                            descriptiont = {
                                                jp = "RandomGenerator の 64 bit 種値のうち上位 32 bit の整数表現。",
                                                ko = "64비트 시드값의 상위 32비트를 표현하는 정수.",
                                                ru = "Целое число, представляющее больше 32 битного 64 битного RandomGenerator значения семени."
                                            },
                                            name = "high",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the current state of the random number generator. This returns an opaque implementation-dependent string which is only useful for later use with RandomGenerator:setState.\n\nThis is different from RandomGenerator:getSeed in that getState gets the RandomGenerator's current state, whereas getSeed gets the previously set seed number.\n\nThe value of the state string does not depend on the current operating system.",
                            descriptiont = {
                                jp = "乱数生成器の現在状態を取得します。これは以後に使用する RandomGenerator:setState でのみ有用であり不透過な実装依存の文字列を返します。\n\n'''RandomGenerator:getState''' は RandomGenerator の現在状態を取得しますが RandomGenerator:getSeed とは動作が異なり、 RandomGenerator:getSeed では以前に設定された種の数値を取得します。",
                                ru = "Получает текущее состояние генератора случайных чисел. Она возвращает не точно зависящую от реализации строку, которая полезна только для последующего использования с RandomGenerator:setState (Русский).\n\nОна отличается от RandomGenerator: getSeed тем что GetState получает текущее состояние RandomGenerator, тогда как getSeed получает установленное ранее количество семян."
                            },
                            minidescriptiont = {
                                jp = "乱数生成器の現在状態を取得します。",
                                ru = "Gets the current state of the random number generator."
                            },
                            name = "getState",
                            variants = {
                                {
                                    descriptiont = {
                                        ru = "Значение строки состояния не зависит от текущей операционной системы.\n\n== Примеры ==\n\n&lt;source lang=\"lua\"&gt;\n\nrng = love.math.newRandomGenerator(os.time())\n\nfor i=1, 100 do\n\n    -- Используем некоторые случайные числа.\n\n    rng:random()\n\nend\n\n-- Создайте новый RandomGenerator и установите его состояние в текущее состояние первого.\n\nrng2 = love.math.newRandomGenerator()\n\nrng2:setState(rng:getState())\n\n-- И то и другое 'rng' и 'rng2' теперь будут выдавать те же результаты. \n\nassert(rng:random() == rng2:random())\n\n&lt;/source&gt;"
                                    },
                                    returns = {
                                        {
                                            description = "The current state of the RandomGenerator object, represented as a string.",
                                            descriptiont = {
                                                jp = "文字列で表現した RandomGenerator オブジェクトの現在状態。",
                                                ru = "Текущее состояние обекта RandomGenerator, представленное в виде строки."
                                            },
                                            name = "state",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Generates a pseudo-random number in a platform independent manner.",
                            descriptiont = {
                                jp = "プラットフォームに依存しない方法で疑似乱数を生成します。",
                                ko = "고르게 분포되어 있는 유사난수를 생성합니다."
                            },
                            minidescriptiont = {
                                jp = "プラットフォームに依存しない方法で疑似乱数を生成します。",
                                ko = "고르게 분포되어 있는 유사난수를 생성합니다."
                            },
                            name = "random",
                            variants = {
                                {
                                    description = "Get uniformly distributed pseudo-random number within [0, 1].",
                                    descriptiont = {
                                        jp = "一様分布による疑似乱数を [0,1] の範囲内で整数として取得します。",
                                        ko = "1에 고르게 분포되어 있는 난수를 생성합니다."
                                    },
                                    returns = {
                                        {
                                            description = "The pseudo random number.",
                                            descriptiont = {
                                                jp = "疑似乱数。",
                                                ko = "난수."
                                            },
                                            name = "number",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The maximum possible value it should return.",
                                            descriptiont = {
                                                jp = "返すことができる最大値。",
                                                ko = "난수의 최댓값."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    },
                                    description = "Get uniformly distributed pseudo-random integer number within [1, max].",
                                    descriptiont = {
                                        jp = "一様分布による疑似乱数を [1,max] の範囲内で整数として取得します。",
                                        ko = "max에 고르게 분포되어 있는 난수를 생성합니다."
                                    },
                                    returns = {
                                        {
                                            description = "The pseudo-random integer number.",
                                            descriptiont = {
                                                jp = "疑似乱数。",
                                                ko = "난수."
                                            },
                                            name = "number",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The minimum possible value it should return.",
                                            descriptiont = {
                                                jp = "返すことができる最小値。",
                                                ko = "난수의 최솟값."
                                            },
                                            name = "min",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum possible value it should return.",
                                            descriptiont = {
                                                jp = "返すことができる最大値。",
                                                ko = "난수의 최댓값."
                                            },
                                            name = "max",
                                            type = "number"
                                        }
                                    },
                                    description = "Get uniformly distributed pseudo-random integer number within [min, max].",
                                    descriptiont = {
                                        jp = "一様分布による疑似乱数を max の範囲内で整数として取得します。",
                                        ko = "max에 고르게 분포되어 있는 난수를 생성합니다."
                                    },
                                    returns = {
                                        {
                                            description = "The pseudo-random integer number.",
                                            descriptiont = {
                                                jp = "疑似乱数。",
                                                ko = "난수."
                                            },
                                            name = "number",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get a normally distributed pseudo random number.",
                            descriptiont = {
                                jp = "正規分布による疑似乱数を取得します。",
                                ko = "정규 분포를 따르는 유사난수를 생성합니다."
                            },
                            minidescriptiont = {
                                jp = "正規分布による疑似乱数を取得します。",
                                ko = "정규 분포를 따르는 유사난수를 생성합니다."
                            },
                            name = "randomNormal",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "1",
                                            description = "Standard deviation of the distribution.",
                                            descriptiont = {
                                                jp = "分布の標準偏差。"
                                            },
                                            name = "stddev",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The mean of the distribution.",
                                            descriptiont = {
                                                jp = "平均分布値。"
                                            },
                                            name = "mean",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "Normally distributed random number with variance (stddev)² and the specified mean.",
                                            descriptiont = {
                                                jp = "指定された平均および偏差 (stddev)² により返された正規分布の乱数。"
                                            },
                                            name = "number",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the seed of the random number generator using the specified integer number.",
                            descriptiont = {
                                jp = "指定された整数値を使用して乱数生成器の種を設定します。",
                                ko = "난수 생성기의 시드를 설정합니다."
                            },
                            minidescriptiont = {
                                jp = "乱数生成器の種を設定します。",
                                ko = "난수 생성기의 시드를 설정합니다."
                            },
                            name = "setSeed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The integer number with which you want to seed the randomization. Must be within the range of [1, 2^53].",
                                            descriptiont = {
                                                jp = "無作為に抽出する種として整数の数値。必ず 2^53 の範囲内にして下さい。"
                                            },
                                            name = "seed",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The lower 32 bits of the state value. Must be within the range of [0, 2^32 - 1].",
                                            descriptiont = {
                                                jp = "下位 32 bit の種の数値。必ず 2^32 - 1 の範囲内にして下さい。",
                                                ko = "64비트 시드값의 하위 32비트를 표현하는 정수."
                                            },
                                            name = "low",
                                            type = "number"
                                        },
                                        {
                                            default = "0",
                                            description = "The higher 32 bits of the state value. Must be within the range of [0, 2^32 - 1].",
                                            descriptiont = {
                                                jp = "上位 32 bit の種の数値。必ず 2^32 - 1 の範囲内にして下さい。",
                                                ko = "64비트 시드값의 상위 32비트를 표현하는 정수."
                                            },
                                            name = "high",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        jp = "32 bit の整数の値を二つ組み合わせて 64 bit 整数値として扱い乱数生成器で使用する種の値として設定します。",
                                        ko = "두 개의 32비트 정수를 결합해 64비트의 시드를 설정합니다."
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the current state of the random number generator. The value used as an argument for this function is an opaque implementation-dependent string and should only originate from a previous call to RandomGenerator:getState.\n\nThis is different from RandomGenerator:setSeed in that setState directly sets the RandomGenerator's current implementation-dependent state, whereas setSeed gives it a new seed value.\n\nThe effect of the state string does not depend on the current operating system.",
                            descriptiont = {
                                jp = "乱数生成器の現在状態を設定します。この関数で引数として使用される値は不透過な実装依存の文字列であり以前の呼び出しから RandomGenerator:getState までのみ発生します。\n\n'''RandomGenerator:setState''' は RandomGenerator の現在の実装依存状態を直接設定しますが RandomGenerator:setSeed とは動作が異なり、 RandomGenerator:setSeed では新しい種の数値を与えます。"
                            },
                            minidescriptiont = {
                                jp = "乱数生成器の現在状態を設定します。"
                            },
                            name = "setState",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new state of the RandomGenerator object, represented as a string. This should originate from a previous call to RandomGenerator:getState.",
                                            descriptiont = {
                                                jp = "文字列で表現した RandomGenerator オブジェクトの新規状態。これは以前の呼び出しから RandomGenerator:getState まで発生します。"
                                            },
                                            name = "state",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "RandomGenerator",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides an interface to the user's mouse.",
            enums = {
                {
                    constants = {
                        {
                            description = "The cursor is using a custom image.",
                            descriptiont = {
                                de = "Der Zeiger verwendet ein benutzerdefiniertes Bild.",
                                jp = "指定された画像をカーソルとして使用します。",
                                ko = "사용자 정의 이미지를 사용하는 커서."
                            },
                            name = "image"
                        },
                        {
                            description = "An arrow pointer.",
                            descriptiont = {
                                de = "Ein Pfeilzeiger.",
                                jp = "矢印ポインタ。",
                                ko = "화살표."
                            },
                            name = "arrow"
                        },
                        {
                            description = "An I-beam, normally used when mousing over editable or selectable text.",
                            descriptiont = {
                                de = "Ein I-Balken, welcher normalerweise angezeigt wird, wenn die Maus über veränderbaren Textpassagen positioniert wird.",
                                jp = "I-ビームは、通常は編集可能または選択可能なテキストへマウスを重ねたときに使用されます。",
                                ko = "텍스트를 편집할 때 나오는 I 비슷하게 생긴 모양."
                            },
                            name = "ibeam"
                        },
                        {
                            description = "Wait graphic.",
                            descriptiont = {
                                de = "Eine Wartegrafik.",
                                jp = "処理待ちの画像",
                                ko = "모래시계."
                            },
                            name = "wait"
                        },
                        {
                            description = "Small wait cursor with an arrow pointer.",
                            descriptiont = {
                                de = "Ein kleiner Wartezeiger mit einem Pfeilzeiger.",
                                jp = "矢印ポインタ付きの小型処理待ちカーソル。",
                                ko = "화살표와 모래시계."
                            },
                            name = "waitarrow"
                        },
                        {
                            description = "Crosshair symbol.",
                            descriptiont = {
                                de = "Ein Fadenkreuzsymbol.",
                                jp = "領域選択シンボル。",
                                ko = "더하기 모양."
                            },
                            name = "crosshair"
                        },
                        {
                            description = "Double arrow pointing to the top-left and bottom-right.",
                            descriptiont = {
                                de = "Ein Doppelpfeil welcher nach oben links und unten rechts zeigt.",
                                jp = "左上および右下を指す2対の矢印。",
                                ko = "↖＋↘. 주로 윈도우 크기 조절 시 나타남."
                            },
                            name = "sizenwse"
                        },
                        {
                            description = "Double arrow pointing to the top-right and bottom-left.",
                            descriptiont = {
                                de = "Ein Doppelpfeil welcher nach oben rechts und unten links zeigt.",
                                jp = "右上および左下を指す2対の矢印。",
                                ko = "↗＋↙. 주로 윈도우 크기 조절 시 나타남."
                            },
                            name = "sizenesw"
                        },
                        {
                            description = "Double arrow pointing left and right.",
                            descriptiont = {
                                de = "Ein Doppelpfeil der nach rechts und links zeigt.",
                                jp = "左右を指す2対の矢印。",
                                ko = "↔. 주로 윈도우 크기 조절 시 나타남."
                            },
                            name = "sizewe"
                        },
                        {
                            description = "Double arrow pointing up and down.",
                            descriptiont = {
                                de = "Ein Doppelpfeil der nach oben und unten zeigt.",
                                jp = "上下を指す2対の矢印。",
                                ko = "↕. 주로 윈도우 크기 조절 시 나타남."
                            },
                            name = "sizens"
                        },
                        {
                            description = "Four-pointed arrow pointing up, down, left, and right.",
                            descriptiont = {
                                de = "Ein Pfeilzeiger, der nach oben, unten, links und rechts zeigt.",
                                jp = "左右上下を指す4点矢印。",
                                ko = "↔＋↕."
                            },
                            name = "sizeall"
                        },
                        {
                            description = "Slashed circle or crossbones.",
                            descriptiont = {
                                de = "Ein durchgestrichener Kreis oder Totenkopfsymbol.",
                                jp = "斜線入りの円またはバツ印。",
                                ko = "사용할 수 없음. 금지를 나타낼 때 사용. 동그란 원에 사선이 그어져 있는 모양."
                            },
                            name = "no"
                        },
                        {
                            description = "Hand symbol.",
                            descriptiont = {
                                de = "Ein Handsymbol.",
                                jp = "手のシンボル。",
                                ko = "손가락. 주로 하이퍼 링크에 커서를 댈 때 나타남."
                            },
                            name = "hand"
                        }
                    },
                    description = "Types of hardware cursors.",
                    descriptiont = {
                        de = "Verschiedene Hardwarezeiger.",
                        jp = "ハードウェアカーソルの種類。",
                        ko = "커서 모양의 종류를 표현합니다."
                    },
                    minidescriptiont = {
                        de = "Verschiedene Hardwarezeiger.",
                        jp = "ハードウェアカーソルの種類。",
                        ko = "커서 모양의 종류를 표현합니다."
                    },
                    name = "CursorType"
                }
            },
            functions = {
                {
                    description = "Gets the current Cursor.",
                    descriptiont = {
                        de = "Gibt den aktuellen Mauszeiger zurück.",
                        jp = "現在のカーソルを取得します。",
                        ko = "현재 커서를 받아옵니다."
                    },
                    minidescriptiont = {
                        de = "Gibt den aktuellen Mauszeiger zurück.",
                        jp = "現在のカーソルを取得します。",
                        ko = "현재 커서를 받아옵니다.."
                    },
                    name = "getCursor",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current cursor, or nil if no cursor is set.",
                                    descriptiont = {
                                        de = "Der aktuelle Zeiger oder nil wenn kein Zeiger bestimmt wurde.",
                                        jp = "現在のカーソル、または nil ならばカーソルは設定されていません。",
                                        ko = "현재 설정되어 있는 커서."
                                    },
                                    name = "cursor",
                                    type = "Cursor"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the current position of the mouse.",
                    descriptiont = {
                        de = "Gibt die aktuelle Position der Maus zurück.",
                        jp = "マウスの現在座標を返します。",
                        ko = "마우스의 현재 위치를 리턴합니다.",
                        pt = "Retorna a atual posição do mouse.",
                        ru = "Получает текущую позицию мыши."
                    },
                    minidescriptiont = {
                        de = "Gibt die aktuelle Position der Mouse zurück.",
                        jp = "マウスの現在座標を返します。",
                        ko = "마우스의 현재 위치를 리턴합니다.",
                        pt = "Retorna a atual posição do mouse.",
                        ru = "Получает текущую позицию мыши."
                    },
                    name = "getPosition",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The position of the mouse along the x-axis.",
                                    descriptiont = {
                                        de = "Die Position der Maus auf der x-Achse.",
                                        jp = "マウスの x-軸座標。",
                                        ko = "마우스의 x좌표.",
                                        pt = "A posição do mouse ao longo do eixo x.",
                                        ru = "Позиция мыши по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position of the mouse along the y-axis.",
                                    descriptiont = {
                                        de = "Die Position der Maus auf der y-Achse.",
                                        jp = "マウスの y-軸座標。",
                                        ko = "마우스의 y좌표.",
                                        pt = "a poisção do mouse ao longo do eixo y.",
                                        ru = "Позиция мыши по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether relative mode is enabled for the mouse.\n\nIf relative mode is enabled, the cursor is hidden and doesn't move when the mouse does, but relative mouse motion events are still generated via love.mousemoved. This lets the mouse move in any direction indefinitely without the cursor getting stuck at the edges of the screen.\n\nThe reported position of the mouse is not updated while relative mode is enabled, even when relative mouse motion events are generated.",
                    descriptiont = {
                        jp = "マウスに対する相対方式が有効かどうかを取得します。\n\n相対方式が有効な場合は、カーソルは非表示となりマウスによる移動は行われませんが、相対的なマウスの移動は love.mousemoved イベントを経由して常に生成されます。これはマウスで画面端で身動きが取れなくなるカーソルの移動制限を無くすことであらゆる方向に動かせます。\n\n相対的なマウスの移動イベントが生成される場合であっても、相対方式を有効にしている場合は更新されたマウスの位置は報告されません。"
                    },
                    minidescriptiont = {
                        jp = "マウスに対する相対方式が有効かどうかを取得します。"
                    },
                    name = "getRelativeMode",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if relative mode is enabled, false if it's disabled.",
                                    descriptiont = {
                                        jp = "true ならば相対方式は有効であり、 false ならば無効です。"
                                    },
                                    name = "enabled",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets a Cursor object representing a system-native hardware cursor.\n\n Hardware cursors are framerate-independent and work the same way as normal operating system cursors. Unlike drawing an image at the mouse's current coordinates, hardware cursors never have visible lag between when the mouse is moved and when the cursor position updates, even at low framerates.",
                    descriptiont = {
                        jp = "システムで提供されているハードウェアカーソルを Cursor オブジェクトとして取得します。\n\nハードウェアカーソルはフレームレート非依存であり、オペレーティングシステムの通常のシステムカーソルと同様の動作をします。マウスの現在座標に画像を描画するのとは異なり、低フレームレートであろうと、マウスの移動による遅延の間にハードウェアカーソルが表示されなくても現在座標は更新されます。",
                        ko = "시스템에 내장된 커서 모양을 받아옵니다.\n\n커서의 모양을 바꾸고 싶을 때, 종종 현재 커서의 좌표에 이미지를 출력해서 표현합니다. 하지만 프레임 레이트가 낮을 경우 커서의 위치를 이미지가 따라가지 못하는 경우가 발생합니다. LÖVE의 Cursor는 프레임 레이트에 완전히 독립적으로 동작하므로 이러한 문제가 발생하지 않습니다."
                    },
                    minidescriptiont = {
                        jp = "システムで提供されているハードウェアカーソルを Cursor オブジェクトとして取得します。",
                        ko = "시스템에 내장된 커서 모양을 받아옵니다."
                    },
                    name = "getSystemCursor",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The type of system cursor to get.",
                                    descriptiont = {
                                        jp = "取得を行うシステムカーソルの種類。",
                                        ko = "커서 모양의 종류."
                                    },
                                    name = "ctype",
                                    type = "CursorType"
                                }
                            },
                            descriptiont = {
                                ko = "\"image\" 라는 내장 커서 모양은 존재하지 않습니다. 직접 이미지를 만들어 쓰고 싶다면 love.mouse.newCursor를 참조하세요.\n\n== 예제 ==\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n    i_beam_cursor = love.mouse.getSystemCursor(\"ibeam\")\n\n    love.mouse.setCursor(i_beam_cursor)\n\nend\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The Cursor object representing the system cursor type.",
                                    descriptiont = {
                                        jp = "Cursor オブジェクトへ取得したシステムカーソルを返します。",
                                        ko = "시스템 내장 커서."
                                    },
                                    name = "cursor",
                                    type = "Cursor"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the current x position of the mouse.",
                    descriptiont = {
                        de = "Gibt die Position der Maus auf der x-Achse zurück.",
                        jp = "マウスの現在の X 位置を返します。",
                        ko = "마우스의 x좌표를 얻어옵니다.",
                        pt = "Retorna a posição atual do mouse no eixo x.",
                        ru = "Получает текущую X координату мыши."
                    },
                    minidescriptiont = {
                        de = "Gibt die Position der Maus auf der x-Achse zurück.",
                        jp = "マウスの現在の X 位置を返します。",
                        ko = "마우스의 x좌표를 얻어옵니다.",
                        pt = "Retorna a posição atual do mouse no eixo x.",
                        ru = "Получает текущую X координату мыши."
                    },
                    name = "getX",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The position of the mouse along the x-axis.",
                                    descriptiont = {
                                        de = "Die Position der Maus auf der x-Achse.",
                                        jp = "マウスの x-軸 の新しい位置が返されます。",
                                        ko = "마우스의 x좌표.",
                                        pt = "A posição do mouse ao longo do eixo x.",
                                        ru = "Позиция мыши по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the current y position of the mouse.",
                    descriptiont = {
                        de = "Gibt die Position der Maus auf der y-Achse zurück.",
                        jp = "マウスの現在の Y 位置を返します。",
                        ko = "마우스의 y좌표를 얻어옵니다.",
                        pt = "Retorna a posição atual do mouse no eixo y.",
                        ru = "Получает текущую Y координату мыши."
                    },
                    minidescriptiont = {
                        de = "Gibt die Position der Maus auf der y-Achse zurück.",
                        jp = "マウスの現在の Y 位置を返します。",
                        ko = "마우스의 y좌표를 얻어옵니다.",
                        pt = "Retorna a posição atual do mouse no eixo y.",
                        ru = "Получает текущую Y координату мыши."
                    },
                    name = "getY",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The position of the mouse along the y-axis.",
                                    descriptiont = {
                                        de = "Die Position der Maus auf der y-Achse.",
                                        jp = "マウスの Y-軸 の新しい位置が返されます。",
                                        ko = "마우스의 y좌표.",
                                        pt = "A posição do mouse ao longo do eixo y.",
                                        ru = "Позиция мыши по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether cursor functionality is supported.\n\nIf it isn't supported, calling love.mouse.newCursor and love.mouse.getSystemCursor will cause an error. Mobile devices do not support cursors.",
                    descriptiont = {
                        jp = "カーソルの機能性に対応しているかどうかを取得します。\n\n非対応の場合は、 love.mouse.newCursor および love.mouse.getSystemCursorを呼び出すとエラーが発生します。カーソルは携帯機器では非対応です。"
                    },
                    minidescriptiont = {
                        jp = "カーソルの機能性に対応しているかどうかを取得します。"
                    },
                    name = "hasCursor",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Whether the system has cursor functionality.",
                                    descriptiont = {
                                        jp = "システムはカーソルの機能性に対応しているかどうか。"
                                    },
                                    name = "hascursor",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks whether a certain mouse button is down. This function does not detect mousewheel scrolling; you must use the love.wheelmoved (or love.mousepressed in version 0.9.2 and older) callback for that.",
                    descriptiont = {
                        de = "Gibt zurück ob eine bestimmte Maustaste gedrückt ist. Diese Funktion erkennt kein Mausrad-Scrolling (hierfür sollte stattdessen love.mousepressed genutzt werden.",
                        jp = "特定のマウスボタンが押されたかどうか検出します。\n\nこの関数はマウスホイールのスクロールを検出しません。マウスホイールを検出したいときは love.wheelmoved (または version love.mousepressed) コールバックを必ず使用してください。",
                        ko = "마우스 버튼이 눌렸는지 조사합니다. 이 함수로는 마우스 휠을 통한 스크롤을 감지할 수 없습니다. 스크롤을 감지하고 싶은 경우 콜백 함수인 love.mousepressed를 사용하세요. ",
                        pt = "Verifica se certo botão está pressionado.",
                        ru = "Проверяет, нажата ли определенная кнопка мыши."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück ob eine bestimmte Maustaste gedrückt ist.",
                        jp = "特定のマウスボタンが押されたかどうか検出します。",
                        ko = "마우스 버튼이 눌렸는지 조사합니다.",
                        pt = "Verifica se certo botão está pressionado.",
                        ru = "Проверяет, нажата ли определенная кнопка мыши."
                    },
                    name = "isDown",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The index of a button to check. 1 is the primary mouse button, 2 is the secondary mouse button, etc.",
                                    descriptiont = {
                                        jp = "検出したいボタンの索引。 1 は第一マウスボタンであり、 2 は第二マウスボタンおよび 3 は中央のボタンです。追加的なボタンはマウスの機種に依存します。"
                                    },
                                    name = "button",
                                    type = "number"
                                },
                                {
                                    description = "Additional button numbers to check.",
                                    descriptiont = {
                                        jp = "検出したい追加ボタンの番号。"
                                    },
                                    name = "...",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the specified button is down.",
                                    descriptiont = {
                                        jp = "True ならば指定されたボタンは押されています。"
                                    },
                                    name = "down",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks if the mouse is grabbed.",
                    descriptiont = {
                        de = "Gibt zurück ob der Mauszeiger an das Fenster gebunden ist.",
                        jp = "マウスが捕獲されているか確認します。",
                        ko = "마우스가 윈도우 내에 갇혀 있는지 조사합니다.",
                        pt = "Verifica se o mouse está preso a janela.",
                        ru = "Проверяет, захвачена ли мышь в окне."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück ob der Mauszeiger an das Fenster gebunden ist.",
                        jp = "マウスが捕獲されているか確認します。",
                        ko = "마우스가 윈도우 내에 갇혀 있는지 조사합니다.",
                        pt = "Verifica se o mouse está preso a janela.",
                        ru = "Проверяет, захвачена ли мышь в окне."
                    },
                    name = "isGrabbed",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the cursor is grabbed, false if it is not.",
                                    descriptiont = {
                                        de = "Wahr wenn der Zeiger an das Fenster gebunden ist.",
                                        jp = "True ならばカーソルは捕獲されており、それ以外は false です。",
                                        ko = "현재 마우스가 갇혀 있으면 true.",
                                        pt = "True se o cursor está presso, senão false.",
                                        ru = "True, если курсор захвачен, иначе false."
                                    },
                                    name = "grabbed",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks if the cursor is visible.",
                    descriptiont = {
                        jp = "カーソルが表示されているか確認します。",
                        ko = "마우스 커서가 보이는지 확인합니다.",
                        pt = "Verifica se o cursor está visível.",
                        ru = "Проверяет видимость курсора."
                    },
                    minidescriptiont = {
                        jp = "カーソルが表示されているか確認します。",
                        ko = "마우스 커서가 보이는지 확인합니다.",
                        pt = "Verifica se o cursor está visível.",
                        ru = "Проверяет видимость курсора."
                    },
                    name = "isVisible",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the cursor to visible, false if the cursor is hidden.",
                                    descriptiont = {
                                        jp = "True ならばカーソルは表示されており、 false ならば、カーソルは非表示です。",
                                        ko = "보이면 true.",
                                        pt = "True se o cursor está visível, senão false.",
                                        ru = "True, если курсор видимый, иначе false."
                                    },
                                    name = "visible",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new hardware Cursor object from an image file or ImageData.\n\nHardware cursors are framerate-independent and work the same way as normal operating system cursors. Unlike drawing an image at the mouse's current coordinates, hardware cursors never have visible lag between when the mouse is moved and when the cursor position updates, even at low framerates.\n\nThe hot spot is the point the operating system uses to determine what was clicked and at what position the mouse cursor is. For example, the normal arrow pointer normally has its hot spot at the top left of the image, but a crosshair cursor might have it in the middle.",
                    descriptiont = {
                        jp = "ハードウェア Cursor オブジェクトを画像ファイルまたは ImageData から新規作成します。\n\nハードウェアカーソルはフレームレート非依存であり、オペレーティングシステムの通常のシステムカーソルと同様の動作をします。マウスの現在座標に画像を描画するのとは異なり、低フレームレートであろうと、マウスの移動による遅延の間にハードウェアカーソルが表示されなくても現在座標は更新されます。\n\nホットスポットはどこをクリックしているのかマウスカーソルが何処の座標にあるのかをオペレーティングシステムが判断するための使用する地点の事です。例えば、通常は一般の矢印ポインタにおいて画像の左上にホットスポットがありますが、領域選択カーソルにおいては中央にあります。",
                        ko = "ImageData나 파일로부터 Cursor 객체를 생성합니다.\n\n커서의 모양을 바꾸고 싶을 때, 종종 현재 커서의 좌표에 이미지를 출력해서 표현합니다. 하지만 프레임 레이트가 낮을 경우 커서의 위치를 이미지가 따라가지 못하는 경우가 발생합니다. LÖVE의 Cursor는 프레임 레이트에 완전히 독립적으로 동작하므로 이러한 문제가 발생하지 않습니다.\n\n핫스팟이라는 것은 실제 커서의 좌표를 말합니다. 일반적인 화살표 모양의 커서의 경우 좌측 상단의 끝 부분이 되겠고, 손가락 모양의 경우에는 검지손가락의 끝을 의미합니다."
                    },
                    minidescriptiont = {
                        jp = "ハードウェア Cursor オブジェクトを画像から作成します。",
                        ko = "ImageData나 파일로부터 Cursor 객체를 생성합니다."
                    },
                    name = "newCursor",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The ImageData to use for the the new Cursor.",
                                    descriptiont = {
                                        jp = "ImageData を新規カーソルとして使用します。",
                                        ko = "커서로 사용할 ImageData."
                                    },
                                    name = "imageData",
                                    type = "ImageData"
                                },
                                {
                                    default = "0",
                                    description = "The x-coordinate in the ImageData of the cursor's hot spot.",
                                    descriptiont = {
                                        jp = "カーソルのホットスポットとして ImageData の X-座標を指定します。",
                                        ko = "ImageData 안에서 핫스팟의 x좌표."
                                    },
                                    name = "hotx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The y-coordinate in the ImageData of the cursor's hot spot.",
                                    descriptiont = {
                                        jp = "カーソルのホットスポットとして ImageData の Y-座標を指定します。",
                                        ko = "ImageData 안에서 핫스팟의 y좌표."
                                    },
                                    name = "hoty",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new Cursor object.",
                                    descriptiont = {
                                        jp = "新規 Cursor オブジェクト。",
                                        ko = "새 Cursor 객체."
                                    },
                                    name = "cursor",
                                    type = "Cursor"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Path to the image to use for the new Cursor.",
                                    descriptiont = {
                                        jp = "パスで指定された画像を新規カーソルとして使用します。",
                                        ko = "커서로 사용할 이미지 파일의 이름."
                                    },
                                    name = "filepath",
                                    type = "string"
                                },
                                {
                                    default = "0",
                                    description = "The x-coordinate in the ImageData of the cursor's hot spot.",
                                    descriptiont = {
                                        jp = "カーソルのホットスポットとして画像の X-座標を指定します。",
                                        ko = "이미지 안에서 핫스팟의 x좌표."
                                    },
                                    name = "hotx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The y-coordinate in the ImageData of the cursor's hot spot.",
                                    descriptiont = {
                                        jp = "カーソルのホットスポットとして画像の Y-座標を指定します。",
                                        ko = "이미지 안에서 핫스팟의 y좌표."
                                    },
                                    name = "hoty",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new Cursor object.",
                                    descriptiont = {
                                        jp = "新規 Cursor オブジェクト。",
                                        ko = "새 Cursor 객체."
                                    },
                                    name = "cursor",
                                    type = "Cursor"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Data representing the image to use for the new Cursor.",
                                    descriptiont = {
                                        jp = "Data 表現を新規カーソルとして使用します。",
                                        ko = "커서로 사용할, 이미지를 표현하고 있는 FileData."
                                    },
                                    name = "fileData",
                                    type = "FileData"
                                },
                                {
                                    default = "0",
                                    description = "The x-coordinate in the ImageData of the cursor's hot spot.",
                                    descriptiont = {
                                        jp = "カーソルのホットスポットとして画像の X-座標を指定します。",
                                        ko = "이미지 안에서 핫스팟의 x좌표."
                                    },
                                    name = "hotx",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The y-coordinate in the ImageData of the cursor's hot spot.",
                                    descriptiont = {
                                        jp = "カーソルのホットスポットとして画像の Y-座標を指定します。",
                                        ko = "이미지 안에서 핫스팟의 y좌표."
                                    },
                                    name = "hoty",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new Cursor object.",
                                    descriptiont = {
                                        jp = "新規 Cursor オブジェクト。",
                                        ko = "새 Cursor 객체."
                                    },
                                    name = "cursor",
                                    type = "Cursor"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the current mouse cursor.\n\nResets the current mouse cursor to the default when called without arguments.",
                    descriptiont = {
                        jp = "現在のマウスカーソルを設定します。",
                        ko = "마우스 커서를 설정합니다."
                    },
                    minidescriptiont = {
                        jp = "現在のマウスカーソルを設定します。",
                        ko = "마우스 커서를 설정합니다."
                    },
                    name = "setCursor",
                    variants = {
                        {
                            descriptiont = {
                                ko = "디폴트 커서로 초기화합니다.\n\n== 예제 ==\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n\9cursor = love.mouse.getSystemCursor(\"hand\")\n\n--\9또는\n\n--\9cursor = love.mouse.newCursor(\"pig.png\", 0, 0)\n\nend\n\nfunction love.mousepressed(x, y, button)\n\n\9if button == \"l\" then\n\n\9\9-- 마우스 오른쪽 버튼을 누르면 사용자 정의 커서를 사용\n\n\9\9love.mouse.setCursor(cursor)\n\n\9end\n\nend\n\nfunction love.mousereleased(x, y, button)\n\n\9if button == \"l\" then\n\n\9\9-- 마우스 오른쪽 버튼을 떼면 디폴트 커서로 돌아감\n\n\9\9love.mouse.setCursor()\n\n\9end\n\nend\n\n&lt;/source&gt;"
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The Cursor object to use as the current mouse cursor.",
                                    descriptiont = {
                                        jp = "現在のマウスカーソルとして使用する Cursor オブジェクト を指定します。",
                                        ko = "사용할 마우스 커서 객체."
                                    },
                                    name = "cursor",
                                    type = "Cursor"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Grabs the mouse and confines it to the window.",
                    descriptiont = {
                        de = "Bindet den Mauszeiger an das Fenster.",
                        jp = "マウスを捕獲してからウィンドウ内に閉じこめて移動制限をします。",
                        ko = "마우스를 윈도우 내에 가둡니다."
                    },
                    minidescriptiont = {
                        de = "Bindet den Mauszeiger an das Fenster.",
                        jp = "マウスを捕獲してからウィンドウ内に閉じこめて移動制限をします。",
                        ko = "마우스를 윈도우 내에 가둡니다."
                    },
                    name = "setGrabbed",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "True to confine the mouse, false to let it leave the window.",
                                    descriptiont = {
                                        de = "Wahr wenn der Mauszeiger an das Fenster gebunden werden soll, falsch um ihn freizulassen.",
                                        jp = "True ならばマウスの移動制限を行い、 false ならばウィンドウ内から解放します。",
                                        ko = "마우스를 가두려면 true."
                                    },
                                    name = "grab",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the current position of the mouse. Non-integer values are floored.",
                    descriptiont = {
                        de = "Setzt den Mauszeiger an eine neue Position.",
                        jp = "マウスの現在位置を設定します。非整数値は切り捨てられます。",
                        ko = "마우스의 위치를 설정합니다.",
                        pt = "Configura a posição atual do mouse.",
                        ru = "Устанавливает позицию мыши."
                    },
                    minidescriptiont = {
                        de = "Setzt den Mauszeiger an eine neue Position.",
                        jp = "マウスの現在位置を設定します。",
                        ko = "마우스의 위치를 설정합니다.",
                        pt = "Configura a posição atual do mouse.",
                        ru = "Устанавливает позицию мыши."
                    },
                    name = "setPosition",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new position of the mouse along the x-axis.",
                                    descriptiont = {
                                        de = "Die neue Position des Zeigers auf der x-Achse.",
                                        jp = "マウスの x-軸の新しい位置を指定します。",
                                        ko = "마우스의 x좌표.",
                                        pt = "A nova posição do mouse ao longo do eixo x.",
                                        ru = "Новая координата мыши по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The new position of the mouse along the y-axis.",
                                    descriptiont = {
                                        de = "Die neue Position des Zeigers auf der y-Achse.",
                                        jp = "マウスの y-軸の新しい位置を指定します。",
                                        ko = "마우스의 y좌표.",
                                        pt = "A nova posição do mouse ao longo do eixo y.",
                                        ru = "Новая координата мыши по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets whether relative mode is enabled for the mouse.\n\nWhen relative mode is enabled, the cursor is hidden and doesn't move when the mouse does, but relative mouse motion events are still generated via love.mousemoved. This lets the mouse move in any direction indefinitely without the cursor getting stuck at the edges of the screen.\n\nThe reported position of the mouse is not updated while relative mode is enabled, even when relative mouse motion events are generated.",
                    descriptiont = {
                        jp = "マウスに対する相対方式を有効にするかどうかを設定します。\n\n相対方式を有効にした時は、カーソルは非表示となりマウスによる移動は行われませんが、相対的なマウスの移動は love.mousemoved イベントを経由して常に生成されます。画面の端で身動きが取れないカーソルの範囲を超えた任意の方向へマウスの移動制限を無くします。\n\n相対的なマウスの移動イベント生成される場合であっても、相対方式を有効にしている場合は更新されたマウスの位置は報告されません。"
                    },
                    minidescriptiont = {
                        jp = "マウスに対する相対方式を有効にするかどうかを設定します。"
                    },
                    name = "setRelativeMode",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "True to enable relative mode, false to disable it.",
                                    descriptiont = {
                                        jp = "True ならば相対方式を有効にして、 false ならば無効にします。"
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the visibility of the cursor.",
                    descriptiont = {
                        jp = "現在のカーソルにおける可視性を設定します。",
                        ko = "마우스 커서의 가시성을 설정합니다.",
                        pt = "Configura se o cursor é visível ou não.",
                        ru = "Устанавливает видимость курсора."
                    },
                    minidescriptiont = {
                        jp = "現在のカーソルにおける可視性を設定します。",
                        ko = "마우스 커서의 가시성을 설정합니다.",
                        pt = "Configura se o cursor é visível ou não.",
                        ru = "Устанавливает видимость курсора."
                    },
                    name = "setVisible",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "True to set the cursor to visible, false to hide the cursor.",
                                    descriptiont = {
                                        jp = "True ならばカーソルを表示、 false ならば、カーソルを非表示にします。",
                                        ko = "보이면 true.",
                                        pt = "True para configurar o cursor como visível, false para esconder o cursor.",
                                        ru = "True, чтобы сделать курсор вижимым, false - чтобы скрыть курсор."
                                    },
                                    name = "visible",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the current X position of the mouse. Non-integer values are floored.",
                    descriptiont = {
                        de = "Bestimmt die aktuelle Position der Maus auf der x-Achse.",
                        jp = "マウスの現在の X 位置を設定します。\n\n非整数値は切り捨てられます。",
                        ko = "마우스의 x좌표를 설정합니다."
                    },
                    minidescriptiont = {
                        de = "Bestimmt die aktuelle Position der Maus auf der x-Achse.",
                        jp = "マウスの現在の X 位置を設定します。",
                        ko = "마우스의 x좌표를 설정합니다."
                    },
                    name = "setX",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new position of the mouse along the x-axis.",
                                    descriptiont = {
                                        de = "Die neue Position auf der x-Achse.",
                                        jp = "マウスの x-軸の新しい位置を指定します。",
                                        ko = "마우스의 x좌표."
                                    },
                                    name = "x",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the current Y position of the mouse. Non-integer values are floored.",
                    descriptiont = {
                        de = "Bestimmt die aktuelle Position der Maus auf der y-Achse.",
                        jp = "マウスの現在の Y 位置を設定します。\n\n非整数値は切り捨てられます。",
                        ko = "마우스의 y좌표를 설정합니다."
                    },
                    minidescriptiont = {
                        de = "Bestimmt die aktuelle Position der Maus auf der y-Achse.",
                        jp = "マウスの現在の Y 位置を設定します。",
                        ko = "마우스의 y좌표를 설정합니다."
                    },
                    name = "setY",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new position of the mouse along the y-axis.",
                                    descriptiont = {
                                        de = "Die neue Position auf der y-Achse.",
                                        jp = "マウスの y-軸の新しい位置を指定します。",
                                        ko = "마우스의 y좌표."
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            }
                        }
                    }
                }
            },
            name = "mouse",
            types = {
                {
                    constructors = {
                        "getSystemCursor",
                        "newCursor"
                    },
                    description = "Represents a hardware cursor.",
                    descriptiont = {
                        de = "Repräsentiert einen hardware Cursor.",
                        jp = "ハードウェアカーソルを意味します。",
                        ko = "커서 모양을 표현합니다.\n\n커서의 모양을 바꾸고 싶을 때, 종종 현재 커서의 좌표에 이미지를 출력해서 표현합니다. 하지만 프레임 레이트가 낮을 경우 커서의 위치를 이미지가 따라가지 못하는 경우가 발생합니다. LÖVE의 Cursor는 프레임 레이트에 완전히 독립적으로 동작하므로 이러한 문제가 발생하지 않습니다."
                    },
                    functions = {
                        {
                            description = "Gets the type of the Cursor.",
                            descriptiont = {
                                jp = "カーソルの種類を取得します。",
                                ko = "커서의 종류를 받아옵니다."
                            },
                            minidescriptiont = {
                                jp = "カーソルの種類を取得します。",
                                ko = "커서의 종류를 받아옵니다."
                            },
                            name = "getType",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The type of the Cursor.",
                                            descriptiont = {
                                                jp = "カーソルの種類。",
                                                ko = "커서의 종류."
                                            },
                                            name = "cursortype",
                                            type = "CursorType"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Cursor",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "Can simulate 2D rigid body physics in a realistic manner. This module is based on Box2D, and this API corresponds to the Box2D API as closely as possible.",
            enums = {
                {
                    constants = {
                        {
                            description = "Static bodies do not move.",
                            descriptiont = {
                                de = "Statische Körper bewegen sich nicht.",
                                jp = "静止物体であり不動です。"
                            },
                            name = "static"
                        },
                        {
                            description = "Dynamic bodies collide with all bodies.",
                            descriptiont = {
                                de = "Dynamische Körper kollidieren mit allen anderen Körpern.",
                                jp = "動的物体であり全ての物体と衝突します。"
                            },
                            name = "dynamic"
                        },
                        {
                            description = "Kinematic bodies only collide with dynamic bodies.",
                            descriptiont = {
                                de = "Kinematische Körper kollidieren nur mit dynamischen Körpern und reagieren nicht auf Kräfte.",
                                jp = "運動物体は動的な物体に対してのみ衝突します。"
                            },
                            name = "kinematic"
                        }
                    },
                    description = "The types of a Body.",
                    descriptiont = {
                        de = "Die verschiedenen Arten von Körpern. ",
                        jp = "Body の種類。"
                    },
                    minidescriptiont = {
                        de = "Die verschiedenen Arten von Körpern.",
                        jp = "Body の種類。"
                    },
                    name = "BodyType"
                },
                {
                    constants = {
                        {
                            description = "A DistanceJoint.",
                            descriptiont = {
                                jp = "DistanceJoint です。",
                                pt = "Uma  junta de distância.",
                                ru = "DistanceJoint."
                            },
                            name = "distance"
                        },
                        {
                            description = "A GearJoint.",
                            descriptiont = {
                                jp = "GearJoint です。",
                                pt = "Uma  junta de engrenagem.",
                                ru = "GearJoint."
                            },
                            name = "gear"
                        },
                        {
                            description = "A MouseJoint.",
                            descriptiont = {
                                jp = "MouseJoint です。",
                                pt = "Uma  junta de mouse.",
                                ru = "MouseJoint."
                            },
                            name = "mouse"
                        },
                        {
                            description = "A PrismaticJoint.",
                            descriptiont = {
                                jp = "PrismaticJoint です。",
                                pt = "Uma  junta prismatica.",
                                ru = "PrismaticJoint."
                            },
                            name = "prismatic"
                        },
                        {
                            description = "A PulleyJoint.",
                            descriptiont = {
                                jp = "PulleyJoint です。",
                                pt = "Uma  junta de polia.",
                                ru = "PulleyJoint."
                            },
                            name = "pulley"
                        },
                        {
                            description = "A RevoluteJoint.",
                            descriptiont = {
                                jp = "RevoluteJoint です。",
                                pt = "Uma  junta de ponto fixo.",
                                ru = "RevoluteJoint."
                            },
                            name = "revolute"
                        },
                        {
                            description = "A FrictionJoint.",
                            descriptiont = {
                                jp = "FrictionJoin です。"
                            },
                            name = "friction"
                        },
                        {
                            description = "A WeldJoint.",
                            descriptiont = {
                                jp = "WeldJoint です。"
                            },
                            name = "weld"
                        },
                        {
                            description = "A RopeJoint.",
                            descriptiont = {
                                jp = "RopeJoint です。"
                            },
                            name = "rope"
                        }
                    },
                    description = "Different types of joints.",
                    descriptiont = {
                        jp = "様々な関節の種類。",
                        pt = "Diferentes tipos de juntas.",
                        ru = "Различные типы соединений."
                    },
                    minidescriptiont = {
                        jp = "様々な関節の種類。",
                        pt = "Diferentes tipos de juntas.",
                        ru = "Различные типы соединений."
                    },
                    name = "JointType"
                },
                {
                    constants = {
                        {
                            description = "The Shape is a CircleShape.",
                            descriptiont = {
                                jp = "形状は CircleShape です。",
                                pt = "A forma é um CircleShape.",
                                ru = "Окружность."
                            },
                            name = "circle"
                        },
                        {
                            description = "The Shape is a PolygonShape.",
                            descriptiont = {
                                jp = "形状は PolygonShape です。",
                                pt = "A forma é um PolygonShape.",
                                ru = "Многоугольник."
                            },
                            name = "polygon"
                        },
                        {
                            description = "The Shape is a EdgeShape.",
                            descriptiont = {
                                jp = "形状は EdgeShape です。",
                                ru = "Грань."
                            },
                            name = "edge"
                        },
                        {
                            description = "The Shape is a ChainShape.",
                            descriptiont = {
                                jp = "形状は ChainShape です。",
                                ru = "Ломаная."
                            },
                            name = "chain"
                        }
                    },
                    description = "The different types of Shapes, as returned by Shape:getType.",
                    descriptiont = {
                        jp = "Shape:getType により返される様々な形状の種類です。",
                        pt = "Os diferentes tipos de formas, como retornado por Shape:getType.",
                        ru = "Различные типы Фигур, возвращаемые функцией Shape:getType."
                    },
                    minidescriptiont = {
                        jp = "Shape:getType により返される様々な形状の種類です。",
                        pt = "Os diferentes tipos de formas, como retornado por Shape:getType.",
                        ru = "Различные типы Фигур, возвращаемые функцией Shape:getType."
                    },
                    name = "ShapeType"
                }
            },
            functions = {
                {
                    description = "Returns the two closest points between two fixtures and their distance.",
                    descriptiont = {
                        jp = "二つの取付具およびそれらの距離間で最も近接している二つの地点を返します。",
                        ru = "Возвращает две ближайшие точки между двумя креплениями и расстояние между ними."
                    },
                    minidescriptiont = {
                        jp = "二つの取付具およびそれらの距離間で最も近接している二つの地点を返します。"
                    },
                    name = "getDistance",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first fixture.",
                                    descriptiont = {
                                        jp = "第一取付具。"
                                    },
                                    name = "fixture1",
                                    type = "Fixture"
                                },
                                {
                                    description = "The second fixture.",
                                    descriptiont = {
                                        jp = "第二取付具。"
                                    },
                                    name = "fixture2",
                                    type = "Fixture"
                                }
                            },
                            returns = {
                                {
                                    description = "The distance of the two points.",
                                    descriptiont = {
                                        jp = "二地点間での距離。"
                                    },
                                    name = "distance",
                                    type = "number"
                                },
                                {
                                    description = "The x-coordinate of the first point.",
                                    descriptiont = {
                                        jp = "第一地点の x 座標。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y-coordinate of the first point.",
                                    descriptiont = {
                                        jp = "第一地点の y 座標。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x-coordinate of the second point.",
                                    descriptiont = {
                                        jp = "第二地点の x 座標。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y-coordinate of the second point.",
                                    descriptiont = {
                                        jp = "第二地点の y 座標。"
                                    },
                                    name = "y2",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Get the scale of the world.\n\nThe world scale is the number of pixels per meter. Try to keep your shape sizes less than 10 times this scale.\n\nThis is important because the physics in Box2D is tuned to work well for objects of size 0.1m up to 10m. All physics coordinates are divided by this number for the physics calculations.",
                    descriptiont = {
                        jp = "メートル尺度係数を返します。\n\n物理演算モジュールの全座標は本係数で除算され、グラフィックスの変換なしで画面へオブジェクトを直接描画するのに便利な方法で作成します。\n\n形状は10倍以下の大きさで作成することが推奨されます。これは Box2D が 0.1 から 10 メートルまでの形状の大きさに上手く調整するために重要です。"
                    },
                    minidescriptiont = {
                        jp = "メートル尺度係数を返します。"
                    },
                    name = "getMeter",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The size of 1 meter in pixels.",
                                    descriptiont = {
                                        jp = "整数による尺度変更係数。"
                                    },
                                    name = "scale",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new body.\n\nThere are three types of bodies. Static bodies do not move, have a infinite mass, and can be used for level boundaries. Dynamic bodies are the main actors in the simulation, they collide with everything. Kinematic bodies do not react to forces and only collide with dynamic bodies.\n\nThe mass of the body gets calculated when a Fixture is attached or removed, but can be changed at any time with Body:setMass or Body:resetMassData.",
                    descriptiont = {
                        de = "Erstellt einen neuen Körper.\n\nEs gibt drei Arten von Körpern:\n\n* Statische Körper bewegen sich nicht, haben eine unendliche Masse und können zum Beispiel für Level-Begrenzungen verwendet werden.\n\n* Dynamische Körper sind die Hauptakteure einer Simulation. Sie kollidieren mit allen anderen Körpern.\n\n* Kinematische Körper reagieren nicht auf Kräfte und kollidieren nur mit dynamischen Körpern.\n\nDie Masse eines Körpers wird berechnet, wenn eine Befestigung hinzugefügt oder entfernt wird, kann  jedoch auch jederzeit durch Body:setMass oder Body:resetMassData verändert werden.",
                        jp = "物体の新規作成を行います。\n\n物体は三種類あります。\n\n* 静止物体 (static) は不動で、質量は無限であり、段階的境界に対して使用できます。\n\n* 動的物体 (dynamic) は模擬において主役であり、全ての物体と衝突します。\n\n* 運動物体 (kinematic) は力に対して反応せず動的な物体に対してのみ衝突します。\n\n物体の質量は取付具が取り付けられるか取り外されたときに計算が行われますが、物体は Body:setMass または Body:resetMassData により何時でも変更することができます。",
                        pt = "Cria um novo corpo.\n\nUm corpo com zero de massa é '''estático''' e não irá se movimentar.\n\nA massa pode ser alterada em qualquer instante com Body:setMass ou Body:setMassFromShapes.",
                        ru = "Создает новое тело.\n\nТело с нулевой массой является '''статичным''' и не будет передвигаться.\n\nМасса может быть изменена в любое время с помощью Body:setMass или Body:setMassFromShapes."
                    },
                    minidescriptiont = {
                        de = "Erstellt einen neuen Körper.",
                        jp = "物体の新規作成を行います。",
                        pt = "Cria um novo corpo.",
                        ru = "Создает новое тело."
                    },
                    name = "newBody",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The world to create the body in.",
                                    descriptiont = {
                                        de = "Die Welt in der der Körper erstellt werden soll.",
                                        jp = "物体に対して作成先の世界。"
                                    },
                                    name = "world",
                                    type = "World"
                                },
                                {
                                    default = "0",
                                    description = "The x position of the body.",
                                    descriptiont = {
                                        de = "Die x-Position des Körpers.",
                                        jp = "物体の x 座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The y position of the body.",
                                    descriptiont = {
                                        de = "Die y-Position des Körpers.",
                                        jp = "物体の y 座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "\"static\"",
                                    description = "The type of the body.",
                                    descriptiont = {
                                        de = "Der Typ des Körpers.",
                                        jp = "物体の種類。"
                                    },
                                    name = "type",
                                    type = "BodyType"
                                }
                            },
                            returns = {
                                {
                                    description = "A new body.",
                                    descriptiont = {
                                        de = "Ein neuer Körper.",
                                        jp = "新規の物体。"
                                    },
                                    name = "body",
                                    type = "Body"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new ChainShape.",
                    descriptiont = {
                        jp = "ChainShape の新規作成。"
                    },
                    minidescriptiont = {
                        jp = "ChainShape の新規作成。"
                    },
                    name = "newChainShape",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "If the chain should loop back to the first point.",
                                    descriptiont = {
                                        jp = "鎖が第一地点の自閉線へ回帰するかどうか。"
                                    },
                                    name = "loop",
                                    type = "boolean"
                                },
                                {
                                    description = "The x position of the first point.",
                                    descriptiont = {
                                        jp = "第一地点の x 座標。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first point.",
                                    descriptiont = {
                                        jp = "第一地点の y 座標。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second point.",
                                    descriptiont = {
                                        jp = "第二地点の x 座標。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second point.",
                                    descriptiont = {
                                        jp = "第二地点の y 座標。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "Additional point positions.",
                                    descriptiont = {
                                        jp = "追加の地点座標。"
                                    },
                                    name = "...",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new shape.",
                                    descriptiont = {
                                        jp = "新規の形状。"
                                    },
                                    name = "shape",
                                    type = "ChainShape"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "If the chain should loop back to the first point.",
                                    descriptiont = {
                                        jp = "鎖が第一地点の自閉線へ回帰するかどうか。"
                                    },
                                    name = "loop",
                                    type = "boolean"
                                },
                                {
                                    description = "A list of points to construct the ChainShape, in the form of {x1, y1, x2, y2, ...}.",
                                    descriptiont = {
                                        jp = "{x1, y1, x2, y2, ...} 形式で、 ChainShape を構築するための地点一覧。"
                                    },
                                    name = "points",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "The new shape.",
                                    descriptiont = {
                                        jp = "新規の形状。"
                                    },
                                    name = "shape",
                                    type = "ChainShape"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new CircleShape.",
                    descriptiont = {
                        jp = "CircleShape の新規作成。",
                        pt = "Cria um novo CircleShape em (x,y) nas coordenadas local.",
                        ru = "Создает новую форму в виде окружности в локальных координатах x и y."
                    },
                    minidescriptiont = {
                        jp = "CircleShape の新規作成。",
                        pt = "Cria um novo CircleShape em (x,y) nas coordenadas local.",
                        ru = "Создает новую форму в виде окружности."
                    },
                    name = "newCircleShape",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The radius of the circle.",
                                    descriptiont = {
                                        jp = "円の半径。",
                                        ru = "Радиус окружности."
                                    },
                                    name = "radius",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new shape.",
                                    descriptiont = {
                                        jp = "新規形状。",
                                        ru = "Новый CircleShape."
                                    },
                                    name = "shape",
                                    type = "CircleShape"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The x offset of the circle.",
                                    descriptiont = {
                                        jp = "円の x 位置。",
                                        ru = "Смещение окружности по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y offset of the circle.",
                                    descriptiont = {
                                        jp = "円の y 位置。",
                                        ru = "Смещение окружности по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The radius of the circle.",
                                    descriptiont = {
                                        jp = "円の半径。",
                                        ru = "Радиус окружности."
                                    },
                                    name = "radius",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new shape.",
                                    descriptiont = {
                                        jp = "新規形状。",
                                        ru = "Новый CircleShape."
                                    },
                                    name = "shape",
                                    type = "CircleShape"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a distance joint between two bodies.\n\nThis joint constrains the distance between two points on two bodies to be constant. These two points are specified in world coordinates and the two bodies are assumed to be in place when this joint is created. The first anchor point is connected to the first body and the second to the second body, and the points define the length of the distance joint.",
                    descriptiont = {
                        jp = "二つの物体間に対して DistanceJoint を作成します。\n\nこの関節は二つの物体において二地点間が一定距離になるよう強制します。これらの二地点は世界座標にて指定を行い、この関節の作成時に二つの物体は配置されていると見なされます。第一錨地点は第一物体および第二物体の接続を行い、地点により距離関節の長さを定義します。\n\nFile:physicsJointDistance.PNG",
                        pt = "Cria uma junta de distância entre dois corpos.\n\nEssa junta restringe a distância entre dois pontos em dois corpos para ser constante. Esses dois pontos são especificados nas coordenadas do mundo e assume-se que os dois corpos estão no local quando a junta é criada. O primeiro ponto de ancoragem está conectado ao primeiro ponto e o segundo ao segundo ponto, e esses pontos definem o comprimento da junta de distância.",
                        ru = "Создает DistanceJoint для двух тел.\n\nЭто соединение держит две точки двух тел на одном расстоянии. Точки указываются в локальных координатах соответствующего тела, причем расстояние (в глобальных координатах), которое было между этими точками при создании соединения, берется за константное расстояние, на котором необходимо держать эти две точки."
                    },
                    minidescriptiont = {
                        jp = "二つの物体間に対して DistanceJoint を作成します。",
                        pt = "Cria uma junta de distância entre dois corpos.",
                        ru = "Создает DistanceJoint для двух тел."
                    },
                    name = "newDistanceJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ取り付ける第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ取り付ける第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the first anchor point (world space).",
                                    descriptiont = {
                                        jp = "第一錨地点の x 位置 (世界空間)。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first anchor point (world space).",
                                    descriptiont = {
                                        jp = "第一錨地点の y 位置 (世界空間)。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second anchor point (world space).",
                                    descriptiont = {
                                        jp = "第二錨地点の x 位置 (世界空間)。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second anchor point (world space).",
                                    descriptiont = {
                                        jp = "第二錨地点の y 位置 (世界空間)。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new distance joint.",
                                    descriptiont = {
                                        jp = "新規の距離関節。"
                                    },
                                    name = "joint",
                                    type = "DistanceJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a edge shape.",
                    descriptiont = {
                        jp = "EdgeShape の新規作成を行います。"
                    },
                    minidescriptiont = {
                        jp = "EdgeShape の新規作成を行います。"
                    },
                    name = "newEdgeShape",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The x position of the first point.",
                                    descriptiont = {
                                        jp = "第一地点の x 位置。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first point.",
                                    descriptiont = {
                                        jp = "第二地点の y 位置。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second point.",
                                    descriptiont = {
                                        jp = "第一地点の x 位置。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second point.",
                                    descriptiont = {
                                        jp = "第二地点の y 位置。"
                                    },
                                    name = "y2",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new shape.",
                                    descriptiont = {
                                        jp = "新規形状。"
                                    },
                                    name = "shape",
                                    type = "EdgeShape"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates and attaches a Fixture to a body.",
                    descriptiont = {
                        jp = "物体へ Fixture を作成して取り付けます。\n\n取付具の作成時に、リファレンスとして保持されるのではなく Shape オブジェクトがコピーされることに注意してください。取付具が所有する Shape オブジェクトを取得するには Fixture:getShape を使用してください。"
                    },
                    minidescriptiont = {
                        jp = "物体へ Fixture を作成して取り付けます。"
                    },
                    name = "newFixture",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The body which gets the fixture attached.",
                                    descriptiont = {
                                        jp = "取付具を取り付ける物体。"
                                    },
                                    name = "body",
                                    type = "Body"
                                },
                                {
                                    description = "The shape of the fixture.",
                                    descriptiont = {
                                        jp = "取付具の形状。"
                                    },
                                    name = "shape",
                                    type = "Shape"
                                },
                                {
                                    default = "1",
                                    description = "The density of the fixture.",
                                    descriptiont = {
                                        jp = "取付具の密度。"
                                    },
                                    name = "density",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new fixture.",
                                    descriptiont = {
                                        jp = "新規の取付具。"
                                    },
                                    name = "fixture",
                                    type = "Fixture"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a friction joint between two bodies. A FrictionJoint applies friction to a body.",
                    descriptiont = {
                        jp = "二つの物体間における関節の摩擦を作成します。 FrictionJoint は物体に摩擦を適用します。"
                    },
                    minidescriptiont = {
                        jp = "FrictionJoint は物体に摩擦を適用します。"
                    },
                    name = "newFrictionJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第一の物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第二の物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the anchor point.",
                                    descriptiont = {
                                        jp = "錨地点の x 位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the anchor point.",
                                    descriptiont = {
                                        jp = "錨地点の y 位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with eachother.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new FrictionJoint.",
                                    descriptiont = {
                                        jp = "新規 FrictionJoint です。"
                                    },
                                    name = "joint",
                                    type = "FrictionJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a gear joint connecting two joints.\n\nThe gear joint connects two joints that must be either prismatic or revolute joints. Using this joint requires that the joints it uses connect their respective bodies to the ground and have the ground as the first body. When destroying the bodies and joints you must make sure you destroy the gear joint before the other joints.\n\nThe gear joint has a ratio the determines how the angular or distance values of the connected joints relate to each other. The formula coordinate1 + ratio * coordinate2 always has a constant value that is set when the gear joint is created.",
                    descriptiont = {
                        jp = "二つの関節を接続するために GearJoint を作成します。\n\n伝動装置に対する二つの関節として必ず直動または回転関節のいずれかのみ接続してください。この関節を使用するには、関節で使用する各自の物体を基礎へ接続するのと第一物体に基礎があることが必要です。物体および関節を破棄する場合は、伝動装置の関節を破棄する前に他の関節が破棄されているか必ず確認してください。\n\n伝動装置の関節には比率があり接続された関節において互いに関連する角度または距離の値により比率が決定されます。 &lt;tt&gt;coordinate1 + ratio * coordinate2&lt;/tt&gt; の数式は伝動装置の関節が作成される場合に設定されるため常に定数値になります。\n\nFile:physicsJointGear.png",
                        pt = "Cria uma junta de engrenagem conectando duas juntas.\n\nA junta de engrenagem conecta duas juntas que devem ser junta prismatica ou ponto fixo. Usando esta junta requer que as juntas usadas nela conectem seus respectivos corpos ao solo e tenham o solo como o primeiro corpo. Quando for destruir os corpos e as juntas é necessário ter certeza que destruiu a junta de engrenagem antes das outras juntas.\n\nA junta de engrenagem tem uma relação que determina como o valores angulares e de distância das juntas conectadas relacionam-se um com o outro. A fórmula &lt;tt&gt;coordenada1 + raio * coordenada2&lt;/tt&gt; sempre tem um valor constante que é configurado quando a junta de engrenagem é criada.",
                        ru = "Создает GearJoint для двух тел.\n\nЭто соединение использует два других соединения типа  PrismaticJoint или  RevoluteJoint. Использование этого соединения требует, чтобы PrismaticJoint и RevoluteJoint соединяли тела, одно из которых является статическим. Причем статическое тело в этих соединениях должно использоваться в качестве первого. Когда вы удаляете тела или соединения, то в первую очередь нужно удалять GearJoint, а потом уже все остальное. \n\nGearJoint использует отношение, определяющее как будут относиться друг к другу угол или расстояние соединенных объектов. Формула &lt;tt&gt;coordinate1 + ratio * coordinate2&lt;/tt&gt; всегда будет равно константному значению, которое определяется при создании соединения."
                    },
                    minidescriptiont = {
                        jp = "二つの関節を接続するために GearJoint を作成します。",
                        pt = "Cria uma junta de engrenagem conectando duas juntas.",
                        ru = "Создает GearJoint для двух тел."
                    },
                    name = "newGearJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first joint to connect with a gear joint.",
                                    descriptiont = {
                                        jp = "伝動装置の関節へ接続する第一関節。"
                                    },
                                    name = "joint1",
                                    type = "Joint"
                                },
                                {
                                    description = "The second joint to connect with a gear joint.",
                                    descriptiont = {
                                        jp = "伝動装置の関節へ接続する第二関節。"
                                    },
                                    name = "joint2",
                                    type = "Joint"
                                },
                                {
                                    default = "1",
                                    description = "The gear ratio.",
                                    descriptiont = {
                                        jp = "伝動装置における比率。"
                                    },
                                    name = "ratio",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new gear joint.",
                                    descriptiont = {
                                        jp = "新規の伝動装置の関節。"
                                    },
                                    name = "joint",
                                    type = "GearJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a joint between two bodies which controls the relative motion between them.\n\nPosition and rotation offsets can be specified once the MotorJoint has been created, as well as the maximum motor force and torque that will be be applied to reach the target offsets.",
                    descriptiont = {
                        jp = "相対運動を制御するために二つの物体間に関節を作成します。\n\n対象の支距に到達するために適用される発動機の最大力量および力矩と同様に、 MotorJoint 作成時に位置および回転支距を同時指定できます。"
                    },
                    minidescriptiont = {
                        jp = "相対運動を制御するために二つの物体間に関節を作成します。"
                    },
                    name = "newMotorJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ取り付ける第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ取り付ける第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    default = "0.3",
                                    description = "The joint's initial position correction factor, in the range of [0, 1].",
                                    descriptiont = {
                                        jp = "1 の範囲内による関節の初期位置補正係数です。"
                                    },
                                    name = "correctionFactor",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new MotorJoint.",
                                    descriptiont = {
                                        jp = "新規の MotorJoint です。"
                                    },
                                    name = "joint",
                                    type = "MotorJoint"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ取り付ける第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ取り付ける第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    default = "0.3",
                                    description = "The joint's initial position correction factor, in the range of [0, 1].",
                                    descriptiont = {
                                        jp = "1 の範囲内による関節の初期位置補正係数です。"
                                    },
                                    name = "correctionFactor",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new MotorJoint.",
                                    descriptiont = {
                                        jp = "新規の MotorJoint です。"
                                    },
                                    name = "joint",
                                    type = "MotorJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a joint between a body and the mouse.\n\nThis joint actually connects the body to a fixed point in the world. To make it follow the mouse, the fixed point must be updated every timestep (example below).\n\nThe advantage of using a MouseJoint instead of just changing a body position directly is that collisions and reactions to other joints are handled by the physics engine.",
                    descriptiont = {
                        jp = "物体およびマウス間の関節を作成します。\n\nこの関節は世界に存在する固定地点へ物体を接続します。マウスに追従させるために、固定地点は時間刻みごとに必ず更新されます(下記の用例)。\n\n物体の位置を直接変更する代わりに MouseJoint を使用する利点は他の関節への衝突および反応が物理演算エンジンによって扱われることです。",
                        pt = "Cria uma junta entre o corpo e o mouse.\n\nEsta junta conecta o corpo a um ponto fixo no mundo. Para fazer seguir o mouse, o ponto fixado deve ser atualizada todo intervalo de tempo (exemplo abaixo).\n\nA vantagem de usar uma junta de mouse em vez de somente alterar a posição do corpo diretamente é que colisões reações em outras juntas são manuseadas pela motor físico.",
                        ru = "Создает соединение между телом и мышью.\n\nЭто соединение фактически присоединяет тело к фиксированной точке. Чтобы сделать точку подвижной, необходимо обновлять ее координаты (см. пример ниже).\n\nПреимущество MouseJoint перед обычной сменой положения тела в том, что столкновения объекта обрабатываются физически корректно."
                    },
                    minidescriptiont = {
                        jp = "物体およびマウス間の関節を作成します。",
                        pt = "Cria uma junta entre o corpo e o mouse.",
                        ru = "Создает соединение между телом и мышью."
                    },
                    name = "newMouseJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The body to attach to the mouse.",
                                    descriptiont = {
                                        jp = "マウスに取り付ける物体。"
                                    },
                                    name = "body",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the connecting point.",
                                    descriptiont = {
                                        jp = "接続地点の x 位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the connecting point.",
                                    descriptiont = {
                                        jp = "接続地点の y 位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new mouse joint.",
                                    descriptiont = {
                                        jp = "新規のマウス関節。"
                                    },
                                    name = "joint",
                                    type = "MouseJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new PolygonShape.\n\nThis shape can have 8 vertices at most, and must form a convex shape.",
                    descriptiont = {
                        jp = "PolygonShape の新規作成。\n\nこの形状は八つ以上の頂点を保持でき、形状は必ず凸面形状になります。",
                        pt = "Cria um novo PolygonShape.\n\nEssa Forma pode ter 8 ou mais vértices e forma uma Forma convexa.",
                        ru = "Создает многоугольную форму.\n\nЭта форма может иметь максимум 8 вершин и она должна быть выпуклой."
                    },
                    minidescriptiont = {
                        jp = "PolygonShape の新規作成。",
                        pt = "Cria um novo PolygonShape.",
                        ru = "Создает многоугольную форму."
                    },
                    name = "newPolygonShape",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The position of first point on the x-axis.",
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The position of first point on the y-axis.",
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The position of second point on the x-axis.",
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The position of second point on the y-axis.",
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "You can continue passing more point positions to create the PolygonShape.",
                                    name = "...",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new PolygonShape.",
                                    name = "shape",
                                    type = "PolygonShape"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A list of vertices to construct the polygon, in the form of {x1, y1, x2, y2, x3, y3, ...}.",
                                    descriptiont = {
                                        jp = "{x1, y1, x2, y2, x3, y3, ...} 形式で、多角形を構築するために使用する頂点の一覧。"
                                    },
                                    name = "vertices",
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "A new PolygonShape.",
                                    descriptiont = {
                                        jp = "新規の PolygonShape です。"
                                    },
                                    name = "shape",
                                    type = "PolygonShape"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a prismatic joints between two bodies.\n\nA prismatic joint constrains two bodies to move relatively to each other on a specified axis. It does not allow for relative rotation. Its definition and operation are similar to a revolute joint, but with translation and force substituted for angle and torque.",
                    descriptiont = {
                        jp = "二つの物体間に対して PrismaticJoint を作成します。\n\n直動関節は二つの物体へ互いに関連する指定された軸の移動を強制します。相対的な回転は使用できません。定義および操作は回転関節と似ていますが、角度および力矩に対して代わりに並進移動および力量が使用されます。\n\nFile:physicsJointPrismatic.png",
                        pt = "Cria uma junta prismática entre dois Corpos.\n\nUma junta prismática obriga dois Corpos a terem movimentos relativos ao outro em um eixo específico. Isso não permite rotações relativas. Sua definição e operação é similar à  junta fixa, mas com translação e força substituídas por ângulos e torques.",
                        ru = "Создает PrismaticJoint для двух тел.\n\nPrismaticJoint держит два тела так, что они двигаются относительно друг друга по определенной оси и не вращаются относительно друг друга. Создание и использование PrismaticJoint подобно RevoluteJoint, только с перемещением вместо вращения и силой вместо крутящего момента."
                    },
                    minidescriptiont = {
                        jp = "二つの物体間に対して PrismaticJoint を作成します。",
                        pt = "Cria uma junta prismática entre dois Corpos.",
                        ru = "Создает PrismaticJoint для двух тел."
                    },
                    name = "newPrismaticJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to connect with a prismatic joint.",
                                    descriptiont = {
                                        jp = "直動関節へ接続する第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to connect with a prismatic joint.",
                                    descriptiont = {
                                        jp = "直動関節へ接続する第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x coordinate of the anchor point.",
                                    descriptiont = {
                                        jp = "錨地点の x 座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the anchor point.",
                                    descriptiont = {
                                        jp = "錨地点の y 座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸ベクトルの x 座標。"
                                    },
                                    name = "ax",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸ベクトルの y 座標。"
                                    },
                                    name = "ay",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new prismatic joint.",
                                    descriptiont = {
                                        jp = "新規の直動関節。"
                                    },
                                    name = "joint",
                                    type = "PrismaticJoint"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first body to connect with a prismatic joint.",
                                    descriptiont = {
                                        jp = "直動関節へ接続する第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to connect with a prismatic joint.",
                                    descriptiont = {
                                        jp = "直動関節へ接続する第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x coordinate of the first anchor point.",
                                    descriptiont = {
                                        jp = "第一錨地点の x 座標。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the first anchor point.",
                                    descriptiont = {
                                        jp = "第一錨地点の y 座標。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the second anchor point.",
                                    descriptiont = {
                                        jp = "第二錨地点の x 座標。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the second anchor point.",
                                    descriptiont = {
                                        jp = "第二錨地点の y 座標。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸単位ベクトルの x 座標。"
                                    },
                                    name = "ax",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸単位ベクトルの y 座標。"
                                    },
                                    name = "ay",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new prismatic joint.",
                                    descriptiont = {
                                        jp = "新規の直動関節。"
                                    },
                                    name = "joint",
                                    type = "PrismaticJoint"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first body to connect with a prismatic joint.",
                                    descriptiont = {
                                        jp = "直動関節へ接続する第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to connect with a prismatic joint.",
                                    descriptiont = {
                                        jp = "直動関節へ接続する第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x coordinate of the first anchor point.",
                                    descriptiont = {
                                        jp = "第一錨地点の x 座標。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the first anchor point.",
                                    descriptiont = {
                                        jp = "第一錨地点の y 座標。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the second anchor point.",
                                    descriptiont = {
                                        jp = "第二錨地点の x 座標。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the second anchor point.",
                                    descriptiont = {
                                        jp = "第二錨地点の y 座標。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸単位ベクトルの x 座標。"
                                    },
                                    name = "ax",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸単位ベクトルの y 座標。"
                                    },
                                    name = "ay",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                },
                                {
                                    default = "0",
                                    description = "The reference angle between body1 and body2, in radians.",
                                    descriptiont = {
                                        jp = "body1 および body2 間においての弧度による基準角。"
                                    },
                                    name = "referenceAngle",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new prismatic joint.",
                                    descriptiont = {
                                        jp = "新規の直動関節。"
                                    },
                                    name = "joint",
                                    type = "PrismaticJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a pulley joint to join two bodies to each other and the ground.\n\nThe pulley joint simulates a pulley with an optional block and tackle. If the ratio parameter has a value different from one, then the simulated rope extends faster on one side than the other. In a pulley joint the total length of the simulated rope is the constant length1 + ratio * length2, which is set when the pulley joint is created.\n\nPulley joints can behave unpredictably if one side is fully extended. It is recommended that the method setMaxLengths  be used to constrain the maximum lengths each side can attain.",
                    descriptiont = {
                        jp = "基礎と二つの物体を互いに接続するために PulleyJoint を作成します。\n\n滑車関節は任意のブロック(滑車)とタックル(滑車装置、巻き上げ装置)がある滑車の模擬を行います。引数 ratio が異なる値であるならば、模擬を行う縄は他の側面より早く伸びます。滑車関節において模擬を行う縄の合計長は &lt;tt&gt;length1 + ratio * length2&lt;/tt&gt; の定数であり、車輪関節の作成時に設定されます。\n\n片側が完全に拡張される場合は滑車関節は予測不能の動作になります。各側面の到達可能な最大長を制限するために PulleyJoint:setMaxLengths メソッドの使用を推奨します。\n\nFile:physicsJointPulley.png",
                        pt = "Cria uma junta de polia para juntar dois Corpos entre si e o solo.\n\nUm junta de polia simula uma polia com um bloco e talha opcionais. Se o parâmetro relação tem o valor diferente de 1, então a corda simulada estende mais rapidamente de um lado do que do outro. Em uma junta de polia, o comprimento total da corda simulada é a constantes &lt;&lt;tt&gt;comprimento1 + taxa * comprimento2&lt;/tt&gt;, o qual é configurado na criação da junta.\n\nO comportamento de juntas de polia são imprevisíveis se um lado está completamente estendido. É recomendado que o método setMaxLengths seja usado para limitar o comprimento máximo de cada lado pode atingir.",
                        ru = "Создает совместный шкив для соединения двух тел друг с другом и землей.\n\nPulleyJoint симулирует шкив с необязательным блоком и веревкой. Если параметр ''ratio'' имеет значение, отличное от единицы, то моделируется веревка, изменяемая с одной стороны быстрее, чем с другой. Общая длина веревок с обеих сторон всегда равна константе &lt;tt&gt;length1 + ratio * length2&lt;/tt&gt;, которая вычисляется при создании соединения.\n\nPulleyJoint может вести себя непредсказуемо, если одна из сторон полностью выдвинута. Рекомендуется использовать метод  setMaxLengths, чтобы ограничить максимальную длину, которую могут достичь веревки."
                    },
                    minidescriptiont = {
                        jp = "基礎と二つの物体を互いに接続するために PulleyJoint を作成します。",
                        pt = "Cria uma junta de polia para juntar dois Corpos entre si e o solo.",
                        ru = "Создает совместный шкив для соединения двух тел друг с другом и землей."
                    },
                    name = "newPulleyJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to connect with a pulley joint.",
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to connect with a pulley joint.",
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x coordinate of the first body's ground anchor.",
                                    name = "gx1",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the first body's ground anchor.",
                                    name = "gy1",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the second body's ground anchor.",
                                    name = "gx2",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the second body's ground anchor.",
                                    name = "gy2",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the pulley joint anchor in the first body.",
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the pulley joint anchor in the first body.",
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x coordinate of the pulley joint anchor in the second body.",
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y coordinate of the pulley joint anchor in the second body.",
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    default = "1",
                                    description = "The joint ratio.",
                                    name = "ratio",
                                    type = "number"
                                },
                                {
                                    default = "true",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new pulley joint.",
                                    name = "joint",
                                    type = "PulleyJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Shorthand for creating rectangular PolygonShapes.\n\nBy default, the local origin is located at the center of the rectangle as opposed to the top left for graphics.",
                    descriptiont = {
                        jp = "長方形の PolygonShape を作成するための速記法です。\n\n標準では、局所の原点はグラフィックに対して左上に向かい合った長方形の'''中心'''に位置します。",
                        pt = "Atalho para criar um PolygonShapes retangular.\n\nO retângulo será criado em (x, y) em coordenadas local.",
                        ru = "Краткая форма для создания прямоугольной формы многоугольника.\n\nПрямоугольник создается в локальных координатах."
                    },
                    minidescriptiont = {
                        jp = "長方形の PolygonShape を作成するための速記法です。",
                        pt = "Atalho para criar um PolygonShapes retangular.",
                        ru = "Краткая форма для создания прямоугольной формы многоугольника."
                    },
                    name = "newRectangleShape",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The width of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の幅。",
                                        ru = "Ширина прямоугольника."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の高さ。",
                                        ru = "Высота прямоугольника."
                                    },
                                    name = "height",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new PolygonShape.",
                                    descriptiont = {
                                        jp = "新規 PolygonShape です。",
                                        ru = "Новую форму PolygonShape."
                                    },
                                    name = "shape",
                                    type = "PolygonShape"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The offset along the x-axis.",
                                    descriptiont = {
                                        jp = "x-軸からの支距。",
                                        ru = "Смещение по оси X."
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The offset along the y-axis.",
                                    descriptiont = {
                                        jp = "y-軸からの支距。",
                                        ru = "Смешение по оси Y."
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The width of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の幅。",
                                        ru = "Ширина прямоугольника."
                                    },
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "The height of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の高さ。",
                                        ru = "Высота прямоугольника."
                                    },
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The initial angle of the rectangle.",
                                    descriptiont = {
                                        jp = "長方形の初期角度。",
                                        ru = "Начальный угол прямоугольника."
                                    },
                                    name = "angle",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new PolygonShape.",
                                    descriptiont = {
                                        jp = "新規 PolygonShape です。",
                                        ru = "Новую форму PolygonShape."
                                    },
                                    name = "shape",
                                    type = "PolygonShape"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a pivot joint between two bodies.\n\nThis joint connects two bodies to a point around which they can pivot.",
                    descriptiont = {
                        jp = "二つの物体間で車軸関節を作成します。\n\nこの関節は回転可能な点へ二つの物体を接続します。\n\nFile:physicsJointRevolute.png",
                        pt = "Cria uma junta de ponto fixo entre dois Corpos.\n\nEsta junta conecta dois Corpos em um ponto em torno do qual eles podem girar.",
                        ru = "Создает шарнир между двумя телами.\n\nЭто соединение соединяет два тела так, чтобы они вращались вокруг одной точки."
                    },
                    minidescriptiont = {
                        jp = "二つの物体間で車軸関節を作成します。",
                        pt = "Cria uma junta de ponto fixo entre dois Corpos.",
                        ru = "Создает шарнир между двумя телами."
                    },
                    name = "newRevoluteJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body.",
                                    descriptiont = {
                                        jp = "第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body.",
                                    descriptiont = {
                                        jp = "第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the connecting point.",
                                    descriptiont = {
                                        jp = "接続地点の x 位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the connecting point.",
                                    descriptiont = {
                                        jp = "接続地点の y 位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new revolute joint.",
                                    descriptiont = {
                                        jp = "新規の回転関節。"
                                    },
                                    name = "joint",
                                    type = "RevoluteJoint"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first body.",
                                    descriptiont = {
                                        jp = "第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body.",
                                    descriptiont = {
                                        jp = "第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the first connecting point.",
                                    descriptiont = {
                                        jp = "第一接続地点の x 位置。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first connecting point.",
                                    descriptiont = {
                                        jp = "第一接続地点の y 位置。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second connecting point.",
                                    descriptiont = {
                                        jp = "第二接続地点の x 位置。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second connecting point.",
                                    descriptiont = {
                                        jp = "第二接続地点の y 位置。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                },
                                {
                                    default = "0",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "body1 および body2 間においての弧度による基準角。"
                                    },
                                    name = "referenceAngle",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new revolute joint.",
                                    descriptiont = {
                                        jp = "新規の回転関節。"
                                    },
                                    name = "joint",
                                    type = "RevoluteJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a joint between two bodies. Its only function is enforcing a max distance between these bodies.",
                    descriptiont = {
                        jp = "二つの物体間における関節を作成します。この関数は物体間の最大距離のみを延長します。"
                    },
                    minidescriptiont = {
                        jp = "二つの物体間における関節を作成します。"
                    },
                    name = "newRopeJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ接触する第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節へ接触する第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the first anchor point.",
                                    descriptiont = {
                                        jp = "第一錨地点の x 位置。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first anchor point.",
                                    descriptiont = {
                                        jp = "第一錨地点の y 位置。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second anchor point.",
                                    descriptiont = {
                                        jp = "第二錨地点の x 位置。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second anchor point.",
                                    descriptiont = {
                                        jp = "第二錨地点の y 位置。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    description = "The maximum distance for the bodies.",
                                    descriptiont = {
                                        jp = "物体に対する最大距離。"
                                    },
                                    name = "maxLength",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new RopeJoint.",
                                    descriptiont = {
                                        jp = "新規の RopeJoint です。"
                                    },
                                    name = "joint",
                                    type = "RopeJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a constraint joint between two bodies. A WeldJoint essentially glues two bodies together. The constraint is a bit soft, however, due to Box2D's iterative solver.",
                    descriptiont = {
                        jp = "二つの物体間に対して拘束具を作成します。本質的に WeldJoint は二つの物体を接着します。しかしながら、拘束条件は Box2D における反復の解釈より、少し柔軟です。"
                    },
                    minidescriptiont = {
                        jp = "WeldJoint は二つの物体を接着します。"
                    },
                    name = "newWeldJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における地点の x 位置 (世界空間)。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における地点の y 位置 (世界空間)。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new WeldJoint.",
                                    descriptiont = {
                                        jp = "新規 WeldJoint です。"
                                    },
                                    name = "joint",
                                    type = "WeldJoint"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the first anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第一地点の x 位置 (世界空間)。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第一地点の y 位置 (世界空間)。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第二地点の x 位置 (世界空間)。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第二地点の y 位置 (世界空間)。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new WeldJoint.",
                                    descriptiont = {
                                        jp = "新規 WeldJoint です。"
                                    },
                                    name = "joint",
                                    type = "WeldJoint"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The first body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body to attach to the joint.",
                                    descriptiont = {
                                        jp = "関節に取り付ける第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the first anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第一地点の x 位置 (世界空間)。"
                                    },
                                    name = "x1",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the first anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第一地点の y 位置 (世界空間)。"
                                    },
                                    name = "y1",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the second anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第二地点の x 位置 (世界空間)。"
                                    },
                                    name = "x2",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the second anchor point (world space).",
                                    descriptiont = {
                                        jp = "錨における第二地点の y 位置 (世界空間)。"
                                    },
                                    name = "y2",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                },
                                {
                                    default = "0",
                                    description = "The reference angle between body1 and body2, in radians.",
                                    descriptiont = {
                                        jp = "body1 および body2 間においての弧度による基準角。"
                                    },
                                    name = "referenceAngle",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The new WeldJoint.",
                                    descriptiont = {
                                        jp = "新規 WeldJoint です。"
                                    },
                                    name = "joint",
                                    type = "WeldJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a wheel joint.",
                    descriptiont = {
                        jp = "車輪関節を作成します。\n\nFile:physicsJointWheel.png"
                    },
                    minidescriptiont = {
                        jp = "車輪関節を作成します。"
                    },
                    name = "newWheelJoint",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The first body.",
                                    descriptiont = {
                                        jp = "第一物体。"
                                    },
                                    name = "body1",
                                    type = "Body"
                                },
                                {
                                    description = "The second body.",
                                    descriptiont = {
                                        jp = "第二物体。"
                                    },
                                    name = "body2",
                                    type = "Body"
                                },
                                {
                                    description = "The x position of the anchor point.",
                                    descriptiont = {
                                        jp = "錨地点の x 位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the anchor point.",
                                    descriptiont = {
                                        jp = "錨地点の y 位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The x position of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸単位ベクトルの x 位置。"
                                    },
                                    name = "ax",
                                    type = "number"
                                },
                                {
                                    description = "The y position of the axis unit vector.",
                                    descriptiont = {
                                        jp = "軸単位ベクトルの y 位置。"
                                    },
                                    name = "ay",
                                    type = "number"
                                },
                                {
                                    default = "false",
                                    description = "Specifies whether the two bodies should collide with each other.",
                                    descriptiont = {
                                        jp = "二つの物体が互いに衝突するかどうか指定します。"
                                    },
                                    name = "collideConnected",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "The new WheelJoint.",
                                    descriptiont = {
                                        jp = "新規 WheelJoint です。"
                                    },
                                    name = "joint",
                                    type = "WheelJoint"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new World.",
                    descriptiont = {
                        jp = "世界の新規作成。",
                        pt = "Cria um novo Mundo.\n\nEsta função cria um novo Mundo com o tamanho dado, sem gravidade e \"dormindo\".",
                        ru = "Создает объект World."
                    },
                    minidescriptiont = {
                        jp = "世界の新規作成。",
                        pt = "Cria um novo Mundo.",
                        ru = "Создает объект World."
                    },
                    name = "newWorld",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "0",
                                    description = "The x component of gravity.",
                                    descriptiont = {
                                        jp = "x 成分の重力。"
                                    },
                                    name = "xg",
                                    type = "number"
                                },
                                {
                                    default = "0",
                                    description = "The y component of gravity.",
                                    descriptiont = {
                                        jp = "y 成分の重力。"
                                    },
                                    name = "yg",
                                    type = "number"
                                },
                                {
                                    default = "true",
                                    description = "Whether the bodies in this world are allowed to sleep.",
                                    descriptiont = {
                                        jp = "この世界における物体は休止が許可されているかどうか。"
                                    },
                                    name = "sleep",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "A brave new World.",
                                    descriptiont = {
                                        jp = "素晴らしき新世界。"
                                    },
                                    name = "world",
                                    type = "World"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the pixels to meter scale factor.\n\nAll coordinates in the physics module are divided by this number and converted to meters, and it creates a convenient way to draw the objects directly to the screen without the need for graphics transformations.\n\nIt is recommended to create shapes no larger than 10 times the scale. This is important because Box2D is tuned to work well with shape sizes from 0.1 to 10 meters. The default meter scale is 30.\n\nlove.physics.setMeter does not apply retroactively to created objects. Created objects retain their meter coordinates but the scale factor will affect their pixel coordinates.",
                    descriptiont = {
                        jp = "メートル尺度係数をピクセルへ設定します。\n\n物理演算モジュールの全座標は本係数で除算されてからメートルへ変換され、グラフィックスの変換なしで画面へオブジェクトを直接描画するのに便利な方法を作成します。\n\n形状は 10 倍以下の大きさで作成することが推奨されます。これは Box2D が 0.1 から 10 メートルまでの形状の大きさに上手く調整するために重要です。省略時のメートル尺度は 30 です。\n\nlove.physics.setMeter はオブジェクトの作成まで遡及(そきゅう)して適用しません。作成されたオブジェクトはメートル座標を保持しますが、尺度係数はピクセルの座標に影響します。"
                    },
                    minidescriptiont = {
                        jp = "メートル尺度係数を設定します。"
                    },
                    name = "setMeter",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The scale factor as an integer.",
                                    descriptiont = {
                                        jp = "整数による尺度係数。"
                                    },
                                    name = "scale",
                                    type = "number"
                                }
                            }
                        }
                    }
                }
            },
            name = "physics",
            types = {
                {
                    constructors = {
                        "newBody"
                    },
                    description = "Bodies are objects with velocity and position.",
                    descriptiont = {
                        de = "Körper sind Objekte mit einer Geschwindigkeit und Position.",
                        jp = "物体は速度と位置を持つオブジェクトです。",
                        pt = "Corpos são objetos com velocidade e posição.\n\nCria-se um novo Corpo com love.physics.newBody.\n\nUm Corpo pode chamar as funçõas:",
                        ru = "Тело объекта со скоростью и положением."
                    },
                    functions = {
                        {
                            description = "Applies an angular impulse to a body. This makes a single, instantaneous addition to the body momentum.\n\nA body with with a larger mass will react less. The reaction does not depend on the timestep, and is equivalent to applying a force continuously for 1 second. Impulses are best used to give a single push to a body. For a continuous push to a body it is better to use Body:applyForce.",
                            descriptiont = {
                                de = "Überträgt einen Drehimplus auf einen Körper. Dies stellt eine einzelne, sofortige Addition zu dem Drehmoment des Körpers dar.\n\nEin Körper mit einer größeren Masse reagiert schwächer auf einen Impuls. Die Reaktion ist '''nicht''' vom Zeitschritt der Simulation abhängig, sondern entspricht der kontinuierlichen Anwendung einer Kraft für eine Sekunde. \n\nImpulse werden am besten dazu verwendet einem Körper einen einzelnen Stoß zu verpassen. Für einen andauerndenden Schub sollte stattdessen Body:applyForce verwendet werden.",
                                jp = "物体に対する角力積を適用します。これは単に単一の運動量を即時追加します。\n\n物体の大規模質量には反応しません。反応は時間刻みに'''依存しないため'''、一秒間に力量を連続して適用するのと等価になります。力積は単一の物体を押し出すために使用する最良の方法です。物体を連続して押し出すには Body:applyForce を使用するほうが良いです。"
                            },
                            minidescriptiont = {
                                de = "Überträgt einen Drehimplus auf einen Körper.",
                                jp = "物体に対する角力積を適用します。"
                            },
                            name = "applyAngularImpulse",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The impulse in kilogram-square meter per second.",
                                            descriptiont = {
                                                de = "Der Impuls in (kg*m^2)/s.",
                                                jp = "一秒あたりのキログラム平方メートル単位による力積。"
                                            },
                                            name = "impulse",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Apply force to a Body.\n\nA force pushes a body in a direction. A body with with a larger mass will react less. The reaction also depends on how long a force is applied: since the force acts continuously over the entire timestep, a short timestep will only push the body for a short time. Thus forces are best used for many timesteps to give a continuous push to a body (like gravity). For a single push that is independent of timestep, it is better to use Body:applyLinearImpulse.\n\nIf the position to apply the force is not given, it will act on the center of mass of the body. The part of the force not directed towards the center of mass will cause the body to spin (and depends on the rotational inertia).\n\nNote that the force components and position must be given in world coordinates.",
                            descriptiont = {
                                de = "Überträgt eine Kraft auf einen Körper.\n\nEine Kraft schiebt einen Körper in eine Richtung. Ein Körper mit einer größeren Masse wird weniger beeinflusst, als ein Körper mit geringer Masse. \n\nDa die Kraft kontinuierlich angewendet wird, ist die Stärke der Reaktion von der Dauer der Kraftanwendung abhängig. Body:applyForce sollte daher benutzt werden, wenn eine Kraft für eine längere Zeit auf einen Körper übertragen werden soll. Für einen einzelnen, sofortigen Schub sollte stattdessen Body:applyLinearImpulse verwendet werden.\n\nWenn keine Position angegeben wird, an welcher die Kraft übertragen werden soll, so wird sie auf den Massenmittelpunkt des Körpers übertragen.\n\nEine Kraft die nicht in Richtung des Massenmittelpunkts übertragen wird, führt dazu, dass der Körper rotiert.\n\nZu beachten ist, dass die Kraftkomponenten und Positionen in Welt-Koordinaten angegeben werden müssen.",
                                jp = "物体に力量を適用します。\n\n力量は方向へ物体を押し出します。物体の大規模質量には反応しません。反応については適用された力量の長さに依存します：力量は全ての時間刻みにて連続的に作用するため、短い時間刻みは物体を短時間だけ押し出します。従って、物体を連続的に押し出すには(重力のように)、より多くの時間刻みを使用することが最良の方法です。時間刻みに依存しない一度だけの押し出しについては Body:applyLinearImpulse を使用した方がよいです。\n\n力量を適用する位置が指定されない場合は、物体にある重心へ作用します。重心方向へ向けられない力量の一部は物体を回転(は回転の慣性に依存します)させます。\n\n力量の要素および位置は必ず世界座標で指定するよう注意してください。",
                                pt = "Aplica uma força em um Corpo.\n\nUma força empurra um Corpo em uma direção. Um Corpo com um grande massa irá reagir menos. A reação também depende por quanto tempo a força é aplicada: como a força atua continuamente em todo o intervalo de tempo, um curto intervalo de tempo irá empurrar o Corpo por um pequeno período. Assim, as forças são melhores utilizadas por muitos intervalos de tempo para dar um empurrão contínuo no corpo (como a gravidade). Para um simples empurrão, que é independente do intervalo de tempo, é melhor usar Body:applyImpulse.\n\nSe o ponto de aplicação da força não é dado, ela irá atuar no centro de massa do corpo. A componente da força que não é diretamente aplicada ao centro de massa irá fazer o Corpo girar (isso dependerá da rotação inercial).\n\nNote que as componentes da força eo ponto de aplicação devem estar nas coordenadas do Mundo.",
                                ru = "Применяет силу к телу.\n\nСила толкает тело в направлении. Тело с большей массой будет реагировать меньше. Реакция также зависит от того, как долго сила воздействует на тело: поскольку сила действует непрерывно в течении всего временного шага, короткий временной шаг только подтолкнет тело на короткое время. Силу лучше применять для многих временных шагов, чтобы сила воздействовала на тело непрерывно (как гравитация например). Для единичного толчка, не зависящего от временных шагов, лучше использовать Body:applyImpulse\n\nЕсли точка применения силы не указана, то сила применяется к центру масс тела. Сила, примененная не к центру масс, будет заставлять тело вращаться (зависит от момента инерции)\n\nУчтите, что компоненты силы и позиции должны передаваться в мировых координатах."
                            },
                            minidescriptiont = {
                                de = "Überträgt eine Kraft auf einen Körper.",
                                jp = "物体に力量を適用します。",
                                pt = "Aplica uma força em um Corpo.",
                                ru = "Применяет силу к телу."
                            },
                            name = "applyForce",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of force to apply to the center of mass.",
                                            descriptiont = {
                                                de = "Die x-Komponente der Kraft die auf den Massenmittelpunkt übertragen werden soll.",
                                                jp = "重心へ適用する力量の x 要素。"
                                            },
                                            name = "fx",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of force to apply to the center of mass.",
                                            descriptiont = {
                                                de = "Die y-Komponente der Kraft die auf den Massenmittelpunkt übertragen werden soll.",
                                                jp = "重心へ適用する力量の y 要素。"
                                            },
                                            name = "fy",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The x component of force to apply.",
                                            descriptiont = {
                                                de = "Die x-Komponente der Kraft die übertragen werden soll.",
                                                jp = "適用する力量の x 要素。",
                                                pt = "A componente x da força aplicada.",
                                                ru = "X компонента применяемой силы."
                                            },
                                            name = "fx",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of force to apply.",
                                            descriptiont = {
                                                de = "Die y-Komponente der Kraft die übertragen werden soll.",
                                                jp = "適用する力量の y 要素。",
                                                pt = "A componente y da força aplicada.",
                                                ru = "Y компонента применяемой силы."
                                            },
                                            name = "fy",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position to apply the force.",
                                            descriptiont = {
                                                de = "Die x-Position an welcher die Kraft übertragen werden soll.",
                                                jp = "力量へ適用する x 位置。",
                                                pt = "A posição em x em que a força será aplicada.",
                                                ru = "X координата точки применения силы."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position to apply the force.",
                                            descriptiont = {
                                                de = "Die y-Position an welcher die Kraft übertragen werden soll.",
                                                jp = "力量へ適用する y 位置。",
                                                pt = "A posição em y em que a força será aplicada.",
                                                ru = "Y координата точки применения силы."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Applies an impulse to a body. This makes a single, instantaneous addition to the body momentum.\n\nAn impulse pushes a body in a direction. A body with with a larger mass will react less. The reaction does not depend on the timestep, and is equivalent to applying a force continuously for 1 second. Impulses are best used to give a single push to a body. For a continuous push to a body it is better to use Body:applyForce.\n\nIf the position to apply the impulse is not given, it will act on the center of mass of the body. The part of the impulse not directed towards the center of mass will cause the body to spin (and depends on the rotational inertia).\n\nNote that the impulse components and position must be given in world coordinates.",
                            descriptiont = {
                                de = "Überträgt einen Impuls auf einen Körper.\n\nDies stellt eine einzelne, sofortige Addition zu dem Impuls des Körpers dar. \n\nEin Impuls schiebt einen Körper in eine Richtung. Ein Körper mit einer größeren Masse wird weniger beeinflusst, als ein Körper mit geringer Masse. Die Reaktion ist '''nicht''' vom Zeitschritt der Simulation abhängig, sondern entspricht der kontinuierlichen Anwendung einer Kraft für eine Sekunde.\n\nImpulse werden am besten dazu verwendet einem Körper einen einzelnen Stoß zu verpassen. Für einen andauerndenden Schub sollte stattdessen Body:applyForce verwendet werden.\n\nWenn keine Position angegeben wird, an welcher die Kraft übertragen werden soll, so wird sie auf den Massenmittelpunkt des Körpers übertragen. Eine Kraft die nicht in Richtung des Massenmittelpunkts übertragen wird, führt dazu, dass der Körper rotiert.\n\nZu beachten ist, dass die Kraftkomponenten und Positionen in Welt-Koordinaten angegeben werden müssen.",
                                jp = "物体に対して力積を適用します。\n\nこれは単一の物体運動量を即時追加して作成します。\n\n力積は方向へ物体を押し出します。物体の大規模質量には反応しません。反応については時間刻みに'''依存せず'''、一秒間に力量を連続で適用することと等価です。力積は物体に一度だけ押し出すのに最良の方法です。物体への連続的な押し出しについては Body:applyForce を使用した方がよいです。\n\n力積を適用する位置が指定されない場合は、物体にある重心へ作用します。重心方向へ向けられない力積の一部は物体を回転(は回転の慣性に依存します)させます。\n\n力積の要素および位置は必ず世界座標で指定するよう注意してください。"
                            },
                            minidescriptiont = {
                                de = "Überträgt einen Impuls auf einen Körper.",
                                jp = "物体に対して力積を適用します。"
                            },
                            name = "applyLinearImpulse",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the impulse applied to the center of mass.",
                                            descriptiont = {
                                                de = "Die x-Komponente der Kraft die auf den Massenmittelpunkt übertragen werden soll.",
                                                jp = "重心へ適用する力積の x 要素。"
                                            },
                                            name = "ix",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the impulse applied to the center of mass.",
                                            descriptiont = {
                                                de = "Die y-Komponente der Kraft die auf den Massenmittelpunkt übertragen werden soll.",
                                                jp = "重心へ適用する力積の y 要素。"
                                            },
                                            name = "iy",
                                            type = "number"
                                        }
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the impulse.",
                                            descriptiont = {
                                                de = "Die x-Komponente der Kraft die übertragen werden soll.",
                                                jp = "力積の x 要素。"
                                            },
                                            name = "ix",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the impulse.",
                                            descriptiont = {
                                                de = "Die y-Komponente der Kraft die übertragen werden soll.",
                                                jp = "力積の y 要素。"
                                            },
                                            name = "iy",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position to apply the impulse.",
                                            descriptiont = {
                                                de = "Die x-Position an welcher die Kraft übertragen werden soll.",
                                                jp = "力積を適用する x 位置。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position to apply the impulse.",
                                            descriptiont = {
                                                de = "Die y-Position an welcher die Kraft übertragen werden soll.",
                                                jp = "力積を適用する y 位置。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Apply torque to a body.\n\nTorque is like a force that will change the angular velocity (spin) of a body. The effect will depend on the rotational inertia a body has.",
                            descriptiont = {
                                jp = "物体へ力矩 (トルク、ねじりモーメント) を適用します。\n\n力矩は物体の角運動速度(回転)を変更する力と類似しています。効果は物体が持つ回転の慣性に依存します。",
                                pt = "Aplica um torque ao Corpo.\n\nTorque é como uma força que irá alterar a velocidade angular (rotação) de um Corpo. O efeito irá depender da inércia de rotação que o Corpo possui.",
                                ru = "Применяет крутящий момент к телу.\n\nКрутящий момент похож на силу, только он влияет на угол вращения тела. Эффект зависит от момента инерции тела."
                            },
                            minidescriptiont = {
                                jp = "物体へ力矩を適用します。",
                                pt = "Aplica um torque ao Corpo.",
                                ru = "Применяет крутящий момент к телу."
                            },
                            name = "applyTorque",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The torque to apply.",
                                            descriptiont = {
                                                jp = "適用する力矩。",
                                                pt = "A torque que será aplicado.",
                                                ru = "Крутящий момент."
                                            },
                                            name = "torque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Explicitly destroys the Body. When you don't have time to wait for garbage collection, this function may be used to free the object immediately, but note that an error will occur if you attempt to use the object after calling this function.",
                            descriptiont = {
                                jp = "物体および接触している取付具と関節を明示的に破棄します。\n\nこの関数の呼び出し後に破壊された任意のオブジェクトを使用しようとすればエラーが発生します。 LÖVE 0.7.2 では、ガーベージ・コレクションの処理待ち時間がないため、この関数はオブジェクトを直ちに解放するために使用できます。",
                                pt = "Destrói explicitamente o Corpo.\n\nQuando você não pode aguardar o garbage collection, esta função poderá ser usada para livrar imediatamente o objeto, mas note que um erro irá ocorrer se houver a tentativa de uso do objeto depois que esta função for chamada.",
                                ru = "Явно удаляет тело.\n\nЕсли у Вас нет времени ждать сборщика мусора, это Функция может быть использована для удаления объекта сразу, но учтите, что произойдет ошибка, если вы попытаетесь использовать объект после вызова этой Функции."
                            },
                            minidescriptiont = {
                                jp = "物体を明示的に破棄します。",
                                pt = "Destrói explicitamente o Corpo.",
                                ru = "Явно удаляет тело."
                            },
                            name = "destroy",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Get the angle of the body.\n\nThe angle is measured in radians. If you need to transform it to degrees, use math.deg.\n\nA value of 0 radians will mean \"looking to the right\". Although radians increase counter-clockwise, the y-axis points down so it becomes clockwise from our point of view.",
                            descriptiont = {
                                jp = "物体の角度を取得します。\n\n角度は 弧度により計測されます。 次数を変形する必要がある場合は、 math.deg を使用してください。\n\n弧度の値が 0 のときは\"右側に面している\"ことを意味します。弧度は左回りに増進しますが、人間の視点から見て''右回り''になるようにするためには Y 軸の下を指します。",
                                pt = "Obtém o ângulo do Corpo.\n\nO ângulo é medido em radianos. Se for necessário transformar para graus, use math.deg.",
                                ru = "Возвращает угол поворота тела.\n\nУгол измеряется в радианах. Если вам нужно перевести радианы в градусы, используйте math.deg.\n\nЗначение угла равное нулю подразумевает, что \"тело смотрит вправо\". Хоть радианы увеличиваются в направлении против часовой стрелки, с точки зрения наблюдателя, из-за направленности оси Y вниз, радианы увеличиваются ''по часовой'' стрелке."
                            },
                            minidescriptiont = {
                                jp = "物体の角度を取得します。",
                                pt = "Obtém o ângulo do Corpo.",
                                ru = "Возвращает угол поворота тела."
                            },
                            name = "getAngle",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The angle in radians.",
                                            descriptiont = {
                                                jp = "弧度による角度。",
                                                pt = "O ângulo, em radianos.",
                                                ru = "Угол в радианах."
                                            },
                                            name = "angle",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the Angular damping of the Body\n\nThe angular damping is the rate of decrease of the angular velocity over time: A spinning body with no damping and no external forces will continue spinning indefinitely. A spinning body with damping will gradually stop spinning.\n\nDamping is not the same as friction - they can be modelled together. However, only damping is provided by Box2D (and LÖVE).\n\nDamping parameters should be between 0 and infinity, with 0 meaning no damping, and infinity meaning full damping. Normally you will use a damping value between 0 and 0.1.",
                            descriptiont = {
                                jp = "物体の傾斜減衰を取得します。\n\n傾斜減衰とは''時間経過後の角度運動速度における減少率です''：無減衰と外部からの加力がない回転物体は無限に回転します。減衰がある回転物体は徐々に回転しなくなるでしょう。\n\n減衰は摩擦と同機能ではありません。 ― それらはモデル化することができます。しかし、減衰のみ Box2D (および LOVE) により提供されます。\n\n引数 damping は 0 および 無限大の間であり、0 の場合は無減衰を意味し、無限大の場合は最大減衰を意味します。通常は 0 および 0.1 の間の減衰値を使用します。",
                                pt = "Obtém o amortecimento angular do corpo.\n\nO amortecimento angular é a taxa ''de diminuição da velocidade angular ao longo do tempo'': Um corpo girando sem amortecimento e nenhuma força externa continuará girando indefinidamente. Um corpo em rotação com amortecimento gradualmente parará de girar.\n\nAmortecimento não é o mesmo que o atrito - que podem ser modelados juntos. No entanto, apenas de amortecimento é fornecido pelo Box2D (e Löve).\n\nO parâmetro de amortecimento deve ser entre 0 e infinito, com 0 significando nenhum amortecimento e infinito significado completo de amortecimento. Normalmente você vai usar um valor de amortecimento entre 0 e 0,1.",
                                ru = "Получает угловое торможение тела.\n\nУгловое торможение - это ''скорость убывания угловой скорости с течением времени'': вращающееся тело без торможения и без воздействия внешних сил будет продолжать вращаться все время. Вращающееся тело с торможением постепенно перестанет вращаться.\n\nТорможение не то же самое что трение - они могут быть смоделированы вместе. Однако, только торможение моделируется в Box2D (и в LÖVE).\n\nПараметры торможения должны быть между 0 и бесконечностью, где 0 означает отсутствие торможения, а бесконечность означает полное торможение. Обычно вы будете использовать значения торможения в диапазоне от 0 до 0,1."
                            },
                            minidescriptiont = {
                                jp = "物体の傾斜減衰を取得します。",
                                pt = "Obtém o amortecimento angular do corpo.",
                                ru = "Получает угловое торможение тела."
                            },
                            name = "getAngularDamping",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The value of the angular damping.",
                                            descriptiont = {
                                                jp = "傾斜減衰の値。",
                                                pt = "O valor do amortecimento angular.",
                                                ru = "Значение углового торможения."
                                            },
                                            name = "damping",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the angular velocity of the Body.\n\nThe angular velocity is the rate of change of angle over time.\n\nIt is changed in World:update by applying torques, off centre forces/impulses, and angular damping. It can be set directly with Body:setAngularVelocity.\n\nIf you need the rate of change of position over time, use Body:getLinearVelocity.",
                            descriptiont = {
                                jp = "物体の角速度を取得します。\n\n角速度とは''時間経過後の角度における変動率''です。\n\n力矩、中心の力量/力積、および傾斜減衰は World:update により適用と変更が行われます。それは Body:setAngularVelocity にて直接設定することができます。\n\n''時間経過後の位置における変動率を変更する''必要がある場合は、 Body:getLinearVelocity (日本語)|Body:getLinearVelocity を使用してください。",
                                pt = "Obtém a velocidade angular de um Corpo.\n\nA velocidade angular é a ''taxa de alteração do ângulo em função do tempo''.\n\nEla é alterada em World update através da aplicação de torques, forças/impulsos fora do centro de massa ou amortecimento angular. Pode ser configurada diretamente com Body:setAngularVelocity.\n\nSe você precisa da ''taxa de alteração da posição em função do tempo'', use Body:getLinearVelocity.",
                                ru = "Получает угловую скорость тела.\n\nУгловая скорость - это ''скорость изменения угла с течением времени''.\n\nОна изменяется в World:update путем применения моментов, смещенных от центра сил/импульсов и углового торможения. Скорость может быть установлена непосредственно функцией Body:setAngularVelocity.\n\nЕсли вам нужно узнать скорость перемещения тела, используйте Body:getLinearVelocity."
                            },
                            minidescriptiont = {
                                jp = "物体の角速度を取得します。",
                                pt = "Obtém a velocidade angular de um Corpo.",
                                ru = "Получает угловую скорость тела."
                            },
                            name = "getAngularVelocity",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The angular velocity in radians/second.",
                                            descriptiont = {
                                                jp = "弧度/秒単位による角速度。",
                                                pt = "A velocidade angular, em radianos/segundos.",
                                                ru = "Угловая скорость в радианах в секунду."
                                            },
                                            name = "w",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a list of all Contacts attached to the Body.",
                            descriptiont = {
                                jp = "物体に接触している全ての接点を一覧として取得します。"
                            },
                            minidescriptiont = {
                                jp = "物体に接触している全ての接点を一覧として取得します。"
                            },
                            name = "getContactList",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A list with all contacts associated with the Body.",
                                            descriptiont = {
                                                jp = "物体に関連付けられている全接点の一覧。"
                                            },
                                            name = "contacts",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns a table with all fixtures.",
                            descriptiont = {
                                jp = "全ての取付具をテーブルで返します。"
                            },
                            minidescriptiont = {
                                jp = "全ての取付具をテーブルで返します。"
                            },
                            name = "getFixtureList",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A sequence with all fixtures.",
                                            descriptiont = {
                                                jp = "全ての取付具を シーケンス として表したもの。"
                                            },
                                            name = "fixtures",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the gravity scale factor.",
                            descriptiont = {
                                jp = "重力規模係数を返します。"
                            },
                            minidescriptiont = {
                                jp = "重力規模係数を返します。"
                            },
                            name = "getGravityScale",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The gravity scale factor.",
                                            descriptiont = {
                                                jp = "重力規模係数。"
                                            },
                                            name = "scale",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the rotational inertia of the body.\n\nThe rotational inertia is how hard is it to make the body spin.",
                            descriptiont = {
                                jp = "物体の回転の慣性を取得します。\n\n回転の慣性はどのくらいの強さで物体の回転を行うかどうか指定します。これは Body:setMass の第四引数、または Body:setMassFromShapes により自動的に設定されます。",
                                pt = "Obtém a inércia rotacional de um Corpo.\n\nA inércia rotacional é o quanto é difícil fazer um corpo ter uma rotação. É configurado como o quarto argumento para Body:setMass ou automaticamente com Body:setMassFromShapes.",
                                ru = "Получает момент инерции тела.\n\nМомент инерции, это на сколько тяжело заставить тело вращаться. Устанавливается четвертым параметром в функции Body:setMass или автоматически в Body:setMassFromShapes."
                            },
                            minidescriptiont = {
                                jp = "物体の回転の慣性を取得します。",
                                pt = "Obtém a inércia rotacional de um Corpo.",
                                ru = "Получает момент инерции тела."
                            },
                            name = "getInertia",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The rotational inertial of the body.",
                                            descriptiont = {
                                                jp = "物体の回転の慣性。",
                                                pt = "A inércia rotacional de um Corpo.",
                                                ru = "Момент инерции тела."
                                            },
                                            name = "inertia",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns a table containing the Joints attached to this Body.",
                            descriptiont = {
                                jp = "この物体に取り付けられている関節を内包するテーブルを返します。"
                            },
                            minidescriptiont = {
                                jp = "この物体に取り付けられている関節を内包するテーブルを返します。"
                            },
                            name = "getJointList",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A sequence with the Joints attached to the Body.",
                                            descriptiont = {
                                                jp = "物体に取り付けられている関節を sequence で表したもの。"
                                            },
                                            name = "joints",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the linear damping of the Body.\n\nThe linear damping is the rate of decrease of the linear velocity over time. A moving body with no damping and no external forces will continue moving indefinitely, as is the case in space. A moving body with damping will gradually stop moving.\n\nDamping is not the same as friction - they can be modelled together. However, only damping is provided by Box2D (and LÖVE).",
                            descriptiont = {
                                jp = "物体の線形減衰を取得します。\n\n線形減衰は''時間経過後における線形速度の減衰率です。''空間にある場合、減衰と外部力量がない物体は無制限に移動し続けます。減衰のある物体は徐々に移動しなくなります。\n\n減衰は摩擦と同一ではありません ― それらは共にモデル化することができます。",
                                pt = "Obtém o amortecimento linear de um Corpo.\n\nO amortecimento linear é a ''taxa de redução da velocidade linear em função do tempo''. Um Corpo em movimento sem amortecimento e sem forças externas irá continuar movendo-se indefinidamente, como é o caso no espaço. Um Corpo em movimento com amortecimento irá gradualmente parar de movimentar.\n\nAmortecimento não é o mesmo que fricção - eles podem ser modelados em conjunto. Entretanto somente amortecimento é provido por Box2D (e Löve)."
                            },
                            minidescriptiont = {
                                jp = "物体の線形減衰を取得します。",
                                pt = "Obtém o amortecimento linear de um Corpo."
                            },
                            name = "getLinearDamping",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The value of the linear damping.",
                                            descriptiont = {
                                                jp = "線形減衰の値。",
                                                pt = "O valor do amortecimento linear."
                                            },
                                            name = "damping",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the linear velocity of the Body from its center of mass.\n\nThe linear velocity is the rate of change of position over time.\n\nIf you need the rate of change of angle over time, use Body:getAngularVelocity. If you need to get the linear velocity of a point different from the center of mass:\n\nBody:getLinearVelocityFromLocalPoint allows you to specify the point in local coordinates.\n\nBody:getLinearVelocityFromWorldPoint allows you to specify the point in world coordinates.",
                            descriptiont = {
                                jp = "中心質量から物体の線形速度を取得します。\n\n線形速度は''時間経過後の位置の変動率です。''\n\n''時間経過後の角の変動率'' を変更する必要がある場合は、 Body:getAngularVelocity を使用してください。 中心の質量から異なる地点の線形速度を取得する必要がある場合は:\n\n* Body:getLinearVelocityFromLocalPoint は局所座標での地点指定を可能にします。\n\n* Body:getLinearVelocityFromWorldPoint は世界座標での地点指定を可能にします。\n\n局所および世界座標の定義については \"Essential Mathematics for Games and Interactive Applications の 136 ページ\" を参照してください。",
                                pt = "Obtém a velocidade linear de um Corpo (em seu centro de massa).\n\nA velocidade linear é a ''taxa de alteração da posição em função do tempo''.\n\nSe é necessária a ''taxa de alteração do ângulo em função do tempo'', use Body:getAngularVelocity.\n\nSe for necessário obter a velocidade linear em um ponto diferente do centro de massa:\n\n*  Body:getLinearVelocityFromLocalPoint permite que o ponto seja especificado, em coordenadas local.\n\n*  Body:getLinearVelocityFromWorldPoint permite que o ponto seja especificado, em coordenadas do Mundo.\n\nVeja página 136 or \"Essential Mathematics for Games and Interactive Applications\" para definições das coordenadas local e do Mundo."
                            },
                            minidescriptiont = {
                                jp = "中心質量から物体の線形速度を取得します。",
                                pt = "Obtém a velocidade linear de um Corpo (em seu centro de massa)."
                            },
                            name = "getLinearVelocity",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the velocity vector.",
                                            descriptiont = {
                                                jp = "速度ベクトルの x 要素。",
                                                pt = "A componente x do vetor velocidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the velocity vector.",
                                            descriptiont = {
                                                jp = "速度ベクトルの y 要素。",
                                                pt = "A componente y do vetor velocidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the linear velocity of a point on the body.\n\nThe linear velocity for a point on the body is the velocity of the body center of mass plus the velocity at that point from the body spinning.\n\nThe point on the body must given in local coordinates. Use Body:getLinearVelocityFromWorldPoint to specify this with world coordinates.",
                            descriptiont = {
                                jp = "物体の局所地点における線形速度を取得します。\n\n物体にある地点に対する線形速度は物体の中心質量の速度を加えた物体の回転かから地点の速度です。\n\n物体上の地点は必ず局所座標で指定してください。世界座標は Body:getLinearVelocityFromWorldPoint にて指定してください。",
                                pt = "Obtém a velocidade linear de um ponto no Corpo.\n\nA velocidade linear de um ponto no Corpo é a velocidade do centro de massa mais a a velocidade no ponto da rotação do Corpo.\n\nO ponto no Corpo deve ser dada em coordenadas local. Use Body:getLinearVelocityFromWorldPoint para especificar em coordenadas do Mundo."
                            },
                            minidescriptiont = {
                                jp = "物体の局所地点における線形速度を取得します。",
                                pt = "Obtém a velocidade linear de um ponto no Corpo."
                            },
                            name = "getLinearVelocityFromLocalPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position to measure velocity.",
                                            descriptiont = {
                                                jp = "基準速度の x 位置。",
                                                pt = "A posição x onde será medida a velocidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position to measure velocity.",
                                            descriptiont = {
                                                jp = "基準速度の y 位置。",
                                                pt = "A posição y onde será medida a velocidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x component of velocity at point (x,y).",
                                            descriptiont = {
                                                jp = "地点 (x,y) の x 速度要素。",
                                                pt = "A componente x da velocidade no ponto (x,y)."
                                            },
                                            name = "vx",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of velocity at point (x,y).",
                                            descriptiont = {
                                                jp = "地点 (x,y) の y 速度要素。",
                                                pt = "A componente y da velocidade no ponto (x,y)."
                                            },
                                            name = "vy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the linear velocity of a point on the body.\n\nThe linear velocity for a point on the body is the velocity of the body center of mass plus the velocity at that point from the body spinning.\n\nThe point on the body must given in world coordinates. Use Body:getLinearVelocityFromLocalPoint to specify this with local coordinates.",
                            descriptiont = {
                                jp = "物体の世界地点における線形速度を取得します。\n\n物体にある地点に対する線形速度は物体の中心質量の速度を加えた物体の回転かから地点の速度です。\n\n物体上の地点は必ず世界座標で指定してください。局所座標は Body:getLinearVelocityFromLocalPoint にて指定してください。",
                                pt = "Obtém a velocidade linear de um ponto no Corpo.\n\nA velocidade linear de ponto no Corpo é a velocidade do centro de massa do Corpo mais a velocidade no ponto da rotação do Corpo.\n\nO ponto no Corpo deve estar em coordenadas do Mundo. Use Body:getLinearVelocityFromLocalPoint para especificar em coordenadas local."
                            },
                            minidescriptiont = {
                                jp = "物体の世界地点における線形速度を取得します。",
                                pt = "Obtém a velocidade linear de um ponto no Corpo."
                            },
                            name = "getLinearVelocityFromWorldPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position to measure velocity.",
                                            descriptiont = {
                                                jp = "基準速度の x 位置。",
                                                pt = "A posição x onde será medida a velocidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position to measure velocity.",
                                            descriptiont = {
                                                jp = "基準速度の y 位置。",
                                                pt = "A posição y onde será medida a velocidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x component of velocity at point (x,y).",
                                            descriptiont = {
                                                jp = "地点 (x,y) の x 速度要素。",
                                                pt = "A componente x da velocidade no ponto. (x,y)."
                                            },
                                            name = "vx",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of velocity at point (x,y).",
                                            descriptiont = {
                                                jp = "地点 (x,y) の y 速度要素。",
                                                pt = "A componente y da velocidade no ponto. (x,y)."
                                            },
                                            name = "vy",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the center of mass position in local coordinates.\n\nUse Body:getWorldCenter to get the center of mass in world coordinates.",
                            descriptiont = {
                                jp = "局所座標の中心にある質量の位置を取得します。\n\n世界座標における重心を取得するには Body:getWorldCenter を使用してください。",
                                pt = "Obtém a posição do centro de massa em coordenadas local.\n\nUse Body:getWorldCenter para obter o centro de massa em coordenads do Mundo."
                            },
                            minidescriptiont = {
                                jp = "局所座標の中心にある質量の位置を取得します。",
                                pt = "Obtém a posição do centro de massa em coordenadas local."
                            },
                            name = "getLocalCenter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x coordinate of the center of mass.",
                                            descriptiont = {
                                                jp = "座標の中心にある質量の x 座標。",
                                                pt = "A componente x da coordenada do centro de massa."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the center of mass.",
                                            descriptiont = {
                                                jp = "座標の中心にある質量の y 座標。",
                                                pt = "A componente y da coordenada do centro de massa."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Transform a point from world coordinates to local coordinates.",
                            descriptiont = {
                                jp = "地点を世界座標から局所座標へ変換します。",
                                pt = "Transforma um ponto de coordenadas do Mundo para coordenadas local."
                            },
                            minidescriptiont = {
                                jp = "地点を世界座標から局所座標へ変換します。",
                                pt = "Transform a point from world coordinates to local coordinates."
                            },
                            name = "getLocalPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標における地点の x 要素。",
                                                pt = "A posição x em coordenadas do Mundo."
                                            },
                                            name = "worldX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標における地点の y 要素。",
                                                pt = "A posição y em coordenadas do Mundo."
                                            },
                                            name = "worldY",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x position in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標における地点の x 要素。",
                                                pt = "A posição x em coordenadas local."
                                            },
                                            name = "localX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標における地点の y 要素。",
                                                pt = "A posição y em coordenadas local."
                                            },
                                            name = "localY",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Transform a vector from world coordinates to local coordinates.",
                            descriptiont = {
                                jp = "ベクトルを世界座標から局所座標へ変換します。",
                                pt = "Transforma um vetor de coordenadas do Mundo para coordenadas local."
                            },
                            minidescriptiont = {
                                jp = "ベクトルを世界座標から局所座標へ変換します。",
                                pt = "Transforma um vetor de coordenadas do Mundo para coordenadas local."
                            },
                            name = "getLocalVector",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The vector x component in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標におけるベクトルの x 要素。"
                                            },
                                            name = "worldX",
                                            type = "number"
                                        },
                                        {
                                            description = "The vector y component in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標におけるベクトルの y 要素。"
                                            },
                                            name = "worldY",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The vector x component in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標におけるベクトルの x 要素。"
                                            },
                                            name = "localX",
                                            type = "number"
                                        },
                                        {
                                            description = "The vector y component in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標におけるベクトルの y 要素。"
                                            },
                                            name = "localY",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the mass of the body.",
                            descriptiont = {
                                jp = "物体の質量を取得します。\n\n静的物体の質量は常に 0 です。",
                                pt = "Obtém a massa do corpo."
                            },
                            minidescriptiont = {
                                jp = "物体の質量を取得します。",
                                pt = "Obtém a massa do corpo."
                            },
                            name = "getMass",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The mass of the body (in kilograms).",
                                            descriptiont = {
                                                jp = "物体の質量 (キログラム単位)。",
                                                pt = "A massa do corpo, em kilogramas."
                                            },
                                            name = "mass",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the mass, its center, and the rotational inertia.",
                            descriptiont = {
                                jp = "中心の質量および回転の慣性を返します。"
                            },
                            minidescriptiont = {
                                jp = "中心の質量および回転の慣性を返します。"
                            },
                            name = "getMassData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x position of the center of mass.",
                                            descriptiont = {
                                                jp = "中心の質量にある x 位置。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the center of mass.",
                                            descriptiont = {
                                                jp = "中心の質量にある y 位置。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The mass of the body.",
                                            descriptiont = {
                                                jp = "物体の質量。"
                                            },
                                            name = "mass",
                                            type = "number"
                                        },
                                        {
                                            description = "The rotational inertia.",
                                            descriptiont = {
                                                jp = "回転の慣性。"
                                            },
                                            name = "inertia",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the position of the body.\n\nNote that this may not be the center of mass of the body.",
                            descriptiont = {
                                jp = "物体の位置を取得します。\n\n物体の中心にある質量ではないことに注意してください。",
                                pt = "Obtém a posição do Corpo.\n\nNote que pode não ser o centro de massa do Corpo."
                            },
                            minidescriptiont = {
                                jp = "物体の位置を取得します。",
                                pt = "Obtém a posição do Corpo."
                            },
                            name = "getPosition",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x position.",
                                            descriptiont = {
                                                jp = "x 位置。",
                                                pt = "A posição em x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position.",
                                            descriptiont = {
                                                jp = "y 位置。",
                                                pt = "A posição em y."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the type of the body.",
                            descriptiont = {
                                jp = "物体の種類を返します。"
                            },
                            minidescriptiont = {
                                jp = "物体の種類を返します。"
                            },
                            name = "getType",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The body type.",
                                            descriptiont = {
                                                jp = "物体の種類。"
                                            },
                                            name = "type",
                                            type = "BodyType"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the Lua value associated with this Body.",
                            descriptiont = {
                                jp = "この物体へ関連付けられた Lua の値を返します。"
                            },
                            minidescriptiont = {
                                jp = "この物体へ関連付けられた Lua の値を返します。"
                            },
                            name = "getUserData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Lua value associated with the Body.",
                                            descriptiont = {
                                                jp = "物体へ関連付けられた Lua の値。"
                                            },
                                            name = "value",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the World the body lives in.",
                            descriptiont = {
                                jp = "世界において生存している物体を取得します。"
                            },
                            minidescriptiont = {
                                jp = "世界において生存している物体を取得します。"
                            },
                            name = "getWorld",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The world the body lives in.",
                                            descriptiont = {
                                                jp = "世界において生存している物体。"
                                            },
                                            name = "world",
                                            type = "World"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the center of mass position in world coordinates.\n\nUse Body:getLocalCenter to get the center of mass in local coordinates.",
                            descriptiont = {
                                jp = "世界座標の中心にある質量の位置を取得します。\n\n局所座標における重心を取得するには Body:getLocalCenter を使用してください。",
                                pt = "Obtém a posição do centro de massa nas coordenadas do Mundo.\n\nUse Body:getLocalCenter para obter o centro de massa em coordenadas local."
                            },
                            minidescriptiont = {
                                jp = "世界座標の中心にある質量の位置を取得します。",
                                pt = "Obtém a posição do centro de massa nas coordenadas do Mundo."
                            },
                            name = "getWorldCenter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x coordinate of the center of mass.",
                                            descriptiont = {
                                                jp = "座標の中心にある質量の x 座標。",
                                                pt = "A coordenada x do centro de massa."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the center of mass.",
                                            descriptiont = {
                                                jp = "座標の中心にある質量の y 座標。",
                                                pt = "A coordenada y do centro de massa."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Transform a point from local coordinates to world coordinates.",
                            descriptiont = {
                                jp = "地点を局所座標から世界座標へ変換します。",
                                pt = "Transforma um ponto de coordenadas local para coordenadas do Mundo."
                            },
                            minidescriptiont = {
                                jp = "地点を局所座標から世界座標へ変換します。",
                                pt = "Transforma um ponto de coordenadas local para coordenadas do Mundo."
                            },
                            name = "getWorldPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標における地点の x 要素。",
                                                pt = "A posição em x em coordenadas local."
                                            },
                                            name = "localX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標における地点の y 要素。",
                                                pt = "A posição em y em coordenadas local."
                                            },
                                            name = "localY",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x position in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標における地点の x 要素。",
                                                pt = "A posição em x em coordenadas do Mundo."
                                            },
                                            name = "worldX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標における地点の y 要素。",
                                                pt = "A posição em y em coordenadas do Mundo."
                                            },
                                            name = "worldY",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Transforms multiple points from local coordinates to world coordinates.",
                            descriptiont = {
                                jp = "複数の地点を局所座標から世界座標へ変換します。"
                            },
                            minidescriptiont = {
                                jp = "複数の地点を局所座標から世界座標へ変換します。"
                            },
                            name = "getWorldPoints",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position of the first point.",
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the first point.",
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the second point.",
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the second point.",
                                            name = "y2",
                                            type = "number"
                                        },
                                        {
                                            description = "More x and y points.",
                                            name = "...",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The transformed x position of the first point.",
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The transformed y position of the first point.",
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The transformed x position of the second point.",
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The transformed y position of the second point.",
                                            name = "y2",
                                            type = "number"
                                        },
                                        {
                                            description = "The transformed x and y positions of additional points.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Transform a vector from local coordinates to world coordinates.",
                            descriptiont = {
                                jp = "ベクトルを局所座標から世界座標へ変換します。",
                                pt = "Transforma um vetor de coordenadas local para coordenadas do Mundo."
                            },
                            minidescriptiont = {
                                jp = "ベクトルを局所座標から世界座標へ変換します。",
                                pt = "Transforma um vetor de coordenadas local para coordenadas do Mundo."
                            },
                            name = "getWorldVector",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The vector x component in local coordinates.",
                                            descriptiont = {
                                                jp = "世界座標におけるベクトルの y 要素。",
                                                pt = "A componente em x do vetor em coordenadas local."
                                            },
                                            name = "localX",
                                            type = "number"
                                        },
                                        {
                                            description = "The vector y component in local coordinates.",
                                            descriptiont = {
                                                jp = "局所座標におけるベクトルの y 要素。",
                                                pt = "A componente em y do vetor em coordenadas local."
                                            },
                                            name = "localY",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The vector x component in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標におけるベクトルの x 要素。",
                                                pt = "A componente em x do vetor em coordenadas do Mundo."
                                            },
                                            name = "worldX",
                                            type = "number"
                                        },
                                        {
                                            description = "The vector y component in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標におけるベクトルの y 要素。",
                                                pt = "A componente em y do vetor em coordenadas do Mundo."
                                            },
                                            name = "worldY",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the x position of the body in world coordinates.",
                            descriptiont = {
                                jp = "世界座標にある物体の x 位置を取得します。",
                                pt = "Obtém a posição em x do Corpo em coordenadas do Mundo."
                            },
                            minidescriptiont = {
                                jp = "世界座標にある物体の x 位置を取得します。",
                                pt = "Obtém a posição em x do Corpo em coordenadas do Mundo."
                            },
                            name = "getX",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x position in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標にある x 位置。",
                                                pt = "A posição em x em coordenadas do Mundo."
                                            },
                                            name = "x",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the y position of the body in world coordinates.",
                            descriptiont = {
                                jp = "世界座標にある物体の y 位置を取得します。",
                                pt = "Obtém a posição em y do Corpo em coordenadas do Mundo."
                            },
                            minidescriptiont = {
                                jp = "世界座標にある物体の y 位置を取得します。",
                                pt = "Obtém a posição em y do Corpo em coordenadas do Mundo."
                            },
                            name = "getY",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The y position in world coordinates.",
                                            descriptiont = {
                                                jp = "世界座標にある y 位置。",
                                                pt = "A posição em y em coordenadas do Mundo."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the body is actively used in the simulation.",
                            descriptiont = {
                                jp = "物体が模擬において活動中として使用されているかどうかを返します。"
                            },
                            minidescriptiont = {
                                jp = "物体が模擬において活動中として使用されているかどうかを返します。"
                            },
                            name = "isActive",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the body is active or false if not.",
                                            descriptiont = {
                                                jp = "true ならば物体は活動中ですが、それ以外は false です。"
                                            },
                                            name = "status",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the sleep status of the body.",
                            descriptiont = {
                                jp = "物体の活動休止状態を返します。"
                            },
                            minidescriptiont = {
                                jp = "物体の活動休止状態を返します。"
                            },
                            name = "isAwake",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the body is awake or false if not.",
                                            descriptiont = {
                                                jp = "true ならば物体は覚醒しており、それ以外は false です。"
                                            },
                                            name = "status",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the bullet status of a body.\n\nThere are two methods to check for body collisions:\n\nat their location when the world is updated (default)\n\nusing continuous collision detection (CCD)\n\nThe default method is efficient, but a body moving very quickly may sometimes jump over another body without producing a collision. A body that is set as a bullet will use CCD. This is less efficient, but is guaranteed not to jump when moving quickly.\n\nNote that static bodies (with zero mass) always use CCD, so your walls will not let a fast moving body pass through even if it is not a bullet.",
                            descriptiont = {
                                jp = "物体の弾丸状態を取得します。\n\n物体の衝突を確認する方法は二種類あります：\n\n* 世界更新時の位置 (標準)\n\n* 連続的な衝突検出 ('''C'''ontinuous '''C'''ollision '''D'''etection: CCD) の使用。\n\n標準の方法は効率的ですが、非常に高速度移動する物体は時々に衝突生成を行わず別の物体上を通過する場合があります。弾丸として設定される物体は CCD を使用します。これは非効的率ですが、高速移動時に通過しないことが保証されます。\n\n静的物体(質量 0)は常に CCD を使用しているため、従って弾丸でなくても壁を高速移動している物体を通過しないことに注意してください。",
                                pt = "Obtém o estado de '''projétil''' do Corpo.\n\nExistem dois métodos para verificar por uma colisão do Corpo:\n\n*  em sua localização quando o mundo é atualizado (padrão)\n\n*  usando a detecção contínua de colisão (CCD - continuous collision detection)\n\nO método padrão é eficiente, mas um Corpo que se move rapidamente pode, algumas vezes, pular sobre outro Corpo sem produzir a colisão. Um corpo que é configurado como projétil irá usar CCD. Esse é menos eficiente, mas é garantido que o Corpo não pulará sobre outro quando em movimento rápido.\n\nNote que Corpos estáticos (com massa zero) sempre usam CCD, então paredes não permitiram que Corpos que se movem rapidamente atravessem, mesmo se eles não forem projéteis."
                            },
                            minidescriptiont = {
                                jp = "物体の弾丸状態を取得します。",
                                pt = "Obtém o estado de '''projétil''' do Corpo."
                            },
                            name = "isBullet",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The bullet status of the body.",
                                            descriptiont = {
                                                jp = "物体の弾丸状態。",
                                                pt = "O estado de projétil do Corpo."
                                            },
                                            name = "status",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Body is destroyed. Destroyed bodies cannot be used.",
                            descriptiont = {
                                jp = "物体が破棄されたかどうかを取得します。破棄された物体は再利用できません。"
                            },
                            minidescriptiont = {
                                jp = "物体が破棄されたかどうかを取得します。"
                            },
                            name = "isDestroyed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether the Body is destroyed.",
                                            descriptiont = {
                                                jp = "物体が破棄されたかどうか。"
                                            },
                                            name = "destroyed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the body rotation is locked.",
                            descriptiont = {
                                jp = "物体の回転が固定されているかどうか返します。"
                            },
                            minidescriptiont = {
                                jp = "物体の回転が固定されているかどうか返します。"
                            },
                            name = "isFixedRotation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the body's rotation is locked or false if not.",
                                            descriptiont = {
                                                jp = "true ならば物体の回転は固定されており、それ以外は false です。"
                                            },
                                            name = "fixed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the sleeping behaviour of the body.",
                            descriptiont = {
                                jp = "休止を行う物体の性質を取得します。"
                            },
                            minidescriptiont = {
                                jp = "休止を行う物体の性質を取得します。"
                            },
                            name = "isSleepingAllowed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the body is allowed to sleep or false if not.",
                                            descriptiont = {
                                                jp = "true ならば物体の休止は許可されており、それ以外は false です。"
                                            },
                                            name = "status",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Resets the mass of the body by recalculating it from the mass properties of the fixtures.",
                            descriptiont = {
                                jp = "取付具の質量特性から再計算を行うことにより物体の質量を初期設定へ戻します。"
                            },
                            minidescriptiont = {
                                jp = "物体の質量を初期設定へ戻します。"
                            },
                            name = "resetMassData",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Sets whether the body is active in the world.\n\nAn inactive body does not take part in the simulation. It will not move or cause any collisions.",
                            descriptiont = {
                                jp = "世界において物体が活動するかどうかを設定します。\n\n不活性の物体に対して模擬を行いません。さらに不動であり衝突を行いません。"
                            },
                            minidescriptiont = {
                                jp = "世界において物体が活動するかどうかを設定します。"
                            },
                            name = "setActive",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "If the body is active or not.",
                                            descriptiont = {
                                                jp = "物体を活動させるか否か。"
                                            },
                                            name = "active",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the angle of the body.\n\nThe angle is measured in radians. If you need to transform it from degrees, use math.rad.\n\nA value of 0 radians will mean \"looking to the right\". Although radians increase counter-clockwise, the y-axis points down so it becomes clockwise from our point of view.\n\nIt is possible to cause a collision with another body by changing its angle.",
                            descriptiont = {
                                jp = "物体の角度を設定します。\n\n角度は 弧度により計測されます。 次数を変形する必要がある場合は、 math.deg を使用してください。\n\n弧度の値が 0 のときは&amp;quot;右側に面している&amp;quot;ことを意味します。弧度は左回りに増進しますが、人間の視点から見て''右回り''になるようにするためには Y 軸の下を指します。\n\n角度を変更することにより別の物体と衝突させることができます。",
                                pt = "Configura o ângulo do Corpo.\n\nO ângulo é medido emradianos. Se for necessário transformar de graus, use math.rad.\n\nO valor de 0 radianos significa \"olhando para a direita\". Apesar de radianos aumentar no sentido anti-horário, os pontos no eixo y descem conforme tornasse ''horário'' de nosso ponto de vista.\n\nÉ possível que uma colisão com outro Corpo ocorra quando de alterações de ãngulos."
                            },
                            minidescriptiont = {
                                jp = "物体の角度を設定します。",
                                pt = "Configura o ângulo do Corpo."
                            },
                            name = "setAngle",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The angle in radians.",
                                            descriptiont = {
                                                jp = "弧度による角度。",
                                                pt = "O ângulo, em radianos."
                                            },
                                            name = "angle",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the angular damping of a Body.\n\nSee Body:getAngularDamping for a definition of angular damping.\n\nAngular damping can take any value from 0 to infinity. It is recommended to stay between 0 and 0.1, though. Other values will look unrealistic.",
                            descriptiont = {
                                jp = "物体の傾斜減衰を設定します。\n\n傾斜減衰の定義については Body:getAngularDamping を参照してください。\n\n傾斜減衰は 0 から無限大の任意の値にすることができます。しかし、 0 および 0.1 までの間にすることが推奨されます。その他の値は非現実的な様子になるでしょう。",
                                pt = "Configura o amortecimento angular do Corpo.\n\nVeja Body:getAngularDamping para a definição de amortecimento angular.\n\nAmortecimento angular pode ter valores de 0 até infinito. Entretanto recomendasse que esteja entre 0 e 0.1. Outros valores não darão a impressão de realidade."
                            },
                            minidescriptiont = {
                                jp = "物体の傾斜減衰を設定します。",
                                pt = "Configura o amortecimento angular do Corpo."
                            },
                            name = "setAngularDamping",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new angular damping.",
                                            descriptiont = {
                                                jp = "新規の傾斜減衰。",
                                                pt = "O novo amortecimento angular."
                                            },
                                            name = "damping",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the angular velocity of a Body.\n\nThe angular velocity is the rate of change of angle over time.\n\nThis function will not accumulate anything; any impulses previously applied since the last call to World:update will be lost.",
                            descriptiont = {
                                jp = "物体の角速度を設定します。\n\n角速度とは''時間経過後の角度における変動率''です。\n\nこの関数は一切の蓄積を行いません。以前の World:update の呼び出しにより適用された一切の力積は破棄されます。",
                                pt = "Configura a velocidade angular do Corpo.\n\nA velocidade angular é a ''taxa de alteração do ângulo em função do tempo''.\n\nEsta função não acumulará nada; qualquer impulso previamente aplicado desde a última chamada de World:updata será perdida."
                            },
                            minidescriptiont = {
                                jp = "物体の角速度を設定します。",
                                pt = "Configura a velocidade angular do Corpo."
                            },
                            name = "setAngularVelocity",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new angular velocity, in radians per second",
                                            descriptiont = {
                                                jp = "一秒当たりの弧度単位による新規角速度。",
                                                pt = "A nova velocidade angular, em radianos/segundos."
                                            },
                                            name = "w",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Wakes the body up or puts it to sleep.",
                            descriptiont = {
                                jp = "物体の覚醒または休止します。"
                            },
                            minidescriptiont = {
                                jp = "物体の覚醒または休止します。"
                            },
                            name = "setAwake",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The body sleep status.",
                                            descriptiont = {
                                                jp = "物体の休止状態。"
                                            },
                                            name = "awake",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the bullet status of a body.\n\nThere are two methods to check for body collisions:\n\nat their location when the world is updated (default)\n\nusing continuous collision detection (CCD)\n\nThe default method is efficient, but a body moving very quickly may sometimes jump over another body without producing a collision. A body that is set as a bullet will use CCD. This is less efficient, but is guaranteed not to jump when moving quickly.\n\nNote that static bodies (with zero mass) always use CCD, so your walls will not let a fast moving body pass through even if it is not a bullet.",
                            descriptiont = {
                                jp = "物体の弾丸状態を設定します。\n\n物体の衝突を確認する方法は二種類あります：\n\n* 世界更新時の位置 (標準)\n\n* 連続的な衝突検出 ('''C'''ontinuous '''C'''ollision '''D'''etection: CCD) の使用。\n\n標準の方法は効率的ですが、非常に高速度移動する物体は時々に衝突生成を行わず別の物体上を通過する場合があります。弾丸として設定される物体は CCD を使用します。これは非効的率ですが、高速移動時に通過しないことが保証されます。\n\n静的物体 (質量 0) は常に CCD を使用しているため、従って弾丸でなくても壁を高速移動している物体を通過しないことに注意してください。",
                                pt = "Configura o estado de '''projétil''' do Corpo.\n\nExistem dois métodos para verificar por uma colisão do Corpo:\n\n* em sua localização quando o mundo é atualizado (padrão)\n\n* usando a detecção contínua de colisão (CCD - continuous collision detection)\n\nO método padrão é eficiente, mas um Corpo que se move rapidamente pode, algumas vezes, pular sobre outro Corpo sem produzir a colisão. Um corpo que é configurado como projétil irá usar CCD. Esse é menos eficiente, mas é garantido que o Corpo não pulará sobre outro quando em movimento rápido.\n\nNote que Corpos estáticos (com massa zero) sempre usam CCD, então paredes não permitiram que Corpos que se movem rapidamente atravessem, mesmo se eles não forem projéteis."
                            },
                            minidescriptiont = {
                                jp = "物体の弾丸状態を設定します。",
                                pt = "Configura o estado de '''projétil''' do Corpo."
                            },
                            name = "setBullet",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The bullet status of the body.",
                                            descriptiont = {
                                                jp = "物体の弾丸状態。",
                                                pt = "O estado de projétil do Corpo."
                                            },
                                            name = "status",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set whether a body has fixed rotation.\n\nBodies with fixed rotation don't vary the speed at which they rotate.",
                            descriptiont = {
                                jp = "物体の回転を固定するかどうか設定します。\n\n回転が固定された物体において回転速度は変動しません。\n\n警告: LÖVE 0.6.2 では、この関数の引数が false にて呼ばれたときに不具合があります。",
                                pt = "Configura se o Corpo tem uma rotação constante.\n\nCorpos com rotação constante não variam a velocidade quando eles rotacionam.\n\nAVISO: LÖVE 0.6.2 não tem a correção para a falha desta função quando é chamada com o argumento false."
                            },
                            minidescriptiont = {
                                jp = "物体の回転を固定するかどうか設定します。",
                                pt = "Configura se o Corpo tem uma rotação constante."
                            },
                            name = "setFixedRotation",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Whether the body should have fixed rotation.",
                                            descriptiont = {
                                                jp = "物体の回転を固定するかどうか。",
                                                pt = "Se o Corpo tem rotação constante."
                                            },
                                            name = "fixed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new gravity scale factor for the body.",
                            descriptiont = {
                                jp = "物体に対する新しい重力規模係数を設定します。"
                            },
                            minidescriptiont = {
                                jp = "物体に対する新しい重力規模係数を設定します。"
                            },
                            name = "setGravityScale",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new gravity scale factor.",
                                            descriptiont = {
                                                jp = "新しい重力規模係数を設定。"
                                            },
                                            name = "scale",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the inertia of a body.",
                            descriptiont = {
                                jp = "物体の慣性を設定します。\n\nこの値は Body:setMass の第四引数でも設定できます(LOVE 0.8.0 以前のみ)。",
                                pt = "Configura a inércia do Corpo.\n\nEsse valor pode também ser configurado como o quarto argumento de Body:setMass."
                            },
                            minidescriptiont = {
                                jp = "物体の慣性を設定します。",
                                pt = "Configura a inércia do Corpo."
                            },
                            name = "setInertia",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new moment of inertia, in kilograms per meter squared.",
                                            descriptiont = {
                                                jp = "キログラム単位 × 一平方ピクセルによる新規の慣性モーメント。",
                                                pt = "O novo momento de inércia, em kilograma por metro quadrado."
                                            },
                                            name = "inertia",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the linear damping of a Body\n\nSee Body:getLinearDamping for a definition of linear damping.\n\nLinear damping can take any value from 0 to infinity. It is recommended to stay between 0 and 0.1, though. Other values will make the objects look \"floaty\".",
                            descriptiont = {
                                jp = "物体の線形減衰を設定します。\n\n線形減衰の定義については Body:getLinearDamping を参照してください。\n\n線形減衰は 0 から無限大の値を扱うことができます。しかし、 0 から 0.1 までの間に止めておくことが推奨されます。その他の値はオブジェクトが \"浮かんだ\" ように見えるでしょう (重力が有効であれば)。",
                                pt = "Configura o amortecimento linear do Corpo.\n\nVeja Body:getLinearDamping para a definição de amortecimento linear.\n\nO amortecimento linear pode ser qualquer valor entre 0 e infinito. Entretanto é recomendado que esteja entre 0 e 0.1. Outros valores irão fazer os objetos parecerem \"flutuar\"."
                            },
                            minidescriptiont = {
                                jp = "物体の線形減衰を設定します。",
                                pt = "Configura o amortecimento linear do Corpo."
                            },
                            name = "setLinearDamping",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new linear damping.",
                                            descriptiont = {
                                                jp = "物体の新規線形減衰。",
                                                pt = "O novo amortecimento linear."
                                            },
                                            name = "ld",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new linear velocity for the Body.\n\nThis function will not accumulate anything; any impulses previously applied since the last call to World:update will be lost.",
                            descriptiont = {
                                jp = "物体に対する線形速度を新規設定します。\n\nこの関数は一切の蓄積を行いません。以前の World:update の最後の呼び出しにより適用された一切の力積は破棄されます。",
                                pt = "Configura a nova velocidade linear para o Corpo.\n\nEsta função não acumula nada ; qualquer impulso aplicado anteriormente desde a última chamada de World:update será perdido."
                            },
                            minidescriptiont = {
                                jp = "物体に対する線形速度を新規設定します。",
                                pt = "Configura a nova velocidade linear para o Corpo."
                            },
                            name = "setLinearVelocity",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the velocity vector.",
                                            descriptiont = {
                                                jp = "速度ベクトルの x 要素。",
                                                pt = "A componente x do vetor velocidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the velocity vector.",
                                            descriptiont = {
                                                jp = "速度ベクトルの y 要素。",
                                                pt = "A componente y do vetor velocidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the mass in kilograms.",
                            descriptiont = {
                                jp = "物体の質量を新規設定します。",
                                pt = "Configura diretamente as propriedade de massa.\n\nSe você não tem certeza o que isto significa, você pode usar Body:setMassFromShapes depois de adicionar um Formas. \n\nOs primeiros dois parâmetros serão as coordenadas local do  centro de massa do Corpo.\n\nO terceiro parâmetro é a massa, em kilogramas.\n\nO último parâmetro é a rotação inercial. "
                            },
                            minidescriptiont = {
                                jp = "質量特性を直接設定します。",
                                pt = "Configura diretamente as propriedade de massa."
                            },
                            name = "setMass",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The mass, in kilograms.",
                                            descriptiont = {
                                                jp = "キログラム単位による質量。"
                                            },
                                            name = "mass",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Overrides the calculated mass data.",
                            descriptiont = {
                                jp = "計算された質量データをオーバーライド(上書き)します。"
                            },
                            minidescriptiont = {
                                jp = "\n計算された質量データをオーバーライドします。"
                            },
                            name = "setMassData",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the center of mass in local coordinates.",
                                            descriptiont = {
                                                jp = "中心の質量にある x 位置。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the center of mass in local coordinates.",
                                            descriptiont = {
                                                jp = "中心の質量にある y 位置。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The mass, in kilograms.",
                                            descriptiont = {
                                                jp = "物体の質量。"
                                            },
                                            name = "mass",
                                            type = "number"
                                        },
                                        {
                                            description = "The rotational inertia, in kilograms per squared meter.",
                                            descriptiont = {
                                                jp = "回転の慣性。"
                                            },
                                            name = "inertia",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the position of the body.\n\nNote that this may not be the center of mass of the body.",
                            descriptiont = {
                                jp = "物体の位置を設定します。\n\nこれは物体の中心にある質量ではないことに注意してください。\n\nこの関数では物体を起こすことはできません。",
                                pt = "Configura a posição do Corpo.\n\nNote que ela pode não ser o centro de massa do Corpo."
                            },
                            minidescriptiont = {
                                jp = "物体の位置を設定します。",
                                pt = "Configura a posição do Corpo."
                            },
                            name = "setPosition",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position.",
                                            descriptiont = {
                                                jp = "x 座標。",
                                                pt = "A posição em x."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position.",
                                            descriptiont = {
                                                jp = "y 座標。",
                                                pt = "A posição em y."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the sleeping behaviour of the body.",
                            descriptiont = {
                                jp = "物体の活動休止について設定します。休止が許可されるならば、物体は自動的に休止します。休止中の物体は衝突して物体が覚醒しない限り模擬を行いません。床面が除去された場合は浮動している休止中の物体のような状態では終了できることに用心してください。"
                            },
                            minidescriptiont = {
                                jp = "物体の活動休止について設定します。"
                            },
                            name = "setSleepingAllowed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True if the body is allowed to sleep or false if not.",
                                            descriptiont = {
                                                jp = "true ならば物体の休止を許可しますが、それ以外は false です。"
                                            },
                                            name = "allowed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new body type.",
                            descriptiont = {
                                jp = "新しい物体の種類を設定します。"
                            },
                            minidescriptiont = {
                                jp = "新しい物体の種類を設定します。"
                            },
                            name = "setType",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new type.",
                                            descriptiont = {
                                                jp = "物体の種類。"
                                            },
                                            name = "type",
                                            type = "BodyType"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Associates a Lua value with the Body.\n\nTo delete the reference, explicitly pass nil.",
                            descriptiont = {
                                jp = "物体へ Lua の値を関連付けます。\n\n参照を削除するには、明示的に nil を渡してください。"
                            },
                            minidescriptiont = {
                                jp = "物体へ Lua の値を関連付けます。"
                            },
                            name = "setUserData",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The Lua value to associate with the Body.",
                                            descriptiont = {
                                                jp = "物体へ関連付ける Lua の値。"
                                            },
                                            name = "value",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the x position of the body.",
                            descriptiont = {
                                jp = "物体の x 位置を設定します。\n\nこの関数では物体を起こすことができません。",
                                pt = "Configura a posição em x do Corpo."
                            },
                            minidescriptiont = {
                                jp = "物体の x 位置を設定します。",
                                pt = "Configura a posição em x do Corpo."
                            },
                            name = "setX",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position.",
                                            descriptiont = {
                                                jp = "物体の x 位置。",
                                                pt = "A posição em x."
                                            },
                                            name = "x",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the y position of the body.",
                            descriptiont = {
                                jp = "物体の y 位置を設定します。\n\nこの関数では物体を起こすことができません。",
                                pt = "Configura a posição em y do Corpo."
                            },
                            minidescriptiont = {
                                jp = "物体の y 位置を設定します。",
                                pt = "Configura a posição em y do Corpo."
                            },
                            name = "setY",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The y position.",
                                            descriptiont = {
                                                jp = "物体の y 位置。",
                                                pt = "A posição em y."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Corpos são objetos com velocidade e posição."
                    },
                    name = "Body",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newChainShape"
                    },
                    description = "A ChainShape consists of multiple line segments. It can be used to create the boundaries of your terrain. The shape does not have volume and can only collide with PolygonShape and CircleShape.\n\nUnlike the PolygonShape, the ChainShape does not have a vertices limit or has to form a convex shape, but self intersections are not supported.",
                    descriptiont = {
                        jp = "ChainShape は複数の線分から構成されています。これは地形の境界を作成するために使用することができます。形状には体積がなく PolygonShape および CircleShape のみ衝突することができます。\n\nPolygonShape とは異なり ChainShape には頂点の制限がないか凸面の形状である必要がありますが、自己交差には非対応です。"
                    },
                    functions = {
                        {
                            description = "Returns a child of the shape as an EdgeShape.",
                            descriptiont = {
                                jp = "EdgeShape として形状の子を返します。"
                            },
                            minidescriptiont = {
                                jp = "EdgeShape として形状の子を返します。"
                            },
                            name = "getChildEdge",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the child.",
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The child as an EdgeShape.",
                                            name = "EdgeShape",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the vertex that establishes a connection to the next shape.\n\nSetting next and previous ChainShape vertices can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "次の形状と接続を設置している頂点を取得します。\n\n次および前の ChainShape に対する頂点を設定することは、平面の形状が角に沿って移動する時、および新しい形状へ移動する時に、希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "次の形状と接続を設置している頂点を取得します。"
                            },
                            name = "getNextVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "nil",
                                            description = "The x-component of the vertex, or nil if ChainShape:setNextVertex hasn't been called.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            default = "nil",
                                            description = "The y-component of the vertex, or nil if ChainShape:setNextVertex hasn't been called.",
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns a point of the shape.",
                            descriptiont = {
                                jp = "形状の地点を返します。"
                            },
                            minidescriptiont = {
                                jp = "形状の地点を返します。"
                            },
                            name = "getPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The index of the point to return.",
                                            descriptiont = {
                                                jp = "返された地点の索引。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x-coordinate of the point.",
                                            descriptiont = {
                                                jp = "地点 x の座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-coordinate of the point.",
                                            descriptiont = {
                                                jp = "地点 y の座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns all points of the shape.",
                            descriptiont = {
                                jp = "形状における全ての地点を返します。"
                            },
                            minidescriptiont = {
                                jp = "形状における全ての地点を返します。"
                            },
                            name = "getPoints",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x-coordinate of the first point.",
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-coordinate of the first point.",
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x-coordinate of the second point.",
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-coordinate of the second point.",
                                            name = "y2",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional x and y values.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the vertex that establishes a connection to the previous shape.\n\nSetting next and previous ChainShape vertices can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "前の形状と接続を設置している頂点を取得します。\n\n次および前の ChainShape に対する頂点を設定することは、平面の形状が角に沿って移動する時、および新しい形状へ移動する時に、希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "前の形状と接続を設置している頂点を取得します。"
                            },
                            name = "getPreviousVertex",
                            variants = {
                                {
                                    returns = {
                                        {
                                            default = "nil",
                                            description = "The x-component of the vertex, or nil if ChainShape:setNextVertex hasn't been called.",
                                            descriptiont = {
                                                jp = "頂点の x 要素、または ChainShape:setPreviousVertex が呼び出されていない場合は nil です。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            default = "nil",
                                            description = "The y-component of the vertex, or nil if ChainShape:setNextVertex hasn't been called.",
                                            descriptiont = {
                                                jp = "頂点の y 要素、または ChainShape:setPreviousVertex が呼び出されていない場合は nil です。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the number of vertices the shape has.",
                            descriptiont = {
                                jp = "形状が保持している頂点の数を返します。"
                            },
                            minidescriptiont = {
                                jp = "形状が保持している頂点の数を返します。"
                            },
                            name = "getVertexCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of vertices.",
                                            descriptiont = {
                                                jp = "頂点の数。"
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a vertex that establishes a connection to the next shape.\n\nThis can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "次の形状へ接続を設置するために頂点を設定します。\n\nこれは平面の形状が角に沿って移動する時、および新しい形状の間を移動する時に希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "次の形状へ接続を設置するために頂点を設定します。"
                            },
                            name = "setNextVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a vertex that establishes a connection to the previous shape.\n\nThis can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "前の形状へ接続を設置するために頂点を設定します。\n\nこれは平面の形状が角に沿って移動および新しい形状の間を移動するときに希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "前の形状へ接続を設置するために頂点を設定します。"
                            },
                            name = "setPreviousVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "ChainShape",
                    parenttype = "Shape",
                    supertypes = {
                        "Shape",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newCircleShape"
                    },
                    description = "Circle extends Shape and adds a radius and a local position.",
                    descriptiont = {
                        jp = "円形は形状を拡張して半径および局所座標を追加します。",
                        pt = "Círculo estende Forma e adiciona um raio e a posição local.\n\nCria-se uma nova Forma Círculo com love.physics.newCircleShape.",
                        ru = "Форма в виде окружности, с определенным радиусом и локальными координатами.\n\nСоздать окружность можно с помощью функции love.physics.newCircleShape."
                    },
                    functions = {
                        {
                            description = "Gets the center point of the circle shape.",
                            descriptiont = {
                                jp = "円形の中心点を取得します。"
                            },
                            minidescriptiont = {
                                jp = "円形の中心点を取得します。"
                            },
                            name = "getPoint",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x-component of the center point of the circle.",
                                            descriptiont = {
                                                jp = "円形の中心点における x-要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-component of the center point of the circle.",
                                            descriptiont = {
                                                jp = "円形の中心点における y-要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the radius of the circle shape.",
                            descriptiont = {
                                jp = "円の半径を取得します。",
                                pt = "Obtém o raio de um círculo."
                            },
                            minidescriptiont = {
                                jp = "円の半径を取得します。",
                                pt = "Obtém o raio de um círculo."
                            },
                            name = "getRadius",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The radius of the circle.",
                                            descriptiont = {
                                                jp = "円の半径。",
                                                pt = "O raio do círculo."
                                            },
                                            name = "radius",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the location of the center of the circle shape.",
                            descriptiont = {
                                jp = "円形の中心位置を設定します。"
                            },
                            minidescriptiont = {
                                jp = "円形の中心位置を設定します。"
                            },
                            name = "setPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x-component of the new center point of the circle.",
                                            descriptiont = {
                                                jp = "円形の中心点における新規 x-要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-component of the new center point of the circle.",
                                            descriptiont = {
                                                jp = "円形の中心点における新規 y-要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the radius of the circle.",
                            descriptiont = {
                                jp = "円の半径を設定します。"
                            },
                            minidescriptiont = {
                                jp = "円の半径を設定します。"
                            },
                            name = "setRadius",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The radius of the circle.",
                                            descriptiont = {
                                                jp = "円の半径。"
                                            },
                                            name = "radius",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Círculo estende Forma e adiciona um raio e a posição local."
                    },
                    name = "CircleShape",
                    parenttype = "Shape",
                    supertypes = {
                        "Shape",
                        "Object"
                    }
                },
                {
                    description = "Contacts are objects created to manage collisions in worlds.",
                    descriptiont = {
                        de = "Kontakte sind Objekte, welche Kollisionen in einer Welt handhaben.",
                        jp = "接点は世界において作成されたオブジェクトの衝突を管理します。",
                        pt = "Contatos são objetos criados para gerenciar as colisões no mundo.",
                        ru = "Контакты объектов нужны для управления пересечениями объектов."
                    },
                    functions = {
                        {
                            description = "Gets the two Fixtures that hold the shapes that are in contact.",
                            descriptiont = {
                                jp = "接点の形状が保持する二つの取付具を取得します。"
                            },
                            minidescriptiont = {
                                jp = "接点の形状が保持する二つの取付具を取得します。"
                            },
                            name = "getFixtures",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The first Fixture.",
                                            descriptiont = {
                                                jp = "第一取付具。"
                                            },
                                            name = "fixtureA",
                                            type = "Fixture"
                                        },
                                        {
                                            description = "The second Fixture.",
                                            descriptiont = {
                                                jp = "第二取付具。"
                                            },
                                            name = "fixtureB",
                                            type = "Fixture"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the friction between two shapes that are in contact.",
                            descriptiont = {
                                jp = "二つの形状間における接点の摩擦を取得します。",
                                pt = "Obtém a fricção entre duas formas que estão em contato."
                            },
                            minidescriptiont = {
                                jp = "二つの形状間における接点の摩擦を取得します。",
                                pt = "Obtém a fricção entre duas formas que estão em contato."
                            },
                            name = "getFriction",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The friction of the contact.",
                                            descriptiont = {
                                                jp = "接点の摩擦。",
                                                pt = "A fricção do contato."
                                            },
                                            name = "friction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the normal vector between two shapes that are in contact.\n\nThis function returns the coordinates of a unit vector that points from the first shape to the second.",
                            descriptiont = {
                                jp = "二つの形状間における接点の通常ベクトルを取得します。\n\nこの関数は第一から第二までの形状における地点のベクトル単位の座標を返します。",
                                pt = "Obtém o vetor normal entre duas formas que estão em contato.\n\nEsta função retorna as coordenadas do vetor unitário que aponta da primeira forma para a segunda."
                            },
                            minidescriptiont = {
                                jp = "二つの形状間における接点の通常ベクトルを取得します。",
                                pt = "Obtém o vetor normal entre duas formas que estão em contato."
                            },
                            name = "getNormal",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the normal vector.",
                                            descriptiont = {
                                                jp = "通常ベクトルの x 要素。",
                                                pt = "A componente x do vetor normal."
                                            },
                                            name = "nx",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the normal vector.",
                                            descriptiont = {
                                                jp = "通常ベクトルの y 要素。",
                                                pt = "A componente y do vetor normal."
                                            },
                                            name = "ny",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the contact points of the two colliding fixtures. There can be one or two points.",
                            descriptiont = {
                                jp = "二つの取付具の衝突における接点の地点を返します。点は一つまたは二つです。"
                            },
                            minidescriptiont = {
                                jp = "二つの取付具の衝突における接点の地点を返します。"
                            },
                            name = "getPositions",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x coordinate of the first contact point. ",
                                            descriptiont = {
                                                jp = "一番目の接点における x 座標。"
                                            },
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the first contact point.",
                                            descriptiont = {
                                                jp = "一番目の接点における y 座標。"
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x coordinate of the second contact point.",
                                            descriptiont = {
                                                jp = "二番目の接点における x 座標。"
                                            },
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the second contact point.",
                                            descriptiont = {
                                                jp = "二番目の接点における y 座標。"
                                            },
                                            name = "y2",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the restitution between two shapes that are in contact.",
                            descriptiont = {
                                jp = "二つの形状間における接点の復元を取得します。",
                                pt = "Obtém a devolução entre duas formas que estão em contato."
                            },
                            minidescriptiont = {
                                jp = "二つの形状間における接点の復元を取得します。",
                                pt = "Obtém a devolução entre duas formas que estão em contato."
                            },
                            name = "getRestitution",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The restitution between the two shapes.",
                                            descriptiont = {
                                                jp = "二つの形状間における接点の復元。",
                                                pt = "A devolução entre duas formas."
                                            },
                                            name = "restitution",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the contact is enabled. The collision will be ignored if a contact gets disabled in the preSolve callback.",
                            descriptiont = {
                                jp = "接点が有効かどうか返します。preSolve (事前解決) コールバックにおいて取得する接点が無効であるならば衝突は無視されます。"
                            },
                            minidescriptiont = {
                                jp = "接点が有効かどうか返します。"
                            },
                            name = "isEnabled",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if enabled, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならば有効、それ以外は false です。"
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the two colliding fixtures are touching each other.",
                            descriptiont = {
                                jp = "二つの取付具の衝突において互いに接触しているかどうか返します。"
                            },
                            minidescriptiont = {
                                jp = "二つの取付具の衝突において互いに接触しているかどうか返します。"
                            },
                            name = "isTouching",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if they touch or false if not.",
                                            descriptiont = {
                                                jp = "true ならば接触しており、それ以外は false です。"
                                            },
                                            name = "touching",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Resets the contact friction to the mixture value of both fixtures.",
                            descriptiont = {
                                jp = "二つの取付具の混合値における接点摩擦を破棄して初期設定に戻します。"
                            },
                            minidescriptiont = {
                                jp = "二つの取付具の混合値における接点摩擦を破棄して初期設定に戻します。"
                            },
                            name = "resetFriction",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Resets the contact restitution to the mixture value of both fixtures.",
                            descriptiont = {
                                jp = "二つの取付具の混合値における接点の復元を破棄して初期設定に戻します。"
                            },
                            minidescriptiont = {
                                jp = "二つの取付具の混合値における接点の復元を破棄して初期設定に戻します。"
                            },
                            name = "resetRestitution",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Enables or disables the contact.",
                            descriptiont = {
                                jp = "接点を無効または有効にします。"
                            },
                            minidescriptiont = {
                                jp = "接点を無効または有効にします。"
                            },
                            name = "setEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True to enable or false to disable.",
                                            descriptiont = {
                                                jp = "true ならば有効または false ならば無効です。"
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the contact friction.",
                            descriptiont = {
                                jp = "接点の摩擦を設定します。"
                            },
                            minidescriptiont = {
                                jp = "接点の摩擦を設定します。"
                            },
                            name = "setFriction",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The contact friction.",
                                            descriptiont = {
                                                jp = "接点の摩擦。"
                                            },
                                            name = "friction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the contact restitution.",
                            descriptiont = {
                                jp = "接点の復元を設定します。"
                            },
                            minidescriptiont = {
                                jp = "接点の復元を設定します。"
                            },
                            name = "setRestitution",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The contact restitution.",
                                            descriptiont = {
                                                jp = "接点の復元。"
                                            },
                                            name = "restitution",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Contatos são objetos criados para gerenciar as colisões no mundo."
                    },
                    name = "Contact",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newEdgeShape"
                    },
                    description = "A EdgeShape is a line segment. They can be used to create the boundaries of your terrain. The shape does not have volume and can only collide with PolygonShape and CircleShape.",
                    descriptiont = {
                        jp = "EdgeShape は線分です。地形へ境界を作成するために使用できます。形状は体積が存在せず PolygonShape および CircleShape のみと衝突することができます。"
                    },
                    functions = {
                        {
                            description = "Returns the local coordinates of the edge points.",
                            descriptiont = {
                                jp = "角地点の局所座標を返します。"
                            },
                            minidescriptiont = {
                                jp = "角地点の局所座標を返します。"
                            },
                            name = "getPoints",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the first vertex.",
                                            descriptiont = {
                                                jp = "第一頂点の x 要素。"
                                            },
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the first vertex.",
                                            descriptiont = {
                                                jp = "第一頂点の y 要素。"
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x component of the second vertex.",
                                            descriptiont = {
                                                jp = "第二頂点の x 要素。"
                                            },
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the second vertex.",
                                            descriptiont = {
                                                jp = "第二頂点の y 要素。"
                                            },
                                            name = "y2",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the vertex that establishes a connection to the next shape.\n\nSetting next and previous EdgeShape vertices can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "次の形状と接続を設置している頂点を取得します。\n\n次および前の EdgeShape に対する頂点を設定することは、平面の形状が角に沿って移動する時、および新しい形状へ移動する時に、希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "次の形状と接続を設置している頂点を取得します。"
                            },
                            name = "getNextVertex",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x-component of the vertex, or nil if EdgeShape:setNextVertex hasn't been called.",
                                            descriptiont = {
                                                jp = "頂点の x 要素、または EdgeShape:setNextVertex が呼び出されていない場合は nil です。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-component of the vertex, or nil if EdgeShape:setNextVertex hasn't been called.",
                                            descriptiont = {
                                                jp = "頂点の y 要素、または EdgeShape:setNextVertex が呼び出されていない場合は nil です。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the vertex that establishes a connection to the previous shape.\n\nSetting next and previous EdgeShape vertices can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "前の形状と接続を設置している頂点を取得します。\n\n次および前の EdgeShape に対する頂点を設定することは、平面の形状が角に沿って移動する時、および新しい形状へ移動する時に、希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "前の形状と接続を設置している頂点を取得します。"
                            },
                            name = "getPreviousVertex",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x-component of the vertex, or nil if EdgeShape:setPreviousVertex hasn't been called.",
                                            descriptiont = {
                                                jp = "頂点の x 要素、または EdgeShape:setPreviousVertex が呼び出されていない場合は nil です。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-component of the vertex, or nil if EdgeShape:setPreviousVertex hasn't been called.",
                                            descriptiont = {
                                                jp = "頂点の y 要素、または EdgeShape:setPreviousVertex が呼び出されていない場合は nil です。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a vertex that establishes a connection to the next shape.\n\nThis can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "次の形状へ接続を設置するために頂点を設定します。\n\nこれは平面の形状が角に沿って移動する時、および新しい形状の間を移動する時に希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "次の形状へ接続を設置するために頂点を設定します。"
                            },
                            name = "setNextVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x-component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a vertex that establishes a connection to the previous shape.\n\nThis can help prevent unwanted collisions when a flat shape slides along the edge and moves over to the new shape.",
                            descriptiont = {
                                jp = "前の形状へ接続を設置するために頂点を設定します。\n\nこれは平面の形状が角に沿って移動および新しい形状の間を移動するときに希望しない衝突を阻止するために有用です。"
                            },
                            minidescriptiont = {
                                jp = "前の形状へ接続を設置するために頂点を設定します。"
                            },
                            name = "setPreviousVertex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x-component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-component of the vertex.",
                                            descriptiont = {
                                                jp = "頂点の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "EdgeShape",
                    parenttype = "Shape",
                    supertypes = {
                        "Shape",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newDistanceJoint"
                    },
                    description = "Keeps two bodies at the same distance.",
                    descriptiont = {
                        jp = "二つの物体において同一距離を維持します。\n\nFile:physicsJointDistance.PNG",
                        pt = "Mantém dois corpos a uma mesma distância.",
                        ru = "Держит два тела на определенной дистанции."
                    },
                    functions = {
                        {
                            description = "Gets the damping ratio.",
                            descriptiont = {
                                jp = "減衰比を取得します。"
                            },
                            minidescriptiont = {
                                jp = "減衰比を取得します。"
                            },
                            name = "getDampingRatio",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the response speed.",
                            descriptiont = {
                                jp = "応答速度を取得します。",
                                pt = "Obtém a velocidade de resposta."
                            },
                            minidescriptiont = {
                                jp = "応答速度を取得します。",
                                pt = "Obtém a velocidade de resposta."
                            },
                            name = "getFrequency",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The response speed.",
                                            descriptiont = {
                                                jp = "応答速度。",
                                                pt = "A velocidade de resposta."
                                            },
                                            name = "Hz",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the equilibrium distance between the two Bodies.",
                            descriptiont = {
                                jp = "二つの物体間の平衡距離を取得します。",
                                pt = "Obtém a distância de equilíbrio entre dois corpos."
                            },
                            minidescriptiont = {
                                jp = "二つの物体間の平衡距離を取得します。",
                                pt = "Obtém a distância de equilíbrio entre dois corpos."
                            },
                            name = "getLength",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The length between the two Bodies.",
                                            descriptiont = {
                                                jp = "二つの物体間の長さ。",
                                                pt = "A distância entre dois corpos."
                                            },
                                            name = "l",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the damping ratio.",
                            descriptiont = {
                                jp = "減衰比を設定します。",
                                pt = "Configura a taxa de amortecimento."
                            },
                            minidescriptiont = {
                                jp = "減衰比を設定します。",
                                pt = "Configura a taxa de amortecimento."
                            },
                            name = "setDampingRatio",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。",
                                                pt = "A taxa de amortecimento."
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the response speed.",
                            descriptiont = {
                                jp = "応答速度を設定します。",
                                pt = "Configura a velocidade de resposta."
                            },
                            minidescriptiont = {
                                jp = "応答速度を設定します。",
                                pt = "Configura a velocidade de resposta."
                            },
                            name = "setFrequency",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The response speed.",
                                            descriptiont = {
                                                jp = "応答速度。",
                                                pt = "A velocidade da resposta."
                                            },
                                            name = "Hz",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the equilibrium distance between the two Bodies.",
                            descriptiont = {
                                jp = "二つの物体間の平衡距離を設定します。",
                                pt = "Configura a distância de equilíbrio entre dois corpos."
                            },
                            minidescriptiont = {
                                jp = "二つの物体間の平衡距離を設定します。",
                                pt = "Configura a distância de equilíbrio entre dois corpos."
                            },
                            name = "setLength",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The length between the two Bodies.",
                                            descriptiont = {
                                                jp = "二つの物体間の長さ。",
                                                pt = "A distância entre os dois corpos."
                                            },
                                            name = "l",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Mantém dois corpos a uma mesma distância."
                    },
                    name = "DistanceJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newFixture"
                    },
                    description = "Fixtures attach shapes to bodies.",
                    descriptiont = {
                        de = "Eine Befestigung fügt eine Form zu einem Körper hinzu.",
                        jp = "Fixture (取付具) は物体へ形状を取り付けます。",
                        ru = "\"Fixture\" присоединяют \"shape\" к \"body\"."
                    },
                    functions = {
                        {
                            description = "Destroys the fixture",
                            descriptiont = {
                                jp = "取付具を破棄します。"
                            },
                            minidescriptiont = {
                                jp = "取付具を破棄します。"
                            },
                            name = "destroy",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Returns the body to which the fixture is attached.",
                            descriptiont = {
                                jp = "取付具が取り付けられている物体を返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具が取り付けられている物体を返します。"
                            },
                            name = "getBody",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The parent body.",
                                            descriptiont = {
                                                jp = "親の物体。"
                                            },
                                            name = "body",
                                            type = "Body"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the points of the fixture bounding box. In case the fixture has multiple children a 1-based index can be specified. For example, a fixture will have multiple children with a chain shape.",
                            descriptiont = {
                                jp = "取付具における境界ボックスの地点を返します。取付具に複数の子がある場合は、索引には 1 を基数として指定できます。 例えば、取り付け具は鎖形状による多数の子を有しています。"
                            },
                            minidescriptiont = {
                                jp = "取付具における境界ボックスの地点を返します。"
                            },
                            name = "getBoundingBox",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            default = "1",
                                            description = "A bounding box of the fixture.",
                                            descriptiont = {
                                                jp = "取付具における境界ボックス。"
                                            },
                                            name = "index",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x position of the top-left point.",
                                            descriptiont = {
                                                jp = "左上の地点として x 位置。"
                                            },
                                            name = "topLeftX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the top-left point.",
                                            descriptiont = {
                                                jp = "左上の地点として y 位置。"
                                            },
                                            name = "topLeftY",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the bottom-right point.",
                                            descriptiont = {
                                                jp = "右下の地点として x 位置。"
                                            },
                                            name = "bottomRightX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the bottom-right point.",
                                            descriptiont = {
                                                jp = "右下の地点として y 位置。"
                                            },
                                            name = "bottomRightY",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the categories the fixture belongs to.",
                            descriptiont = {
                                jp = "取付具の所属する分類を返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の所属する分類を返します。"
                            },
                            name = "getCategory",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The first category.",
                                            name = "category1",
                                            type = "number"
                                        },
                                        {
                                            description = "The second category.",
                                            name = "category2",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional categories.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the density of the fixture.",
                            descriptiont = {
                                jp = "取付具の密度を返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の密度を返します。"
                            },
                            name = "getDensity",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The fixture density in kilograms per square meter.",
                                            descriptiont = {
                                                jp = "１平方メートル当たりのキログラム単位による取付具の密度。"
                                            },
                                            name = "density",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the filter data of the fixture. Categories and masks are encoded as the bits of a 16-bit integer.",
                            descriptiont = {
                                jp = "取付具のフィルタ・データを返します。\n\n分類とマスクは 16 bit 整数をビット化したものとして符号化されます。"
                            },
                            minidescriptiont = {
                                jp = "取付具のフィルタ・データを返します。"
                            },
                            name = "getFilterData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The categories as an integer from 0 to 65535.",
                                            descriptiont = {
                                                jp = "分類として 0 から 65535 までの整数。"
                                            },
                                            name = "categories",
                                            type = "number"
                                        },
                                        {
                                            description = "The mask as an integer from 0 to 65535.",
                                            descriptiont = {
                                                jp = "マスクとして 0 から 65535 までの整数。"
                                            },
                                            name = "mask",
                                            type = "number"
                                        },
                                        {
                                            description = "The group as an integer from -32768 to 32767.",
                                            descriptiont = {
                                                jp = "群として -32768 から 32767 までの整数。"
                                            },
                                            name = "group",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the friction of the fixture.",
                            descriptiont = {
                                jp = "取付具の摩擦を返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の摩擦を返します。"
                            },
                            name = "getFriction",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The fixture friction.",
                                            descriptiont = {
                                                jp = "取付具の摩擦。"
                                            },
                                            name = "friction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the group the fixture belongs to. Fixtures with the same group will always collide if the group is positive or never collide if it's negative. The group zero means no group.\n\nThe groups range from -32768 to 32767.",
                            descriptiont = {
                                jp = "取付具の所属する群を返します。群が正数であり取付具が同じ群に所属しているならば常に衝突しますが負数であれば衝突しません。群の数 0 である場合は群は存在しないことを意味します。\n\n群の範囲は -32768 から 32767 までです。"
                            },
                            minidescriptiont = {
                                jp = "取付具の所属する群を返します。"
                            },
                            name = "getGroupIndex",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The group of the fixture.",
                                            descriptiont = {
                                                jp = "取付具の群。"
                                            },
                                            name = "group",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the category mask of the fixture.",
                            descriptiont = {
                                jp = "この取付具は'''衝突しない'''ものに分類されているかどうかを返します。"
                            },
                            minidescriptiont = {
                                jp = "この取付具は'''衝突しない'''ものに分類されているかどうかを返します。"
                            },
                            name = "getMask",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The first category selected by the mask.",
                                            name = "mask1",
                                            type = "number"
                                        },
                                        {
                                            description = "The second category selected by the mask.",
                                            name = "mask2",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional categories selected by the mask.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the mass, its center and the rotational inertia.",
                            descriptiont = {
                                jp = "中心の質量および回転の慣性を返します。"
                            },
                            minidescriptiont = {
                                jp = "中心の質量および回転の慣性を返します。"
                            },
                            name = "getMassData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x position of the center of mass.",
                                            descriptiont = {
                                                jp = "中心の質量にある x 位置。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the center of mass.",
                                            descriptiont = {
                                                jp = "中心の質量にある y 位置。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The mass of the fixture.",
                                            descriptiont = {
                                                jp = "取付具の質量。"
                                            },
                                            name = "mass",
                                            type = "number"
                                        },
                                        {
                                            description = "The rotational inertia.",
                                            descriptiont = {
                                                jp = "回転の慣性。"
                                            },
                                            name = "inertia",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the restitution of the fixture.",
                            descriptiont = {
                                jp = "取付具の復元を返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の復元を返します。"
                            },
                            name = "getRestitution",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The fixture restitution.",
                                            descriptiont = {
                                                jp = "取付具の復元。"
                                            },
                                            name = "restitution",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the shape of the fixture. This shape is a reference to the actual data used in the simulation. It's possible to change its values between timesteps.\n\nDo not call any functions on this shape after the parent fixture has been destroyed. This shape will point to an invalid memory address and likely cause crashes if you interact further with it.",
                            descriptiont = {
                                jp = "取付具の形状を返します。この形状は模擬中に使用される実際のデータへの参照です。時間を刻んでいる間に値を変更することは可能です。"
                            },
                            minidescriptiont = {
                                jp = "取付具の形状を返します。"
                            },
                            name = "getShape",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The fixture's shape.",
                                            descriptiont = {
                                                jp = "取付具の形状"
                                            },
                                            name = "shape",
                                            type = "Shape"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the Lua value associated with this fixture.\n\nUse this function in one thread only.",
                            descriptiont = {
                                jp = "取付具へ関連付けられた Lua の値を返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具へ関連付けられた Lua の値を返します。"
                            },
                            name = "getUserData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Lua value associated with the fixture.",
                                            descriptiont = {
                                                jp = "取付具へ関連付けられた Lua の値。"
                                            },
                                            name = "value",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Fixture is destroyed. Destroyed fixtures cannot be used.",
                            descriptiont = {
                                jp = "取付具が破棄されたかどうかを取得します。破棄された取付具は再利用できません。"
                            },
                            minidescriptiont = {
                                jp = "取付具が破棄されたかどうかを取得します。"
                            },
                            name = "isDestroyed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether the Fixture is destroyed.",
                                            descriptiont = {
                                                jp = "取付具が破棄されたかどうか。"
                                            },
                                            name = "destroyed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns whether the fixture is a sensor.",
                            descriptiont = {
                                jp = "取付具は感知装置であるかどうか返します。"
                            },
                            minidescriptiont = {
                                jp = "取付具は感知装置であるかどうか返します。"
                            },
                            name = "isSensor",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "If the fixture is a sensor.",
                                            descriptiont = {
                                                jp = "取付具は感知装置であるか。"
                                            },
                                            name = "sensor",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Casts a ray against the shape of the fixture and returns the surface normal vector and the line position where the ray hit. If the ray missed the shape, nil will be returned.\n\nThe ray starts on the first point of the input line and goes towards the second point of the line. The fourth argument is the maximum distance the ray is going to travel as a scale factor of the input line length.\n\nThe childIndex parameter is used to specify which child of a parent shape, such as a ChainShape, will be ray casted. For ChainShapes, the index of 1 is the first edge on the chain. Ray casting a parent shape will only test the child specified so if you want to test every shape of the parent, you must loop through all of its children.\n\nThe world position of the impact can be calculated by multiplying the line vector with the third return value and adding it to the line starting point.\n\nhitx, hity = x1 + (x2 - x1) * fraction, y1 + (y2 - y1) * fraction",
                            descriptiont = {
                                jp = "取付具の形状に対する斜線計算および表面法線のベクトル、さらに斜線により線が当たった位置を返します。斜線が形状を外れている場合は nil を返します。\n\n斜線は入力線の第一地点を出発して線のある第二地点へ移動します。第五引数は入力線の長さであり尺度変更係数として斜線が移動する最大距離です。\n\n引数 childIndex は ChainShape といった親形状に対して、どの子が斜線計算されるか指定するために使用されます。ChainShapes において、索引 1 が鎖においての最初の角です。親形状の斜線計算では指定された子に対してのみ検査されるために、すべての親形状を調査したいのであれば、その子ら全てに対して反復する必要があります。\n\n力積における世界位置は行ベクトルへ第三引数の返値を乗算して行の始点へ加算をすることで計算できます。\n\n&lt;source lang=\"lua\"&gt;hitx, hity = x1 + (x2 - x1) * fraction, y1 + (y2 - y1) * fraction&lt;/source&gt;"
                            },
                            minidescriptiont = {
                                jp = "取付具の形状に対する斜線計算を行います。"
                            },
                            name = "rayCast",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position of the ray starting point.",
                                            descriptiont = {
                                                jp = "入力線の始点として x 位置。"
                                            },
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the ray starting point.",
                                            descriptiont = {
                                                jp = "入力線の始点として y 位置。"
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the ray end point.",
                                            descriptiont = {
                                                jp = "入力線の終点として x 位置。"
                                            },
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the ray end point.",
                                            descriptiont = {
                                                jp = "入力線の終点として y 位置。"
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum distance the ray is going to travel as a number from 0 to 1.",
                                            descriptiont = {
                                                jp = "斜線の長さにおける引数。"
                                            },
                                            name = "maxFraction",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "The index of the child the ray gets cast against.",
                                            descriptiont = {
                                                jp = "斜線計算が行われる子の索引。"
                                            },
                                            name = "childIndex",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x position where the ray intersects with the shape.",
                                            descriptiont = {
                                                jp = "斜線が形状に当たった場所での角の通常ベクトルにおける x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position where the ray intersects with the shape.",
                                            descriptiont = {
                                                jp = "斜線が形状に当たった場所での角の通常ベクトルにおける y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The position on the input vector where the intersection happened as a number from 0 to 1.",
                                            descriptiont = {
                                                jp = "線の長さを係数として公差が発生した入力線上の位置。"
                                            },
                                            name = "fraction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the categories the fixture belongs to. There can be up to 16 categories represented as a number from 1 to 16.",
                            descriptiont = {
                                jp = "取付具の所属する分類を設定します。 1 から 16 までの数値で最大 16 までの分類を表現できます。\n\n全取付具においてデフォルトの分類は 1 です。"
                            },
                            minidescriptiont = {
                                jp = "取付具の所属する分類を設定します。"
                            },
                            name = "setCategory",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The first category.",
                                            name = "category1",
                                            type = "number"
                                        },
                                        {
                                            description = "The second category.",
                                            name = "category2",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional categories.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the density of the fixture. Call Body:resetMassData if this needs to take effect immediately.",
                            descriptiont = {
                                jp = "取付具の密度を設定します。この効果を直ちに使用する必要がある場合は Body:resetMassData を呼び出します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の密度を設定します。"
                            },
                            name = "setDensity",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The fixture density in kilograms per square meter.",
                                            descriptiont = {
                                                jp = "1平方メートル当たりのキログラム単位による取付具の密度。"
                                            },
                                            name = "density",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the filter data of the fixture.\n\nGroups, categories, and mask can be used to define the collision behaviour of the fixture.\n\nIf two fixtures are in the same group they either always collide if the group is positive, or never collide if it's negative. If the group is zero or they do not match, then the contact filter checks if the fixtures select a category of the other fixture with their masks. The fixtures do not collide if that's not the case. If they do have each other's categories selected, the return value of the custom contact filter will be used. They always collide if none was set.\n\nThere can be up to 16 categories. Categories and masks are encoded as the bits of a 16-bit integer.",
                            descriptiont = {
                                jp = "取付具のフィルタ・データを設定します。\n\n群、分類、およびマスクは取付具における衝突時の挙動を定義するために使用することができます。\n\n二つの取付具が同じ群にある場合は、いずれかの群が正数であれば衝突しますが、負数であれば衝突しません。取付具がマスクを持つ別の取付具の分類を選択するとき、群 0 または不一致ならば接点フィルタを確認します。この場合は取付具は衝突しません。各々の分類が設定されない場合は接点フィルタが返値の値として使用されます。いずれも設定されなかった場合は常に衝突します。\n\n分類は 16 まで使用できます。分類とマスクは 16 bit 整数をビット化したものとして符号化されます。",
                                ru = "Установка фильтрации данных \"fixture\".\n\nГруппы, категории и маска могут быть использованы для определения поведения столкновения \"fixture\".\n\nЕсли две \"fixture\" в одной группе, то они либо всегда сталкиваются, если группа является положительной, или никогда не сталкиваются, если группа отрицательная. Если группа равна нулю или они не совпадают, то происходит проверка контакта между \"mask\". \"Fixture\" не сталкиваются, если это не так. Если они в разных категориях, возвращается значение контакта. \"Fixture\" всегда сталкиваются, если ни одно значение не было установлено.\n\nТам может быть до 16 категорий. Категории и маски кодируются в виде битов 16-разрядного числа.\n\n&lt;source lang=\"lua\"&gt;\n\nFixture:setFilterData( categories, mask, group )\n\n&lt;/source&gt;\n\nNothing.\n\n* parent::Fixture_(Русский)\n\n* Fixture:getFilterData\n\nCategory:Functions"
                            },
                            minidescriptiont = {
                                jp = "取付具のフィルタ・データを設定します。",
                                ru = "Sets the filter data of the fixture."
                            },
                            name = "setFilterData",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The categories as an integer from 0 to 65535.",
                                            name = "categories",
                                            type = "number"
                                        },
                                        {
                                            description = "The mask as an integer from 0 to 65535.",
                                            name = "mask",
                                            type = "number"
                                        },
                                        {
                                            description = "The group as an integer from -32768 to 32767.",
                                            name = "group",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the friction of the fixture.",
                            descriptiont = {
                                jp = "取付具の摩擦を設定します。\n\n摩擦は他の形状に沿って\"滑る\"場合に、どのように形状が反応するか決定します。低摩擦は氷の様に滑りやすい表面を示しており、高摩擦はコンクリートの様に、ざらざらした滑りにくい表示面を示します。範囲は 0.0 ～ 1.0 です。"
                            },
                            minidescriptiont = {
                                jp = "取付具の摩擦を設定します。"
                            },
                            name = "setFriction",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The fixture friction.",
                                            descriptiont = {
                                                jp = "取付具の摩擦。"
                                            },
                                            name = "friction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the group the fixture belongs to. Fixtures with the same group will always collide if the group is positive or never collide if it's negative. The group zero means no group.\n\nThe groups range from -32768 to 32767.",
                            descriptiont = {
                                jp = "取付具の所属する群を設定します。群が正数であり取付具が同じ群に所属しているならば常に衝突しますが負数であれば衝突しません。群の数 0 である場合は群は存在しないことを意味します。\n\n群の範囲は -32768 から 32767 までです。"
                            },
                            minidescriptiont = {
                                jp = "取付具の所属する群を設定します。"
                            },
                            name = "setGroupIndex",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The group as an integer from -32768 to 32767.",
                                            descriptiont = {
                                                jp = "群は -32768 から 32767 までの整数です。"
                                            },
                                            name = "group",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the category mask of the fixture. There can be up to 16 categories represented as a number from 1 to 16.\n\nThis fixture will collide with the fixtures that are in the selected categories if the other fixture also has a category of this fixture selected.",
                            descriptiont = {
                                jp = "Fixture:setMask の動作において'''選択されていない'''分類は、この取付具と'''衝突しません'''。この動作にしたいときは Box2D のマスク動作ではなく Fixture:setFilterData を使用してください。}}\n\n取付具の分類マスクを設定します。分類は 1 から 16 までの数値表現です。\n\nこの取付具は別の取付具がさらにこの取付具を選択した場合は選択された分類と衝突'''しません'''。"
                            },
                            minidescriptiont = {
                                jp = "この取付具と'''衝突しない'''分類を設定します。"
                            },
                            name = "setMask",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The first category.",
                                            name = "mask1",
                                            type = "number"
                                        },
                                        {
                                            description = "The second category.",
                                            name = "mask2",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional categories.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the restitution of the fixture.",
                            descriptiont = {
                                jp = "取付具の復元を設定します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の復元を設定します。"
                            },
                            name = "setRestitution",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The fixture restitution.",
                                            descriptiont = {
                                                jp = "取付具の復元。"
                                            },
                                            name = "restitution",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets whether the fixture should act as a sensor.\n\nSensor do not produce collisions responses, but the begin and end callbacks will still be called for this fixture.",
                            descriptiont = {
                                jp = "取付具が感知装置として作動するかどうか設定します。\n\n感知装置は衝突応答は発生しませんが、この取付具に対して World コールバック による接点の開始および接点の終了では呼ばれたままになります。"
                            },
                            minidescriptiont = {
                                jp = "取付具が感知装置として作動するかどうか設定します。"
                            },
                            name = "setSensor",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The sensor status.",
                                            descriptiont = {
                                                jp = "感知装置の状態。"
                                            },
                                            name = "sensor",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Associates a Lua value with the fixture.\n\nUse this function in one thread only.",
                            descriptiont = {
                                jp = "取付具へ Lua の値を関連付けます。\n\n参照を削除するには、明示的に nil を渡してください。"
                            },
                            minidescriptiont = {
                                jp = "取付具へ Lua の値を関連付けます。"
                            },
                            name = "setUserData",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The Lua value associated with the fixture.",
                                            descriptiont = {
                                                jp = "取付具へ関連付ける Lua の値。"
                                            },
                                            name = "value",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks if a point is inside the shape of the fixture.",
                            descriptiont = {
                                jp = "取付具の形状において地点は内側にあるかどうか確認します。"
                            },
                            minidescriptiont = {
                                jp = "取付具の形状において地点は内側にあるかどうか確認します。"
                            },
                            name = "testPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position of the point.",
                                            descriptiont = {
                                                jp = "地点の x 座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the point.",
                                            descriptiont = {
                                                jp = "地点の y 座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "True if the point is inside or false if it is outside.",
                                            descriptiont = {
                                                jp = "true ならば地点は内側にあり、 false ならば外側にあります。"
                                            },
                                            name = "isInside",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "Fixture",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newFrictionJoint"
                    },
                    description = "A FrictionJoint applies friction to a body.",
                    descriptiont = {
                        jp = "FrictionJoint は物体へ摩擦を適用します。"
                    },
                    functions = {
                        {
                            description = "Gets the maximum friction force in Newtons.",
                            descriptiont = {
                                jp = "最大摩擦力をニュートン単位で取得します。"
                            },
                            minidescriptiont = {
                                jp = "最大摩擦力をニュートン単位で取得します。"
                            },
                            name = "getMaxForce",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Maximum force in Newtons.",
                                            descriptiont = {
                                                jp = "ニュートン単位での最大力量。"
                                            },
                                            name = "force",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the maximum friction torque in Newton-meters.",
                            descriptiont = {
                                jp = "ニュートン・メートル単位による最大摩擦力矩を取得します。"
                            },
                            minidescriptiont = {
                                jp = "ニュートン・メートル単位による最大摩擦力矩を取得します。"
                            },
                            name = "getMaxTorque",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Maximum torque in Newton-meters.",
                                            descriptiont = {
                                                jp = "ニュートン・メートル単位による最大摩擦力矩。"
                                            },
                                            name = "torque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the maximum friction force in Newtons.",
                            descriptiont = {
                                jp = "最大摩擦力をニュートン単位で設定します。"
                            },
                            minidescriptiont = {
                                jp = "最大摩擦力をニュートン単位で設定します。"
                            },
                            name = "setMaxForce",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Max force in Newtons.",
                                            descriptiont = {
                                                jp = "ニュートン単位での最大力量。"
                                            },
                                            name = "maxForce",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the maximum friction torque in Newton-meters.",
                            descriptiont = {
                                jp = "ニュートン・メートル単位による最大摩擦力矩を取得します。"
                            },
                            minidescriptiont = {
                                jp = "ニュートン・メートル単位による最大摩擦力矩を取得します。"
                            },
                            name = "setMaxTorque",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Maximum torque in Newton-meters.",
                                            descriptiont = {
                                                jp = "ニュートン・メートル単位による最大摩擦力矩。"
                                            },
                                            name = "torque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "FrictionJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newGearJoint"
                    },
                    description = "Keeps bodies together in such a way that they act like gears.",
                    descriptiont = {
                        jp = "伝動装置の動作と同様の方法で物体を協調させます。\n\nFile:physicsJointGear.png",
                        pt = "Mantém corpos juntos de tal forma que eles atual como engrenagens.",
                        ru = "Держит тела таким образом, что они действуют как шестеренки."
                    },
                    functions = {
                        {
                            description = "Get the Joints connected by this GearJoint.",
                            descriptiont = {
                                jp = "この GearJoint により接続されている関節を取得します。"
                            },
                            minidescriptiont = {
                                jp = "この GearJoint により接続されている関節を取得します。"
                            },
                            name = "getJoints",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The first connected Joint.",
                                            descriptiont = {
                                                jp = "最初に接続されている関節。"
                                            },
                                            name = "joint1",
                                            type = "Joint"
                                        },
                                        {
                                            description = "The second connected Joint.",
                                            descriptiont = {
                                                jp = "次に接続されている関節。"
                                            },
                                            name = "joint2",
                                            type = "Joint"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the ratio of a gear joint.",
                            descriptiont = {
                                jp = "伝動装置の関節における比率を取得します。",
                                pt = "Obtém a relação da junta de engrenagem."
                            },
                            minidescriptiont = {
                                jp = "伝動装置の関節における比率を取得します。",
                                pt = "Obtém a relação da junta de engrenagem."
                            },
                            name = "getRatio",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The ratio of the joint.",
                                            descriptiont = {
                                                jp = "関節の比率。",
                                                pt = "A relação da junta."
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the ratio of a gear joint.",
                            descriptiont = {
                                jp = "伝動装置の関節における比率を設定します。",
                                pt = "Configura a relação da junta de engrenagem."
                            },
                            minidescriptiont = {
                                jp = "伝動装置の関節における比率を設定します。",
                                pt = "Configura a relação da junta de engrenagem."
                            },
                            name = "setRatio",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new ratio of the joint.",
                                            descriptiont = {
                                                jp = "関節の新規比率。",
                                                pt = "A nova relação da junta."
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Mantém corpos juntos de tal forma que eles atual como engrenagens."
                    },
                    name = "GearJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    description = "Attach multiple bodies together to interact in unique ways.",
                    descriptiont = {
                        de = "Fügt mehrere Körper zusammen, sodass sie speziell miteinander interagieren können.",
                        jp = "独自の方法で相互作用を行うために複数の物体と接触します。",
                        pt = "Junta múltiplos corpos para interagirem de uma forma conjunta.",
                        ru = "Соединяет вместе несколько тел, взаимодействующих разными сопсобами."
                    },
                    functions = {
                        {
                            description = "Explicitly destroys the Joint. When you don't have time to wait for garbage collection, this function may be used to free the object immediately, but note that an error will occur if you attempt to use the object after calling this function.",
                            descriptiont = {
                                jp = "関節を明示的に破棄します。この関数の呼び出し後に破壊された任意のオブジェクトを使用しようとすればエラーが発生します。\n\nLOVE 0.7.2 では、ガベージ・コレクションの待ち時間がないため、この関数はオブジェクトを直ちに解放するために使用できます。",
                                pt = "Destrói explicitamente uma Junta.\n\nQuando não é possível aguardar o garbage collection, esta função pode ser usada para livrar imediatamente um objeto, mas note que um erro irá ocorrer se for tentado usar o objeto depois de chamada esta função."
                            },
                            minidescriptiont = {
                                jp = "関節を明示的に破棄します。",
                                pt = "Destrói explicitamente uma Junta."
                            },
                            name = "destroy",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Get the anchor points of the joint.",
                            descriptiont = {
                                jp = "関節における錨(固定具)の地点を取得します。",
                                pt = "Obtém o ponto de ancoragem de uma junta."
                            },
                            minidescriptiont = {
                                jp = "関節における錨(固定具)の地点を取得します。",
                                pt = "Obtém o ponto de ancoragem de uma junta."
                            },
                            name = "getAnchors",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the anchor on Body 1.",
                                            descriptiont = {
                                                jp = "物体 1 における錨 x の要素。",
                                                pt = "A coordenada x da ancoragem no corpo 1."
                                            },
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the anchor on Body 1.",
                                            descriptiont = {
                                                jp = "物体 1 における錨 y の要素。",
                                                pt = "A coordenada y da ancoragem no corpo 1."
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x component of the anchor on Body 2.",
                                            descriptiont = {
                                                jp = "物体 2 における錨 x の要素。",
                                                pt = "A coordenada x da ancoragem no corpo 2."
                                            },
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the anchor on Body 2.",
                                            descriptiont = {
                                                jp = "物体 2 における錨 y の要素。",
                                                pt = "A coordenada y da ancoragem no corpo 2."
                                            },
                                            name = "y2",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the bodies that the Joint is attached to.",
                            descriptiont = {
                                jp = "関節が取り付けられている物体を返します。"
                            },
                            minidescriptiont = {
                                jp = "関節が取り付けられている物体を返します。"
                            },
                            name = "getBodies",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The first Body.",
                                            descriptiont = {
                                                jp = "第一物体。"
                                            },
                                            name = "bodyA",
                                            type = "Body"
                                        },
                                        {
                                            description = "The second Body.",
                                            descriptiont = {
                                                jp = "第二物体。"
                                            },
                                            name = "bodyB",
                                            type = "Body"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the connected Bodies collide.",
                            descriptiont = {
                                jp = "接続されている物体が衝突するかどうか取得します。",
                                pt = "Obtém se o corpos conectados colidiram."
                            },
                            minidescriptiont = {
                                jp = "接続されている物体が衝突するかどうか取得します。",
                                pt = "Obtém se o corpos conectados colidiram."
                            },
                            name = "getCollideConnected",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if they collide, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならば衝突しますが、それ以外は false です。",
                                                pt = "True se eles colidiram, senão false."
                                            },
                                            name = "c",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the reaction force on Body 2 at the joint anchor.",
                            descriptiont = {
                                jp = "第二物体においての反作用力を返します。",
                                pt = "Obtém a força de reação no corpo 2 na âncora da junta."
                            },
                            minidescriptiont = {
                                jp = "第二物体においての反作用力を返します。",
                                pt = "Obtém a força de reação no corpo 2 na âncora da junta."
                            },
                            name = "getReactionForce",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the force.",
                                            descriptiont = {
                                                pt = "A componente x da força."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the force.",
                                            descriptiont = {
                                                pt = "A componente y da força."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the reaction torque on the second body.",
                            descriptiont = {
                                jp = "第二物体においての反作用力矩(トルク)を返します。",
                                pt = "Obtém a reação de torque no corpo 2."
                            },
                            minidescriptiont = {
                                jp = "第二物体においての反作用力矩(トルク)を返します。",
                                pt = "Obtém a reação de torque no corpo 2."
                            },
                            name = "getReactionTorque",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "How long the force applies. Usually the inverse time step or 1/dt.",
                                            descriptiont = {
                                                jp = "力を適用する時間の長さ。通常は反転された時間刻みまたは 1/dt (デルタ時間)です。"
                                            },
                                            name = "invdt",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The reaction torque on the second body.",
                                            descriptiont = {
                                                jp = "第二物体においての反作用力矩。"
                                            },
                                            name = "torque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a string representing the type.",
                            descriptiont = {
                                jp = "関節の種類を文字列表現で取得します。",
                                pt = "Obtém uma string que representa o tipo."
                            },
                            minidescriptiont = {
                                jp = "関節の種類を文字列表現で取得します。",
                                pt = "Obtém uma string que representa o tipo."
                            },
                            name = "getType",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A string with the name of the Joint type.",
                                            descriptiont = {
                                                jp = "関節における文字列による種類の名称。",
                                                pt = "Uma string com o nome do tipo de junta."
                                            },
                                            name = "type",
                                            type = "JointType"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the Lua value associated with this Joint.",
                            descriptiont = {
                                jp = "この関節へ関連付けられた Lua の値を返します。"
                            },
                            minidescriptiont = {
                                jp = "この関節へ関連付けられた Lua の値を返します。"
                            },
                            name = "getUserData",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The Lua value associated with the Joint.",
                                            descriptiont = {
                                                jp = "関節へ関連付けられた Lua の値。"
                                            },
                                            name = "value",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the Joint is destroyed. Destroyed joints cannot be used.",
                            descriptiont = {
                                jp = "関節が破棄されたかどうかを取得します。破棄された関節は再利用できません。"
                            },
                            minidescriptiont = {
                                jp = "関節が破棄されたかどうかを取得します。"
                            },
                            name = "isDestroyed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether the Joint is destroyed.",
                                            descriptiont = {
                                                jp = "関節が破棄されたかどうか。"
                                            },
                                            name = "destroyed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Associates a Lua value with the Joint.\n\nTo delete the reference, explicitly pass nil.",
                            descriptiont = {
                                jp = "関節へ Lua の値を関連付けます。\n\n参照を削除するには、明示的に nil を渡してください。"
                            },
                            minidescriptiont = {
                                jp = "関節へ Lua の値を関連付けます。"
                            },
                            name = "setUserData",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The Lua value to associate with the Joint.",
                                            descriptiont = {
                                                jp = "関節へ関連付ける Lua の値。"
                                            },
                                            name = "value",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Attach multiple bodies together to interact in unique ways."
                    },
                    name = "Joint",
                    parenttype = "Object",
                    subtypes = {
                        "DistanceJoint",
                        "FrictionJoint",
                        "GearJoint",
                        "MotorJoint",
                        "MouseJoint",
                        "PrismaticJoint",
                        "PulleyJoint",
                        "RevoluteJoint",
                        "RopeJoint",
                        "WeldJoint",
                        "WheelJoint"
                    },
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newMotorJoint"
                    },
                    description = "Controls the relative motion between two Bodies. Position and rotation offsets can be specified, as well as the maximum motor force and torque that will be applied to reach the target offsets.",
                    descriptiont = {
                        jp = "二つの物体間における相対運動を制御します。対象の支距に到達するために適用される発動機の最大力量および力矩と同様に、位置および回転支距を指定できます。"
                    },
                    functions = {
                        {
                            description = "Gets the target angular offset between the two Bodies the Joint is attached to.",
                            descriptiont = {
                                jp = "二つの物体に間取り付けられた関節における対象の角度で弧度による支距を取得します。"
                            },
                            minidescriptiont = {
                                jp = "二つの物体に間取り付けられた関節における対象の角度で弧度による支距を取得します。"
                            },
                            name = "getAngularOffset",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The target angular offset in radians: the second body's angle minus the first body's angle.",
                                            descriptiont = {
                                                jp = "対象の角度は弧度による支距です:最初の物体における角度は第二物体の角度を差し引いたものです。"
                                            },
                                            name = "angularoffset",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the target linear offset between the two Bodies the Joint is attached to.",
                            descriptiont = {
                                jp = "関節が取り付けられた二つの物体間にある対象の線形支距を取得します。"
                            },
                            minidescriptiont = {
                                jp = "関節が取り付けられた二つの物体間にある対象の線形支距を取得します。"
                            },
                            name = "getLinearOffset",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the target linear offset, relative to the first Body.",
                                            descriptiont = {
                                                jp = "第一物体と関連する対象にある線形支距離の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the target linear offset, relative to the first Body.",
                                            descriptiont = {
                                                jp = "第一物体と関連する対象にある線形支距離の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the target angluar offset between the two Bodies the Joint is attached to.",
                            descriptiont = {
                                jp = "二つの物体に間取り付けられた関節における対象の角度で弧度による支距を設定します。"
                            },
                            minidescriptiont = {
                                jp = "二つの物体に間取り付けられた関節における対象の角度で弧度による支距を設定します。"
                            },
                            name = "setAngularOffset",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The target angular offset in radians: the second body's angle minus the first body's angle.",
                                            descriptiont = {
                                                jp = "対象の角度は弧度による支距です:最初の物体における角度は第二物体の角度を差し引いたものです。"
                                            },
                                            name = "angularoffset",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the target linear offset between the two Bodies the Joint is attached to.",
                            descriptiont = {
                                jp = "関節が取り付けられた二つの物体間にある対象の線形支距を設定します。"
                            },
                            minidescriptiont = {
                                jp = "関節が取り付けられた二つの物体間にある対象の線形支距を設定します。"
                            },
                            name = "setLinearOffset",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the target linear offset, relative to the first Body.",
                                            descriptiont = {
                                                jp = "第一物体と関連する対象にある線形支距離の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the target linear offset, relative to the first Body.",
                                            descriptiont = {
                                                jp = "第一物体と関連する対象にある線形支距離の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "MotorJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newMouseJoint"
                    },
                    description = "For controlling objects with the mouse.",
                    descriptiont = {
                        jp = "マウスにより操作するオブジェクトです。",
                        pt = "Para controlar objetos com o mouse.\n\nCriado com o love.physics.newMouseJoint.",
                        ru = "Для управления объектами с помощью мыши.\n\nСоздается функцией love.physics.newMouseJoint."
                    },
                    functions = {
                        {
                            description = "Returns the damping ratio.",
                            descriptiont = {
                                jp = "減衰比を取得します。"
                            },
                            minidescriptiont = {
                                jp = "減衰比を取得します。"
                            },
                            name = "getDampingRatio",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The new damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the frequency.",
                            descriptiont = {
                                jp = "振動数を返します。"
                            },
                            minidescriptiont = {
                                jp = "振動数を返します。"
                            },
                            name = "getFrequency",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The frequency in hertz.",
                                            descriptiont = {
                                                jp = "Hz (ヘルツ) 単位での振動数。"
                                            },
                                            name = "freq",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the highest allowed force.",
                            descriptiont = {
                                jp = "最高許容力量を取得します。",
                                pt = "Obtém a máxima força permitida."
                            },
                            minidescriptiont = {
                                jp = "最高許容力量を取得します。",
                                pt = "Obtém a máxima força permitida."
                            },
                            name = "getMaxForce",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The max allowed force.",
                                            descriptiont = {
                                                jp = "最高許容力量。",
                                                pt = "A máxima força permitida."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the target point.",
                            descriptiont = {
                                jp = "対象の位置を取得します。",
                                pt = "Obtém o ponto alvo."
                            },
                            minidescriptiont = {
                                jp = "対象の位置を取得します。",
                                pt = "Obtém o ponto alvo."
                            },
                            name = "getTarget",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the target.",
                                            descriptiont = {
                                                jp = "対象の x-要素。",
                                                pt = "A componente x do alvo."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The x component of the target.",
                                            descriptiont = {
                                                jp = "対象の y-要素。",
                                                pt = "A componente y do alvo."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new damping ratio.",
                            descriptiont = {
                                jp = "新規の減衰比を設定します。"
                            },
                            minidescriptiont = {
                                jp = "新規の減衰比を設定します。"
                            },
                            name = "setDampingRatio",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new frequency.",
                            descriptiont = {
                                jp = "新規の振動数を設定します。"
                            },
                            minidescriptiont = {
                                jp = "新規の振動数を設定します。"
                            },
                            name = "setFrequency",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new frequency in hertz.",
                                            descriptiont = {
                                                jp = "Hz (ヘルツ) 単位での新規振動数。"
                                            },
                                            name = "freq",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the highest allowed force.",
                            descriptiont = {
                                jp = "最高許容力量を設定します。",
                                pt = "Configura a máxima força permitida."
                            },
                            minidescriptiont = {
                                jp = "最高許容力量を設定します。",
                                pt = "Configura a máxima força permitida."
                            },
                            name = "setMaxForce",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The max allowed force.",
                                            descriptiont = {
                                                jp = "最高許容力量。",
                                                pt = "A máxima força permitida."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the target point.",
                            descriptiont = {
                                jp = "対象の位置を設定します。",
                                pt = "Configura o ponto alvo."
                            },
                            minidescriptiont = {
                                jp = "対象の位置を設定します。",
                                pt = "Configura o ponto alvo."
                            },
                            name = "setTarget",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the target.",
                                            descriptiont = {
                                                jp = "対象の x-要素。",
                                                pt = "A componente x do alvo."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the target.",
                                            descriptiont = {
                                                jp = "対象の y-要素。",
                                                pt = "A componente y do alvo."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Para controlar objetos com o mouse."
                    },
                    name = "MouseJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newPolygonShape",
                        "newRectangleShape"
                    },
                    description = "Polygon is a convex polygon with up to 8 sides.",
                    descriptiont = {
                        jp = "PolygonShape は八辺までの頂点を有する凸面の多角形です。",
                        pt = "Polígonos são convexos com até 8 lados.\n\nCria-se uma nova Forma Polígono com love.physics.newPolygonShape ou love.physics.newRectangleShape.",
                        ru = "Выпуклый многоугольник с не более чем 8 сторонами.\n\nСоздать форму многоугольника можно с помощью love.physics.newPolygonShape или love.physics.newRectangleShape."
                    },
                    functions = {
                        {
                            description = "Get the local coordinates of the polygon's vertices.\n\nThis function has a variable number of return values. It can be used in a nested fashion with love.graphics.polygon.\n\nThis function may have up to 16 return values, since it returns two values for each vertex in the polygon. In other words, it can return the coordinates of up to 8 points.",
                            descriptiont = {
                                jp = "多角形の頂点における局所座標を取得します。\n\nこの関数の返値は変数値です。この関数は love.graphics.polygon にて入れ子にするための方法として使用することができます。",
                                pt = "Obtém as coordenadas do mundo dos vértices do polígono.\n\nEsta função tem um número variável de valores retornados. Ela pode ser usada de forma aninhada com love.graphics.polygon."
                            },
                            minidescriptiont = {
                                jp = "多角形の頂点における局所座標を取得します。",
                                pt = "Obtém as coordenadas do mundo dos vértices do polígono."
                            },
                            name = "getPoints",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of the first vertex.",
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the first vertex.",
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x component of the second vertex.",
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the second vertex.",
                                            name = "y2",
                                            type = "number"
                                        },
                                        {
                                            description = "Additional x and y values.",
                                            name = "...",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Polígonos são convexos com até 8 lados."
                    },
                    name = "PolygonShape",
                    parenttype = "Shape",
                    supertypes = {
                        "Shape",
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newPrismaticJoint"
                    },
                    description = "Restricts relative motion between Bodies to one shared axis.",
                    descriptiont = {
                        jp = "共有軸において物体間の相対運動を制限します。\n\nFile:physicsJointPrismatic.png",
                        pt = "Restringe movimentos relativos entre corpos para somente um eixo compartilhado.",
                        ru = "Ограничивает движение между телами по одной общей оси."
                    },
                    functions = {
                        {
                            description = "Gets the world-space axis vector of the Prismatic Joint.",
                            descriptiont = {
                                jp = "直動関節において世界空間の軸ベクトルを取得します。"
                            },
                            minidescriptiont = {
                                jp = "直動関節において世界空間の軸ベクトルを取得します。"
                            },
                            name = "getAxis",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x-axis coordinate of the world-space axis vector.",
                                            descriptiont = {
                                                jp = "世界空間における軸ベクトルの x 軸座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-axis coordinate of the world-space axis vector.",
                                            descriptiont = {
                                                jp = "世界空間における軸ベクトルの y 軸座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current joint angle speed.",
                            descriptiont = {
                                jp = "現在の関節における速度角を取得します。",
                                pt = "Obtém a velocidade angular da junta."
                            },
                            minidescriptiont = {
                                jp = "現在の関節における速度角を取得します。",
                                pt = "Obtém a velocidade angular da junta."
                            },
                            name = "getJointSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Joint angle speed in meters/second.",
                                            descriptiont = {
                                                jp = "関節における弧度での速度角/秒数です。",
                                                pt = "Velocidade angular da junta, em metros/segundos."
                                            },
                                            name = "s",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current joint translation.",
                            descriptiont = {
                                jp = "現在の関節における並進移動を取得します。",
                                pt = "Obtém a atual translação da junta."
                            },
                            minidescriptiont = {
                                jp = "現在の関節における並進移動を取得します。",
                                pt = "Obtém a atual translação da junta."
                            },
                            name = "getJointTranslation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Joint translation, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による関節における並進移動。",
                                                pt = "Translação da junta, usualmente em metros."
                                            },
                                            name = "t",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the joint limits.",
                            descriptiont = {
                                jp = "関節の制限を取得します。",
                                pt = "Obtém os limites da junta."
                            },
                            minidescriptiont = {
                                jp = "関節の制限を取得します。",
                                pt = "Obtém o limite da junta."
                            },
                            name = "getLimits",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The lower limit, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による下限。",
                                                pt = "O limite inferior, normalmente em metros."
                                            },
                                            name = "lower",
                                            type = "number"
                                        },
                                        {
                                            description = "The upper limit, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による上限。",
                                                pt = "O limite superior, normalmente em metros."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the lower limit.",
                            descriptiont = {
                                jp = "下限を取得します。",
                                pt = "Obtém o limite inferior."
                            },
                            minidescriptiont = {
                                jp = "下限を取得します。",
                                pt = "Obtém o limite inferior."
                            },
                            name = "getLowerLimit",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The lower limit, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による下限。",
                                                pt = "O limite inferior, normalmente em metros."
                                            },
                                            name = "lower",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the maximum motor force.",
                            descriptiont = {
                                jp = "発動機の最大力量を取得します。",
                                pt = "Obtém a máxima força motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の最大力量を取得します。",
                                pt = "Obtém a máxima força motora."
                            },
                            name = "getMaxMotorForce",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The maximum motor force, usually in N.",
                                            descriptiont = {
                                                jp = "通常の N (ニュートン)単位による発動機の最大力量。",
                                                pt = "A máxima força motora, normalmente em N."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current motor force.",
                            descriptiont = {
                                jp = "発動機における現在の力量を返します。",
                                pt = "Obtém a atual força motora."
                            },
                            minidescriptiont = {
                                jp = "発動機における現在の力量を返します。",
                                pt = "Obtém a atual força motora."
                            },
                            name = "getMotorForce",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The current motor force, usually in N.",
                                            descriptiont = {
                                                pt = "A atual força motora, normalmente em N."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the motor speed.",
                            descriptiont = {
                                jp = "発動機の速度を取得します。",
                                pt = "Obtém a velocidade motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の速度を取得します。",
                                pt = "Obtém a velocidade motora."
                            },
                            name = "getMotorSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The motor speed, usually in meters per second.",
                                            descriptiont = {
                                                jp = "１秒あたりの通常メートル単位による発動機の速度。",
                                                pt = "A velocidade motora, normalmente em metros/segundos."
                                            },
                                            name = "s",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the upper limit.",
                            descriptiont = {
                                jp = "上限を取得します。",
                                pt = "Obtém o limite superior."
                            },
                            minidescriptiont = {
                                jp = "上限を取得します。",
                                pt = "Obtém o limite superior."
                            },
                            name = "getUpperLimit",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The upper limit, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による上限。",
                                                pt = "O limite superior, normalmente em metros."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether the limits are enabled.",
                            descriptiont = {
                                jp = "制限が有効かどうか確認します。"
                            },
                            minidescriptiont = {
                                jp = "制限が有効かどうか確認します。"
                            },
                            name = "hasLimitsEnabled",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if enabled, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならば有効であり、それ以外は false です。"
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether the motor is enabled.",
                            descriptiont = {
                                jp = "発動機が作動しているか確認します。",
                                pt = "Verifica se o motor está habilitado."
                            },
                            minidescriptiont = {
                                jp = "発動機が作動しているか確認します。",
                                pt = "Verifica se o motor está habilitado."
                            },
                            name = "isMotorEnabled",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if enabled, false if disabled.",
                                            descriptiont = {
                                                jp = "true ならば有効、 false ならば無効です。",
                                                pt = "True se está habilitado, senão false."
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the limits.",
                            descriptiont = {
                                jp = "制限を設定します。",
                                pt = "Configura os limites."
                            },
                            minidescriptiont = {
                                jp = "制限を設定します。",
                                pt = "Configura os limites."
                            },
                            name = "setLimits",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The lower limit, usually in meters.",
                                            descriptiont = {
                                                jp = "弧度による上限。",
                                                pt = "O limite inferior, normalmente em metros."
                                            },
                                            name = "lower",
                                            type = "number"
                                        },
                                        {
                                            description = "The upper limit, usually in meters.",
                                            descriptiont = {
                                                jp = "弧度による下限。",
                                                pt = "O limite superior, normalmente em metros."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Enables or disables the limits of the joint.",
                            descriptiont = {
                                jp = "関節の制限を有効・無効にします。",
                                pt = "Habilita/Desabilita os limites da junta."
                            },
                            minidescriptiont = {
                                jp = "関節の制限を有効・無効にします。",
                                pt = "Habilita/Desabilita os limites da junta."
                            },
                            name = "setLimitsEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True to enable, false to disable.",
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the lower limit.",
                            descriptiont = {
                                jp = "下限を設定します。",
                                pt = "Configura o limite inferior."
                            },
                            minidescriptiont = {
                                jp = "下限を設定します。",
                                pt = "Configura o limite inferior."
                            },
                            name = "setLowerLimit",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The lower limit, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による下限。",
                                                pt = "O limite inferior, normalmente em metros."
                                            },
                                            name = "lower",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the maximum motor force.",
                            descriptiont = {
                                jp = "発動機の最大力量を設定します。",
                                pt = "Configura a máxima força motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の最大力量を設定します。",
                                pt = "Configura a máxima força motora."
                            },
                            name = "setMaxMotorForce",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The maximum motor force, usually in N.",
                                            descriptiont = {
                                                jp = "通常の N (ニュートン)単位による発動機の最大力量。",
                                                pt = "A máxima força motora, normalmente em N."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Starts or stops the joint motor.",
                            descriptiont = {
                                jp = "接合部にある発動機の開始と停止を行います。",
                                pt = "Habilita/Desabilita o motor da junta."
                            },
                            minidescriptiont = {
                                jp = "接合部にある発動機の開始と停止を行います。",
                                pt = "Habilita/Desabilita o motor da junta."
                            },
                            name = "setMotorEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True to enable, false to disable.",
                                            descriptiont = {
                                                pt = "True para habilitar, false para disabilitar."
                                            },
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the motor speed.",
                            descriptiont = {
                                jp = "発動機の速度を設定します。",
                                pt = "Configura a velocidade motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の速度を設定します。",
                                pt = "Configura a velocidade motora."
                            },
                            name = "setMotorSpeed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The motor speed, usually in meters per second.",
                                            descriptiont = {
                                                jp = "１秒あたりの通常メートル単位による発動機の速度。",
                                                pt = "A velocidade motora, normalmente em metros/segundos."
                                            },
                                            name = "s",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the upper limit.",
                            descriptiont = {
                                jp = "上限を設定します。",
                                pt = "Configura o limite superior."
                            },
                            minidescriptiont = {
                                jp = "上限を設定します。",
                                pt = "Configura o limite superior."
                            },
                            name = "setUpperLimit",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The upper limit, usually in meters.",
                                            descriptiont = {
                                                jp = "通常のメートル単位による上限。",
                                                pt = "O limite superior, normalmente em metros."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Restringe movimentos relativos entre corpos para somente um eixo compartilhado."
                    },
                    name = "PrismaticJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newPulleyJoint"
                    },
                    description = "Allows you to simulate bodies connected through pulleys.",
                    descriptiont = {
                        jp = "滑車を通して接続されている物体の模擬を可能にします。\n\nFile:physicsJointPulley.png",
                        pt = "Permite simular concessões entre corpos através de polias.",
                        ru = "Позволяет симулировать тела, соединенные шкивом."
                    },
                    functions = {
                        {
                            description = "Get the total length of the rope.",
                            descriptiont = {
                                jp = "縄の全長を取得します。",
                                pt = "Obtém o comprimento total da corda."
                            },
                            minidescriptiont = {
                                jp = "縄の全長を取得します。",
                                pt = "Obtém o comprimento total da corda."
                            },
                            name = "getConstant",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The length of the rope in the joint.",
                                            descriptiont = {
                                                jp = "関節における縄の長さ。",
                                                pt = "O comprimento da corda da junta."
                                            },
                                            name = "length",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the ground anchor positions in world coordinates.",
                            descriptiont = {
                                jp = "世界座標において基礎にある錨の位置を取得します。",
                                pt = "Obtém a posição da âncora de solo nas coordenadas do mundo."
                            },
                            minidescriptiont = {
                                jp = "世界座標において基礎にある錨の位置を取得します。",
                                pt = "Obtém a posição da âncora de solo nas coordenadas do mundo."
                            },
                            name = "getGroundAnchors",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x coordinate of the first anchor.",
                                            descriptiont = {
                                                jp = "第一錨の x 座標。",
                                                pt = "A coordenada x da primeira âncora."
                                            },
                                            name = "a1x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the first anchor.",
                                            descriptiont = {
                                                jp = "第一錨の y 座標。",
                                                pt = "A coordenada y da primeira âncora."
                                            },
                                            name = "a1y",
                                            type = "number"
                                        },
                                        {
                                            description = "The x coordinate of the second anchor.",
                                            descriptiont = {
                                                jp = "第二錨の x 座標。",
                                                pt = "A coordenada x da segunda âncora."
                                            },
                                            name = "a2x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y coordinate of the second anchor.",
                                            descriptiont = {
                                                jp = "第二錨の y 座標。",
                                                pt = "A coordenada y da segunda âncora."
                                            },
                                            name = "a2y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current length of the rope segment attached to the first body.",
                            descriptiont = {
                                jp = "第一物体に接触している縄の線分において現在の長さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "第一物体に接触している縄の線分において現在の長さを取得します。"
                            },
                            name = "getLengthA",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The length of the rope segment.",
                                            descriptiont = {
                                                jp = "縄の線分においての長さ。"
                                            },
                                            name = "length",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current length of the rope segment attached to the second body.",
                            descriptiont = {
                                jp = "第二物体に接触している縄の線分において現在の長さを取得します。"
                            },
                            minidescriptiont = {
                                jp = "第二物体に接触している縄の線分において現在の長さを取得します。"
                            },
                            name = "getLengthB",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The length of the rope segment.",
                                            descriptiont = {
                                                jp = "縄の線分においての長さ。"
                                            },
                                            name = "length",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the maximum lengths of the rope segments.",
                            descriptiont = {
                                jp = "縄の線分における最大長を取得します。",
                                pt = "Obtém os comprimentos máximos dos segmentos de cordas."
                            },
                            minidescriptiont = {
                                jp = "縄の線分における最大長を取得します。",
                                pt = "Obtém os comprimentos máximos dos segmentos de cordas."
                            },
                            name = "getMaxLengths",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The maximum length of the first rope segment.",
                                            descriptiont = {
                                                jp = "第一線分における新規最大長。",
                                                pt = "O comprimento máximo do primeiro segmentos de corda."
                                            },
                                            name = "len1",
                                            type = "number"
                                        },
                                        {
                                            description = "The maximum length of the second rope segment.",
                                            descriptiont = {
                                                jp = "第二線分における新規最大長。",
                                                pt = "O comprimento máximo do segundo segmentos de corda."
                                            },
                                            name = "len2",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the pulley ratio.",
                            descriptiont = {
                                jp = "滑車の比率を取得します。",
                                pt = "Obtém a razão da polia."
                            },
                            minidescriptiont = {
                                jp = "滑車の比率を取得します。",
                                pt = "Obtém a razão da polia."
                            },
                            name = "getRatio",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The pulley ratio of the joint.",
                                            descriptiont = {
                                                jp = "関節における滑車の比率。",
                                                pt = "A razão da polia da junta."
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the total length of the rope.\n\nSetting a new length for the rope updates the maximum length values of the joint.",
                            descriptiont = {
                                jp = "縄の全長を設定します。\n\n縄に対して新しい長さを設定すると関節における最大長の値が更新されます。",
                                pt = "Configura o comprimento total da corda.\n\nConfigurando o novo comprimento para a corda atualiza-se o valor do comprimento máximo da junta."
                            },
                            minidescriptiont = {
                                jp = "縄の全長を設定します。",
                                pt = "Configura o comprimento total da corda."
                            },
                            name = "setConstant",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new length of the rope in the joint.",
                                            descriptiont = {
                                                jp = "関節における縄の新しい長さ。",
                                                pt = "O novo comprimento da corda na junta."
                                            },
                                            name = "length",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the maximum lengths of the rope segments.\n\nThe physics module also imposes maximum values for the rope segments. If the parameters exceed these values, the maximum values are set instead of the requested values.",
                            descriptiont = {
                                jp = "縄の線分における最大長を設定します。\n\n物理演算モジュールは縄の線分に対して最大値を強制します。引数での値が超過する場合は、要求された値の代わりに最大値を設定します。",
                                pt = "Configura os comprimentos máximos dos segmentos de corda.\n\nO módulo physics também impõe valores máximos para os segmentos de corda. Se os parâmetros excederem esses valores, os valores máximos são configurados em vez dos valores requisitados."
                            },
                            minidescriptiont = {
                                jp = "縄の線分における最大長を設定します。",
                                pt = "Configura os comprimentos máximos dos segmentos de corda."
                            },
                            name = "setMaxLengths",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new maximum length of the first segment.",
                                            descriptiont = {
                                                jp = "第一線分における新規最大長。",
                                                pt = "O comprimento máximo do primeiro segmento."
                                            },
                                            name = "max1",
                                            type = "number"
                                        },
                                        {
                                            description = "The new maximum length of the second segment.",
                                            descriptiont = {
                                                jp = "第二線分における新規最大長。",
                                                pt = "O comprimento máximo do segundo segmento."
                                            },
                                            name = "max2",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the pulley ratio.",
                            descriptiont = {
                                jp = "滑車の比率を設定します。",
                                pt = "Configura a razão da polia."
                            },
                            minidescriptiont = {
                                jp = "滑車の比率を設定します。",
                                pt = "Configura a razão da polia."
                            },
                            name = "setRatio",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new pulley ratio of the joint.",
                                            descriptiont = {
                                                jp = "関節における滑車の新規比率。",
                                                pt = "A nova razão da polia da junta."
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Permite simular concessões entre corpos através de polias."
                    },
                    name = "PulleyJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newRevoluteJoint"
                    },
                    description = "Allow two Bodies to revolve around a shared point.",
                    descriptiont = {
                        jp = "二つの物体にて共有される地点を中心として回転できるようにします。\n\nFile:physicsJointRevolute.png",
                        pt = "Permite que dois corpos rotacionem sobre um ponto fixo compartilhado.\n\nCriado com love.physics.newRevoluteJoint. ",
                        ru = "Позволяет вращать тела относительно общей точки. \n\nСоздается функцией love.physics.newRevoluteJoint. "
                    },
                    functions = {
                        {
                            description = "Enables or disables the joint limits.",
                            descriptiont = {
                                jp = "関節の制限を有効・無効にします。",
                                pt = "Habilita/desabilita os limites da junta."
                            },
                            minidescriptiont = {
                                jp = "関節の制限を有効・無効にします。",
                                pt = "Habilita/desabilita os limites da junta."
                            },
                            name = "setLimitsEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True to enable, false to disable.",
                                            descriptiont = {
                                                jp = "true ならば有効、 false ならば無効です。",
                                                pt = "True para habilitar, false para desabilitar."
                                            },
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Starts or stops the joint motor.",
                            descriptiont = {
                                jp = "関節の発動機において開始および停止をします。",
                                pt = "Habilita/desabilita a movimentação da junta."
                            },
                            minidescriptiont = {
                                jp = "関節の発動機において開始および停止をします。",
                                pt = "Habilita/desabilita a movimentação da junta."
                            },
                            name = "setMotorEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True to enable, false to disable.",
                                            descriptiont = {
                                                jp = "true ならば有効、 false ならば無効です。",
                                                pt = "True para habilitar, false para desabilitar."
                                            },
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current joint angle.",
                            descriptiont = {
                                jp = "関節の現在角度を取得します。",
                                pt = "Obtém o ângulo atual da junta."
                            },
                            minidescriptiont = {
                                jp = "関節の現在角度を取得します。",
                                pt = "Obtém o ângulo atual da junta."
                            },
                            name = "getJointAngle",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The joint angle in radians.",
                                            descriptiont = {
                                                jp = "弧度による関節の角度。",
                                                pt = "O ângulo da junta, em radianos."
                                            },
                                            name = "angle",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current joint angle speed.",
                            descriptiont = {
                                jp = "現在の関節における速度角を取得します。",
                                pt = "Obtém a atual velocidade angular da junta."
                            },
                            minidescriptiont = {
                                jp = "現在の関節における速度角を取得します。",
                                pt = "Obtém a atual velocidade angular da junta."
                            },
                            name = "getJointSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Joint angle speed in radians/second.",
                                            descriptiont = {
                                                jp = "関節における弧度での速度角/秒数。",
                                                pt = "A velocidade angular da junta, em radianos/segundos."
                                            },
                                            name = "s",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the joint limits.",
                            descriptiont = {
                                jp = "関節の制限を取得します。",
                                pt = "Obtém os limites da junta."
                            },
                            minidescriptiont = {
                                jp = "関節の制限を取得します。",
                                pt = "Obtém os limites da junta."
                            },
                            name = "getLimits",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The lower limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による上限。",
                                                pt = "O limite inferior, em radianos."
                                            },
                                            name = "lower",
                                            type = "number"
                                        },
                                        {
                                            description = "The upper limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による下限。",
                                                pt = "O limite superior, em radianos."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the lower limit.",
                            descriptiont = {
                                jp = "下限を取得します。",
                                pt = "Obtém o limite inferior."
                            },
                            minidescriptiont = {
                                jp = "下限を取得します。",
                                pt = "Obtém o limite inferior."
                            },
                            name = "getLowerLimit",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The lower limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による下限。",
                                                pt = "O limite inferior, em radianos."
                                            },
                                            name = "lower",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the maximum motor force.",
                            descriptiont = {
                                jp = "発動機の最大力矩を返します。",
                                pt = "Obtém a máxima força motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の最大力矩を返します。",
                                pt = "Obtém a máxima força motora."
                            },
                            name = "getMaxMotorTorque",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The maximum motor force, in Nm.",
                                            descriptiont = {
                                                jp = "Nm (ニュートン・メートル) 単位での発動機の最大力矩。",
                                                pt = "A máxima força motora, em Nm."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the motor speed.",
                            descriptiont = {
                                jp = "発動機の速度を取得します。",
                                pt = "Obtém a velocidade motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の速度を取得します。",
                                pt = "Obtém a velocidade motora."
                            },
                            name = "getMotorSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The motor speed, radians per second.",
                                            descriptiont = {
                                                jp = "１秒あたりの弧度による発動機の速度。",
                                                pt = "A velocidade motora, em radianos/segundos."
                                            },
                                            name = "s",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the current motor force.",
                            descriptiont = {
                                jp = "発動機の現在力矩を返します。",
                                pt = "Obtém a atual força motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の現在力矩を返します。",
                                pt = "Obtém a atual força motora."
                            },
                            name = "getMotorTorque",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The current motor force, in Nm.",
                                            descriptiont = {
                                                jp = "Nm (ニュートン・メートル) 単位による発動機の現在力矩。",
                                                pt = "A atual força motora, em Nm."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the upper limit.",
                            descriptiont = {
                                jp = "上限を取得します。",
                                pt = "Obtém o limite superior."
                            },
                            minidescriptiont = {
                                jp = "上限を取得します。",
                                pt = "Obtém o limite superior."
                            },
                            name = "getUpperLimit",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The upper limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による上限。",
                                                pt = "O limite superior, em radianos."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether limits are enabled.",
                            descriptiont = {
                                jp = "制限が有効かどうか確認します。"
                            },
                            minidescriptiont = {
                                jp = "制限が有効かどうか確認します。"
                            },
                            name = "hasLimitsEnabled",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if enabled, false otherwise.",
                                            descriptiont = {
                                                jp = "true ならば有効であり、それ以外は false です。"
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether the motor is enabled.",
                            descriptiont = {
                                jp = "発動機が作動しているか確認します。",
                                pt = "Verifica se a movimentação está habilitada."
                            },
                            minidescriptiont = {
                                jp = "発動機が作動しているか確認します。",
                                pt = "Verifica se a movimentação está habilitada."
                            },
                            name = "isMotorEnabled",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if enabled, false if disabled.",
                                            descriptiont = {
                                                jp = "true ならば有効、 false ならば無効です。",
                                                pt = "True se habilitada, senão false."
                                            },
                                            name = "enabled",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the limits.",
                            descriptiont = {
                                jp = "制限を設定します。",
                                pt = "Configura os limites."
                            },
                            minidescriptiont = {
                                jp = "制限を設定します。",
                                pt = "Configura os limites."
                            },
                            name = "setLimits",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The lower limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による上限。",
                                                pt = "O limite inferior, em radianos."
                                            },
                                            name = "lower",
                                            type = "number"
                                        },
                                        {
                                            description = "The upper limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による下限。",
                                                pt = "O limite superior, em radianos."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the lower limit.",
                            descriptiont = {
                                jp = "下限を設定します。",
                                pt = "Configura o limite inferior."
                            },
                            minidescriptiont = {
                                jp = "下限を設定します。",
                                pt = "Configura o limite inferior."
                            },
                            name = "setLowerLimit",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The lower limit, in radians.",
                                            descriptiont = {
                                                jp = "弧度による下限。",
                                                pt = "O limite inferior, em radianos."
                                            },
                                            name = "lower",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the maximum motor force.",
                            descriptiont = {
                                jp = "発動機の最大力矩を設定します。",
                                pt = "Configura a máxima força motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の最大力矩を設定します。",
                                pt = "Configura a máxima força motora."
                            },
                            name = "setMaxMotorTorque",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The maximum motor force, in Nm.",
                                            descriptiont = {
                                                jp = "Nm (ニュートン・メートル) 単位での発動機の最大力矩。",
                                                pt = "A máxima força motora, em Nm."
                                            },
                                            name = "f",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the motor speed.",
                            descriptiont = {
                                jp = "発動機の速度を設定します。",
                                pt = "Configura a velocidade motora."
                            },
                            minidescriptiont = {
                                jp = "発動機の速度を設定します。",
                                pt = "Configura a velocidade motora."
                            },
                            name = "setMotorSpeed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The motor speed, radians per second.",
                                            descriptiont = {
                                                jp = "１秒あたりの弧度による発動機の速度。",
                                                pt = "A velocidade motora, radianos/segundos."
                                            },
                                            name = "s",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the upper limit.",
                            descriptiont = {
                                pt = "Configura o limite superior."
                            },
                            minidescriptiont = {
                                pt = "Configura o limite superior."
                            },
                            name = "setUpperLimit",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The upper limit, in radians.",
                                            descriptiont = {
                                                pt = "O limite superior, em radianos."
                                            },
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Permite que dois corpos rotacionem sobre um ponto fixo compartilhado."
                    },
                    name = "RevoluteJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newRopeJoint"
                    },
                    description = "The RopeJoint enforces a maximum distance between two points on two bodies. It has no other effect.",
                    descriptiont = {
                        jp = "RopeJoint は二つの物体上にある二地点間の最大距離を延長します。それ以外の効果はありません。"
                    },
                    functions = {
                        {
                            description = "Gets the maximum length of a RopeJoint.",
                            descriptiont = {
                                jp = "RopeJoint の最大長を取得します。"
                            },
                            minidescriptiont = {
                                jp = "RopeJoint の最大長を取得します。"
                            },
                            name = "getMaxLength",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The maximum length of the RopeJoint.",
                                            descriptiont = {
                                                jp = "RopeJoint の最大長。"
                                            },
                                            name = "maxLength",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "RopeJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newChainShape",
                        "newEdgeShape",
                        "newPolygonShape",
                        "newRectangleShape"
                    },
                    description = "Shapes are solid 2d geometrical objects used in love.physics.\n\nShapes are attached to a Body via a Fixture. The Shape object is copied when this happens. Shape position is relative to Body position.",
                    descriptiont = {
                        de = "Formen sind feste zweidimensionale geometrische Objekte, welche die Masse und Kollisionen eines Körpers handhaben.\n\nFormen und Körper werden durch eine Befestigung zusammengefügt. Das Form-Objekt wird dazu kopiert.\n\nDie Position einer Form ist relativ zu der Position des dazugehörigen Körpers.",
                        jp = "形状は love.physics にて使用される物体にある固体の質量および衝突を扱うための二次元的な幾何学のオブジェクトです。\n\n'''形状'''は Fixture を通して Body へ取り付けられます。このときに'''形状'''オブジェクトのコピーが行われます。\n\n'''形状'''の位置は取り付けられた物体の位置と関連性があります。",
                        pt = "Formas são objetos usados para controlar massas e colisões.\n\nTodas as Formas são círculos ou polinômios, além de estarem anexadas a um Corpo.\n\nCria-se uma nova Forma com love.physics.newCircleShape, love.physics.newPolygonShape or love.physics.newRectangleShape.",
                        ru = "Формы объектов, используемых для контроля массы и столкновений.\n\nКаждая форма является либо кругом, либо многоугольником, и прикреплена к телу.\n\nСоздавайте новую форму с love.physics.newCircleShape, love.physics.newPolygonShape или love.physics.newRectangleShape."
                    },
                    functions = {
                        {
                            description = "Returns the points of the bounding box for the transformed shape.",
                            descriptiont = {
                                jp = "変形された形状に対して境界ボックスの地点を返します。"
                            },
                            minidescriptiont = {
                                jp = "変形された形状に対して境界ボックスの地点を返します。"
                            },
                            name = "computeAABB",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The translation of the shape on the x-axis.",
                                            descriptiont = {
                                                jp = "形状の x 軸における並進移動。"
                                            },
                                            name = "tx",
                                            type = "number"
                                        },
                                        {
                                            description = "The translation of the shape on the y-axis.",
                                            descriptiont = {
                                                jp = "形状の y 軸における並進移動。"
                                            },
                                            name = "ty",
                                            type = "number"
                                        },
                                        {
                                            description = "The shape rotation.",
                                            descriptiont = {
                                                jp = "形状の回転。"
                                            },
                                            name = "tr",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "The index of the child to compute the bounding box of.",
                                            descriptiont = {
                                                jp = "境界ボックスの計算をする子の索引。"
                                            },
                                            name = "childIndex",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x position of the top-left point.",
                                            descriptiont = {
                                                jp = "左上地点の x 位置。"
                                            },
                                            name = "topLeftX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the top-left point.",
                                            descriptiont = {
                                                jp = "左上地点の y 位置。"
                                            },
                                            name = "topLeftY",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the bottom-right point.",
                                            descriptiont = {
                                                jp = "右下地点の x 位置。"
                                            },
                                            name = "bottomRightX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the bottom-right point.",
                                            descriptiont = {
                                                jp = "右下地点の y 位置。"
                                            },
                                            name = "bottomRightY",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Computes the mass properties for the shape with the specified density.",
                            descriptiont = {
                                jp = "指定された密度にて形状の質量特性を計算します。"
                            },
                            minidescriptiont = {
                                jp = "形状の質量特性を計算します。"
                            },
                            name = "computeMass",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The shape density.",
                                            descriptiont = {
                                                jp = "形状の密度。"
                                            },
                                            name = "density",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x postition of the center of mass.",
                                            descriptiont = {
                                                jp = "中心の質量における x 位置。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y postition of the center of mass.",
                                            descriptiont = {
                                                jp = "中心の質量における y 位置。"
                                            },
                                            name = "y",
                                            type = "number"
                                        },
                                        {
                                            description = "The mass of the shape.",
                                            descriptiont = {
                                                jp = "形状の質量。"
                                            },
                                            name = "mass",
                                            type = "number"
                                        },
                                        {
                                            description = "The rotational inertia.",
                                            descriptiont = {
                                                jp = "回転の慣性。"
                                            },
                                            name = "inertia",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the number of children the shape has.",
                            descriptiont = {
                                jp = "形状が持っている子の数を返します。"
                            },
                            minidescriptiont = {
                                jp = "形状が持っている子の数を返します。"
                            },
                            name = "getChildCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of children.",
                                            descriptiont = {
                                                jp = "子の数。"
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the radius of the shape.",
                            descriptiont = {
                                jp = "形状の半径を取得します。"
                            },
                            minidescriptiont = {
                                jp = "形状の半径を取得します。"
                            },
                            name = "getRadius",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The radius of the shape.",
                                            descriptiont = {
                                                jp = "形状の半径。"
                                            },
                                            name = "radius",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets a string representing the Shape. This function can be useful for conditional debug drawing.",
                            descriptiont = {
                                jp = "形状の種類を文字列表現で取得します。\n\nこの関数は条件付きデバッグで描画を行う場合に有用です。",
                                pt = "Obtém uma string representando a Forma.\n\nEsta função pode ser útil para depuração de desenhos."
                            },
                            minidescriptiont = {
                                jp = "形状の種類を文字列表現で取得します。",
                                pt = "Obtém uma string representando a Forma."
                            },
                            name = "getType",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The type of the Shape.",
                                            descriptiont = {
                                                jp = "T形状の種類。",
                                                pt = "O tipo da Forma."
                                            },
                                            name = "type",
                                            type = "ShapeType"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Casts a ray against the shape and returns the surface normal vector and the line position where the ray hit. If the ray missed the shape, nil will be returned. The Shape can be transformed to get it into the desired position.\n\nThe ray starts on the first point of the input line and goes towards the second point of the line. The fourth argument is the maximum distance the ray is going to travel as a scale factor of the input line length.\n\nThe childIndex parameter is used to specify which child of a parent shape, such as a ChainShape, will be ray casted. For ChainShapes, the index of 1 is the first edge on the chain. Ray casting a parent shape will only test the child specified so if you want to test every shape of the parent, you must loop through all of its children.\n\nThe world position of the impact can be calculated by multiplying the line vector with the third return value and adding it to the line starting point.\n\nhitx, hity = x1 + (x2 - x1) * fraction, y1 + (y2 - y1) * fraction",
                            descriptiont = {
                                jp = "形状に対する斜線計算および表面法線のベクトル、さらに斜線により線が当たった位置を返します。斜線が形状を外れている場合は nil を返します。形状は希望する位置へ挿入するために変形することができます。\n\n斜線は入力線の第一地点を出発して線のある第二地点へ移動します。第四引数は入力線の長さであり規模係数として斜線が移動する最大距離です。\n\n引数 childIndex は ChainShape といった親形状に対して、どの子が斜線計算されるか指定するために使用されます。ChainShapes において、索引 1 が鎖においての最初の角です。親形状の斜線計算では指定された子に対してのみ検査されるために、すべての親形状を調査したいのであれば、その子ら全てに対して反復する必要があります。\n\n力積における世界位置は行ベクトルへ第三引数の返値を乗算して行の始点へ加算をすることで計算できます。\n\n&lt;source lang=\"lua\"&gt;hitx, hity = x1 + (x2 - x1) * fraction, y1 + (y2 - y1) * fraction&lt;/source&gt;"
                            },
                            minidescriptiont = {
                                jp = "形状に対する斜線計算を行います。"
                            },
                            name = "rayCast",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position of the input line starting point.",
                                            descriptiont = {
                                                jp = "入力線の始点として x 位置。"
                                            },
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the input line starting point.",
                                            descriptiont = {
                                                jp = "入力線の始点として y 位置。"
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the input line end point.",
                                            descriptiont = {
                                                jp = "入力線の終点として x 位置。"
                                            },
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the input line end point.",
                                            descriptiont = {
                                                jp = "入力線の終点として y 位置。"
                                            },
                                            name = "y2",
                                            type = "number"
                                        },
                                        {
                                            description = "Ray length parameter.",
                                            descriptiont = {
                                                jp = "斜線の長さにおける引数。"
                                            },
                                            name = "maxFraction",
                                            type = "number"
                                        },
                                        {
                                            description = "The translation of the shape on the x-axis.",
                                            descriptiont = {
                                                jp = "x 軸の形状における並進移動。"
                                            },
                                            name = "tx",
                                            type = "number"
                                        },
                                        {
                                            description = "The translation of the shape on the y-axis.",
                                            descriptiont = {
                                                jp = "y 軸の形状における並進移動。"
                                            },
                                            name = "ty",
                                            type = "number"
                                        },
                                        {
                                            description = "The shape rotation.",
                                            descriptiont = {
                                                jp = "形状の回転。"
                                            },
                                            name = "tr",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "The index of the child the ray gets cast against.",
                                            descriptiont = {
                                                jp = "斜線計算が行われる子の索引。"
                                            },
                                            name = "childIndex",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The x component of the normal vector of the edge where the ray hit the shape.",
                                            descriptiont = {
                                                jp = "斜線が形状に当たった場所での角の通常ベクトルにおける x 要素。"
                                            },
                                            name = "xn",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the normal vector of the edge where the ray hit the shape.",
                                            descriptiont = {
                                                jp = "斜線が形状に当たった場所での角の通常ベクトルにおける y 要素。"
                                            },
                                            name = "yn",
                                            type = "number"
                                        },
                                        {
                                            description = "The position on the input line where the intersection happened as a factor of the line length.",
                                            descriptiont = {
                                                jp = "線の長さを係数として公差が発生した入力線上の位置。"
                                            },
                                            name = "fraction",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Checks whether a point lies inside the shape. This is particularly useful for mouse interaction with the shapes. By looping through all shapes and testing the mouse position with this function, we can find which shapes the mouse touches.",
                            descriptiont = {
                                jp = "形状の内側に地点が位置するかどうか確認します。これは形状とマウスとの相互対話において特に有用です。この関数は全ての形状に対してループを行いマウスの位置を調査することで、どの形状にマウスが接触しているか検出することができます。",
                                pt = "Verifica se um ponto está dentro da Forma.\n\nEsta é uma interação entre uma Forma e o mouse particularmente interessante. Através de um busca em todas as Formas e testando com a posição do mouse com esta função, é possível encontrar qual Forma o mouse está tocando."
                            },
                            minidescriptiont = {
                                jp = "形状の内側に地点が位置するかどうか確認します。",
                                pt = "Verifica se um ponto está dentro da Forma."
                            },
                            name = "testPoint",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the point.",
                                            descriptiont = {
                                                pt = "A componente x do ponto."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the point.",
                                            descriptiont = {
                                                pt = "A componente y do ponto."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "True if inside, false if outside",
                                            descriptiont = {
                                                pt = "True se for dentro, senão falso."
                                            },
                                            name = "hit",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Formas são objetos usados para controlar massas e colisões."
                    },
                    name = "Shape",
                    parenttype = "Object",
                    subtypes = {
                        "ChainShape",
                        "CircleShape",
                        "EdgeShape",
                        "PolygonShape"
                    },
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newWeldJoint"
                    },
                    description = "A WeldJoint essentially glues two bodies together.",
                    descriptiont = {
                        jp = "本質的に WeldJoint は二つの物体を接着します。"
                    },
                    functions = {
                        {
                            description = "Returns the damping ratio of the joint.",
                            descriptiont = {
                                jp = "関節の減衰比を返します。"
                            },
                            minidescriptiont = {
                                jp = "関節の減衰比を返します。"
                            },
                            name = "getDampingRatio",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the frequency.",
                            descriptiont = {
                                jp = "振動数を返します。"
                            },
                            minidescriptiont = {
                                jp = "振動数を返します。"
                            },
                            name = "getFrequency",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The frequency in hertz.",
                                            descriptiont = {
                                                jp = "Hz (ヘルツ) 単位での振動数。"
                                            },
                                            name = "freq",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "The new damping ratio.",
                            descriptiont = {
                                jp = "減衰比を新規設定します。"
                            },
                            minidescriptiont = {
                                jp = "減衰比を新規設定します。"
                            },
                            name = "setDampingRatio",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new frequency.",
                            descriptiont = {
                                jp = "新規の振動数を設定します。"
                            },
                            minidescriptiont = {
                                jp = "新規の振動数を設定します。"
                            },
                            name = "setFrequency",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new frequency in hertz.",
                                            descriptiont = {
                                                jp = "Hz (ヘルツ) 単位での新規振動数。"
                                            },
                                            name = "freq",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "WeldJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newWheelJoint"
                    },
                    description = "Restricts a point on the second body to a line on the first body.",
                    descriptiont = {
                        jp = "第一物体の線から第二物体の地点を制限します。\n\nFile:physicsJointWheel.png"
                    },
                    functions = {
                        {
                            description = "Gets the world-space axis vector of the Wheel Joint.",
                            descriptiont = {
                                jp = "車輪関節において世界空間の軸ベクトルを取得します。"
                            },
                            minidescriptiont = {
                                jp = "車輪関節において世界空間の軸ベクトルを取得します。"
                            },
                            name = "getAxis",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x-axis coordinate of the world-space axis vector.",
                                            descriptiont = {
                                                jp = "世界空間における軸ベクトルの x 軸座標。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-axis coordinate of the world-space axis vector.",
                                            descriptiont = {
                                                jp = "世界空間における軸ベクトルの y 軸座標。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the current joint translation speed.",
                            descriptiont = {
                                jp = "現在の関節における並進移動速度を返します。"
                            },
                            minidescriptiont = {
                                jp = "現在の関節における並進移動速度を返します。"
                            },
                            name = "getJointSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The translation speed of the joint in meters per second.",
                                            descriptiont = {
                                                jp = "関節におけるメートル単位による一秒あたりの並進移動速度。"
                                            },
                                            name = "speed",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the current joint translation.",
                            descriptiont = {
                                jp = "現在の関節における並進移動を返します。"
                            },
                            minidescriptiont = {
                                jp = "現在の関節における並進移動を返します。"
                            },
                            name = "getJointTranslation",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The translation of the joint in meters.",
                                            descriptiont = {
                                                jp = "メートル単位による関節における並進移動。"
                                            },
                                            name = "position",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the joint limits.",
                            descriptiont = {},
                            minidescriptiont = {},
                            name = "getLimits",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The lower limit, usually in meters.",
                                            name = "lower",
                                            type = "number"
                                        },
                                        {
                                            description = "The upper limit, usually in meters.",
                                            name = "upper",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the maximum motor torque.",
                            descriptiont = {
                                jp = "発動機の最大力矩を返します。"
                            },
                            minidescriptiont = {
                                jp = "発動機の最大力矩を返します。"
                            },
                            name = "getMaxMotorTorque",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The maximum torque of the joint motor in newton meters.",
                                            descriptiont = {
                                                jp = "ニュートン・メートル単位での発動機の最大力矩形。"
                                            },
                                            name = "maxTorque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the speed of the motor.",
                            descriptiont = {
                                jp = "発動機の速度を返します。"
                            },
                            minidescriptiont = {
                                jp = "発動機の速度を返します。"
                            },
                            name = "getMotorSpeed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The speed of the joint motor in radians per second.",
                                            descriptiont = {
                                                jp = "１秒あたりの弧度による関節の発動機における速度。"
                                            },
                                            name = "speed",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the current torque on the motor.",
                            descriptiont = {
                                jp = "発動機の現在力矩を返します。"
                            },
                            minidescriptiont = {
                                jp = "発動機の現在力矩を返します。"
                            },
                            name = "getMotorTorque",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "How long the force applies. Usually the inverse time step or 1/dt.",
                                            descriptiont = {
                                                jp = "力量を適用する時間の長さ。通常は逆時間刻み または 1/dt (デルタタイム)です。"
                                            },
                                            name = "invdt",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The torque on the motor in newton meters.",
                                            descriptiont = {
                                                jp = "ニュートン・メートル単位による発動機の力矩。"
                                            },
                                            name = "torque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the damping ratio.",
                            descriptiont = {
                                jp = "減衰比を取得します。"
                            },
                            minidescriptiont = {
                                jp = "減衰比を取得します。"
                            },
                            name = "getSpringDampingRatio",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the spring frequency.",
                            descriptiont = {
                                jp = "新規の弾性振動数を返します。"
                            },
                            minidescriptiont = {
                                jp = "新規の弾性振動数を返します。"
                            },
                            name = "getSpringFrequency",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The frequency in hertz.",
                                            descriptiont = {
                                                jp = "Hz (ヘルツ) 単位での振動数。"
                                            },
                                            name = "freq",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new maximum motor torque.",
                            descriptiont = {
                                jp = "発動機の最大力矩を設定します。"
                            },
                            minidescriptiont = {
                                jp = "発動機の最大力矩を設定します。"
                            },
                            name = "setMaxMotorTorque",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new maximum torque for the joint motor in newton meters.",
                                            descriptiont = {
                                                jp = "ニュートン・メートル単位での発動機の新規最大力矩。"
                                            },
                                            name = "maxTorque",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Starts and stops the joint motor.",
                            descriptiont = {
                                jp = "関節の発動機において開始および停止をします。"
                            },
                            minidescriptiont = {
                                jp = "関節の発動機において開始および停止をします。"
                            },
                            name = "setMotorEnabled",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True turns the motor on and false turns it off.",
                                            descriptiont = {
                                                jp = "true ならば発動機は開始しますが、 false ならば停止します。"
                                            },
                                            name = "enable",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new speed for the motor.",
                            descriptiont = {
                                jp = "発動機の新規速度を設定します。"
                            },
                            minidescriptiont = {
                                jp = "発動機の新規速度を設定します。"
                            },
                            name = "setMotorSpeed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new speed for the joint motor in radians per second.",
                                            descriptiont = {
                                                jp = "１秒あたりの弧度による関節の発動機における新規速度。"
                                            },
                                            name = "speed",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new damping ratio.",
                            descriptiont = {
                                jp = "減衰比を新規設定します。"
                            },
                            minidescriptiont = {
                                jp = "減衰比を新規設定します。"
                            },
                            name = "setSpringDampingRatio",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new damping ratio.",
                                            descriptiont = {
                                                jp = "減衰比。"
                                            },
                                            name = "ratio",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a new spring frequency.",
                            descriptiont = {
                                jp = "新規の弾性振動数を設定します。"
                            },
                            minidescriptiont = {
                                jp = "新規の弾性振動数を設定します。"
                            },
                            name = "setSpringFrequency",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The new frequency in hertz.",
                                            descriptiont = {
                                                jp = "Hz (ヘルツ)単位での新規振動数。"
                                            },
                                            name = "freq",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {},
                    name = "WheelJoint",
                    parenttype = "Joint",
                    supertypes = {
                        "Object",
                        "Joint"
                    }
                },
                {
                    constructors = {
                        "newWorld"
                    },
                    description = "A world is an object that contains all bodies and joints.",
                    descriptiont = {
                        de = "Eine Welt ist ein Objekt, das alle Körper und Gelenke enthält.",
                        jp = "世界は物体および関節を全て内包するオブジェクトです。",
                        pt = "Um mundo é um objeto que contem corpos e juntas.\n\nCria-se um novo mundo com love.physics.newWorld.\n\nUm mundo pode chamar estas funções:",
                        ru = "Объект, содержащий все тела и соединения."
                    },
                    functions = {
                        {
                            description = "Destroys the world, taking all bodies, joints, fixtures and their shapes with it.\n\nAn error will occur if you attempt to use any of the destroyed objects after calling this function.",
                            descriptiont = {
                                jp = "世界、使用されている全ての物体、関節、取付具およびそれらを有する形状を破棄します。\n\nこの関数の呼び出し後に破壊された任意のオブジェクトを使用しようとすればエラーが発生します。",
                                ru = "Уничтожает мир и вместе с ним все содержавшиеся в нём тела, соединения, крепежи и формы. \n\nПроизойдёт ошибка, если попытаться обратиться к уничтоженному объекту после вызова этой функции."
                            },
                            minidescriptiont = {
                                jp = "世界を破棄します。",
                                ru = "Уничтожает мир."
                            },
                            name = "destroy",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Get the number of bodies in the world.",
                            descriptiont = {
                                jp = "世界にある物体の数を返します。",
                                pt = "Obtém o número de corpos no mundo."
                            },
                            minidescriptiont = {
                                jp = "世界にある物体の数を返します。",
                                pt = "Obtém o número de corpos no mundo."
                            },
                            name = "getBodyCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of bodies in the world.",
                                            descriptiont = {
                                                jp = "世界にある物体の数。",
                                                pt = "O número de corpos no mundo."
                                            },
                                            name = "n",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns a table with all bodies.",
                            descriptiont = {
                                jp = "全ての物体をテーブルで返します。"
                            },
                            minidescriptiont = {
                                jp = "全ての物体をテーブルで返します。"
                            },
                            name = "getBodyList",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A sequence with all bodies.",
                                            descriptiont = {
                                                jp = "全ての物体をシーケンスとして表したもの。"
                                            },
                                            name = "bodies",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns functions for the callbacks during the world update.",
                            descriptiont = {
                                jp = "世界更新時に呼び出されるコールバック用の関数を返します。",
                                pt = "Obtém as funções que são chamadas quando duas formas colidem."
                            },
                            minidescriptiont = {
                                jp = "世界更新時に呼び出されるコールバック用の関数を返します。",
                                pt = "Obtém as funções que são chamadas quando duas formas colidem."
                            },
                            name = "getCallbacks",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Gets called when two fixtures begin to overlap.",
                                            descriptiont = {
                                                jp = "二つの取付具が重なるときに呼ばれます。",
                                                pt = "Chamada quando da primeira colisão de duas formas."
                                            },
                                            name = "beginContact",
                                            type = "function"
                                        },
                                        {
                                            description = "Gets called when two fixtures cease to overlap.",
                                            descriptiont = {
                                                jp = "二つの取付具が重なりが離れるときに呼ばれます。",
                                                pt = "Chamada a cada quadro, se Called each frame, se a colisão dura mais de um quadro."
                                            },
                                            name = "endContact",
                                            type = "function"
                                        },
                                        {
                                            description = "Gets called before a collision gets resolved.",
                                            descriptiont = {
                                                jp = "衝突が解決される前に呼ばれます。",
                                                pt = "Chamada quando duas formas terminam de colidir."
                                            },
                                            name = "preSolve",
                                            type = "function"
                                        },
                                        {
                                            description = "Gets called after the collision has been resolved.",
                                            descriptiont = {
                                                jp = "衝突が解決された後に呼ばれます。",
                                                pt = "Sem ideia. Nunca vi ser chamada..."
                                            },
                                            name = "postSolve",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the number of contacts in the world.",
                            descriptiont = {
                                jp = "世界にある接点の数を返します。"
                            },
                            minidescriptiont = {
                                jp = "世界にある接点の数を返します。"
                            },
                            name = "getContactCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of contacts in the world.",
                                            descriptiont = {
                                                jp = "世界にある接点の数。"
                                            },
                                            name = "n",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the function for collision filtering.",
                            descriptiont = {
                                jp = "衝突をフィルタリングするための関数を返します。"
                            },
                            minidescriptiont = {
                                jp = "衝突をフィルタリングするための関数を返します。"
                            },
                            name = "getContactFilter",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The function that handles the contact filtering.",
                                            descriptiont = {
                                                jp = "接点のフィルタリングを扱う関数。"
                                            },
                                            name = "contactFilter",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns a table with all contacts.",
                            descriptiont = {
                                jp = "全ての接点をテーブルで返します。"
                            },
                            minidescriptiont = {
                                jp = "全ての接点をテーブルで返します。"
                            },
                            name = "getContactList",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A sequence with all contacts.",
                                            descriptiont = {
                                                jp = "全ての接点をシーケンスとして表したもの。"
                                            },
                                            name = "contacts",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the gravity of the world.",
                            descriptiont = {
                                jp = "世界の重力を取得します。",
                                pt = "Obtém a gravidade do mundo."
                            },
                            minidescriptiont = {
                                jp = "世界の重力を取得します。",
                                pt = "Obtém a gravidade do mundo."
                            },
                            name = "getGravity",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The x component of gravity.",
                                            descriptiont = {
                                                jp = "x 成分の重力。",
                                                pt = "A componente x da gravidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of gravity.",
                                            descriptiont = {
                                                jp = "y 成分の重力。",
                                                pt = "A componente y da gravidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Get the number of joints in the world.",
                            descriptiont = {
                                jp = "世界にある関節の個数を返します。",
                                pt = "Obtém o número de juntas no mundo."
                            },
                            minidescriptiont = {
                                jp = "世界にある関節の個数を返します。",
                                pt = "Obtém o número de juntas no mundo."
                            },
                            name = "getJointCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of joints in the world.",
                                            descriptiont = {
                                                jp = "世界にある関節の個数。",
                                                pt = "O número de juntas no mundo."
                                            },
                                            name = "n",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns a table with all joints.",
                            descriptiont = {
                                jp = "全ての関節をテーブルで返します。"
                            },
                            minidescriptiont = {
                                jp = "全ての関節をテーブルで返します。"
                            },
                            name = "getJointList",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "A sequence with all joints.",
                                            descriptiont = {
                                                jp = "全ての関節をシーケンスとして表したもの。"
                                            },
                                            name = "joints",
                                            type = "table"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets whether the World is destroyed. Destroyed worlds cannot be used.",
                            descriptiont = {
                                jp = "世界が破棄されたかどうかを取得します。破棄された世界は再利用できません。"
                            },
                            minidescriptiont = {
                                jp = "世界が破棄されたかどうかを取得します。"
                            },
                            name = "isDestroyed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Whether the World is destroyed.",
                                            descriptiont = {
                                                jp = "世界が破棄されたかどうか。"
                                            },
                                            name = "destroyed",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns if the world is updating its state.\n\nThis will return true inside the callbacks from World:setCallbacks.",
                            descriptiont = {
                                jp = "世界の状態において更新中であるかどうかを返します。\n\nこれは World:setCallbacks の内部から true を返します。"
                            },
                            minidescriptiont = {
                                jp = "世界の状態において更新中であるかどうかを返します。"
                            },
                            name = "isLocked",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Will be true if the world is in the process of updating its state.",
                                            descriptiont = {
                                                jp = "true ならば世界の状態において更新処理中です。"
                                            },
                                            name = "locked",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the sleep behaviour of the world.",
                            descriptiont = {
                                jp = "世界における休止状態を取得します。"
                            },
                            minidescriptiont = {
                                jp = "世界における休止状態を取得します。"
                            },
                            name = "isSleepingAllowed",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the bodies are allowed to sleep or false if not.",
                                            descriptiont = {
                                                jp = "true ならば世界にある物体の休止は許可されており、それ以外は false です。"
                                            },
                                            name = "allowSleep",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Calls a function for each fixture inside the specified area.",
                            descriptiont = {
                                jp = "境界ボックスに重なり合っているものを検索することで指定された領域内にある各取付具に対して関数を呼び出します (Fixture:getBoundingBox)。\n\nFile:WorldqueryBoundingBox.png"
                            },
                            minidescriptiont = {
                                jp = "指定された領域内にある各取付具に対して関数を呼び出します。"
                            },
                            name = "queryBoundingBox",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position of the top-left point.",
                                            descriptiont = {
                                                jp = "左上地点の x 位置。"
                                            },
                                            name = "topLeftX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the top-left point.",
                                            descriptiont = {
                                                jp = "左上地点の y 位置。"
                                            },
                                            name = "topLeftY",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the bottom-right point.",
                                            descriptiont = {
                                                jp = "右下地点の x 位置。"
                                            },
                                            name = "bottomRightX",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the bottom-right point.",
                                            descriptiont = {
                                                jp = "右下地点の y 位置。"
                                            },
                                            name = "bottomRightY",
                                            type = "number"
                                        },
                                        {
                                            description = "This function gets passed one argument, the fixture, and should return a boolean. The search will continue if it is true or stop if it is false.",
                                            descriptiont = {
                                                jp = "この関数は渡された引数の取得を行ってから、取付具、およびブール式で返します。 true ならば探索を継続しますが false であれば 探索を中止します。"
                                            },
                                            name = "callback",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Casts a ray and calls a function for each fixtures it intersects.",
                            descriptiont = {
                                jp = "斜線計算を行い、それと交差する取付具がある関数を呼び出します。コールバックの順序に関しては推定することができません。\n\n関数の呼び出し毎に、六種類の引数が関数へ渡されます。"
                            },
                            minidescriptiont = {
                                jp = "斜線計算を行い、それと交差する取付具がある関数を呼び出します。"
                            },
                            name = "rayCast",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x position of the starting point of the ray.",
                                            descriptiont = {
                                                jp = "斜線の始点として x 位置。"
                                            },
                                            name = "x1",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the starting point of the ray.",
                                            descriptiont = {
                                                jp = "斜線の始点として y 位置。"
                                            },
                                            name = "y1",
                                            type = "number"
                                        },
                                        {
                                            description = "The x position of the end point of the ray.",
                                            descriptiont = {
                                                jp = "斜線の終点として x 位置。"
                                            },
                                            name = "x2",
                                            type = "number"
                                        },
                                        {
                                            description = "The y position of the end point of the ray.",
                                            descriptiont = {
                                                jp = "斜線の終点として y 位置。"
                                            },
                                            name = "y2",
                                            type = "number"
                                        },
                                        {
                                            description = "This function gets six arguments and should return a number.",
                                            descriptiont = {
                                                jp = "この関数は六種類の引数を取得して必ず数値を返します。"
                                            },
                                            name = "callback",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets functions for the collision callbacks during the world update.\n\nFour Lua functions can be given as arguments. The value nil removes a function.\n\nWhen called, each function will be passed three arguments. The first two arguments are the colliding fixtures and the third argument is the Contact between them. The PostSolve callback additionally gets the normal and tangent impulse for each contact point.",
                            descriptiont = {
                                jp = "世界を更新する間に発生する衝突コールバックに対して関数を設定します。\n\n四種類の Lua 関数を引数として与えることができます。nil 値は関数を削除します。\n\n呼ばれたときには、各関数へ三つの引数が渡されます。最初の二つの引数は衝突が発生する取付具です。第三引数は、それらの間にある接点です。 postSolve コールバックは、各接点に対する追加の法線および接線力積を取得します。詳しくは注釈を参照してください。\n\n各コールバックがいつ呼ばれることについて正確に知ることに興味があるならば、 Box2D の説明書を調べてください。",
                                pt = "Configura as função que são chamadas quando formas colidem.\n\nQuadro funções Lua podem ser dadas como argumentos. O valor nil pode ser passado para eventos que não são interessantes.\n\nQuando chamadas, cada função irá passar três argumentos. Os primeiros dois argumentos (um para cada forma) irão passar dados que foram configurados com Shape:setData (ou nil). O terceiro argumento passa o Contact entre as duas formas.\n\n'''Nota:''' Usando Shape:destroy quando há um callback remove ativo pode provocar acidente. Uma possível solução para isso é através da destruição de objetos que não tem contatos ativos com qualquer outra coisa."
                            },
                            minidescriptiont = {
                                jp = "形状の衝突時に呼ばれる関数を設定します。",
                                pt = "Configura as função que são chamadas quando formas colidem."
                            },
                            name = "setCallbacks",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "Gets called when two fixtures begin to overlap. ",
                                            descriptiont = {
                                                jp = "二つの取付具が並行し始める時に呼ばれます。",
                                                pt = "Chamada quando da primeira colisão de duas formas."
                                            },
                                            name = "beginContact",
                                            type = "function"
                                        },
                                        {
                                            description = "Gets called when two fixtures cease to overlap.",
                                            descriptiont = {
                                                jp = "二つの取付具が並行を終える時に呼ばれます。これに関してはオブジェクトの衝突が破棄されるときに、世界の更新において外部で呼ばれます。",
                                                pt = "Chamada a cada quadro, se Called each frame, se a colisão dura mais de um quadro."
                                            },
                                            name = "endContact",
                                            type = "function"
                                        },
                                        {
                                            description = "Gets called before a collision gets resolved.",
                                            descriptiont = {
                                                jp = "衝突が解決される前に呼ばれます。",
                                                pt = "Chamada quando duas formas terminam de colidir."
                                            },
                                            name = "preSolve",
                                            type = "function"
                                        },
                                        {
                                            description = "Gets called after the collision has been resolved.",
                                            descriptiont = {
                                                jp = "衝突が解決された後に呼ばれます。",
                                                pt = "Sem ideia. Nunca vi ser chamada..."
                                            },
                                            name = "postSolve",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets a function for collision filtering.\n\nIf the group and category filtering doesn't generate a collision decision, this function gets called with the two fixtures as arguments. The function should return a boolean value where true means the fixtures will collide and false means they will pass through each other.",
                            descriptiont = {
                                jp = "衝突をフィルタリングするために関数を設定します。\n\n群および分類のフィルタリングが衝突判定を生成しない場合は、この関数は引数として二つの取付具を与えられて呼び出されます。関数ではブール値として ture は取付具と衝突するといった意味で false は互いに 通り過ぎるといった意味で返してください。"
                            },
                            minidescriptiont = {
                                jp = "衝突をフィルタリングするために関数を設定します。"
                            },
                            name = "setContactFilter",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The function handling the contact filtering.",
                                            descriptiont = {
                                                jp = "接点のフィルタリングを扱う関数。"
                                            },
                                            name = "filter",
                                            type = "function"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the gravity of the world.",
                            descriptiont = {
                                jp = "世界の重力を設定します。",
                                pt = "Configura a gravidade do mundo."
                            },
                            minidescriptiont = {
                                jp = "世界の重力を設定します。",
                                pt = "Configura a gravidade do mundo."
                            },
                            name = "setGravity",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of gravity.",
                                            descriptiont = {
                                                jp = "x 成分の重力。",
                                                pt = "A componente x da gravidade."
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of gravity.",
                                            descriptiont = {
                                                jp = "y 成分の重力。",
                                                pt = "A componente y da gravidade."
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Set the sleep behaviour of the world.\n\nA sleeping body is much more efficient to simulate than when awake.\n\nIf sleeping is allowed, any body that has come to rest will sleep.",
                            descriptiont = {
                                jp = "世界における休止状態を設定します。"
                            },
                            minidescriptiont = {
                                jp = "世界における休止状態を設定します。"
                            },
                            name = "setSleepingAllowed",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "True if the bodies are allowed to sleep or false if not.",
                                            descriptiont = {
                                                jp = "true ならば世界にある物体の休止は許可されており、それ以外は false です。"
                                            },
                                            name = "allowSleep",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Translates the World's origin. Useful in large worlds where floating point precision issues become noticeable at far distances from the origin.",
                            descriptiont = {
                                jp = "世界の原点を並進します。原点から距離が著しく遠いことが原因で浮動小数点に関する精度問題が発生してしまう大規模世界において有用です。"
                            },
                            minidescriptiont = {
                                jp = "世界の原点を並進します。"
                            },
                            name = "translateOrigin",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The x component of the new origin with respect to the old origin.",
                                            descriptiont = {
                                                jp = "旧原点に関する新原点の x 要素。"
                                            },
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y component of the new origin with respect to the old origin.",
                                            descriptiont = {
                                                jp = "旧原点に関する新原点の y 要素。"
                                            },
                                            name = "y",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Update the state of the world.",
                            descriptiont = {
                                jp = "世界の状態を更新します。",
                                pt = "Atualiza o estado do mundo."
                            },
                            minidescriptiont = {
                                jp = "世界の状態を更新します。",
                                pt = "Atualiza o estado do mundo."
                            },
                            name = "update",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The time (in seconds) to advance the physics simulation.",
                                            descriptiont = {
                                                jp = "物理模擬を進行する時間(秒単位)。",
                                                pt = "O tempo, em segundos, para avançar a simulação fisica."
                                            },
                                            name = "dt",
                                            type = "number"
                                        }
                                    },
                                    descriptiont = {
                                        pt = "=== Sinapse ===\n\n&lt;source lang=\"lua\"&gt;\n\nWorld:update( dt )\n\n&lt;/source&gt;"
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Um mundo é um objeto que contem corpos e juntas."
                    },
                    name = "World",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "This module is responsible for decoding sound files. It can't play the sounds, see love.audio for that.",
            functions = {
                {
                    description = "Attempts to find a decoder for the encoded sound data in the specified file.",
                    descriptiont = {
                        jp = "指定のファイルにある符号化されたデータから復号方法の検出を試行します。",
                        ko = "지정한 사운드 파일의 포맷에 대응되는 Decoder를 생성합니다.",
                        pt = "Tenta encontrar um decodificador para os dados do som codificado no arquivo especificado.",
                        ru = "Попытки найти декодер для закодированных данных звука в указанном файле."
                    },
                    minidescriptiont = {
                        jp = "Decorder は指定されたファイルにある符号化済み音声データの検出を行います。",
                        ko = "지정한 사운드 파일의 포맷에 대응되는 Decoder를 생성합니다.",
                        pt = "Tenta encontrar um decodificador para os dados do som codificado no arquivo especificado.",
                        ru = "Попытки найти декодер для закодированных данных звука в указанном файле."
                    },
                    name = "newDecoder",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The file with encoded sound data.",
                                    descriptiont = {
                                        jp = "File は符号化された音声データです。",
                                        ko = "사운드 파일.",
                                        pt = "O arquivo com os dados do som codificado.",
                                        ru = "Объект File с закодированными данными звука."
                                    },
                                    name = "file",
                                    type = "File"
                                },
                                {
                                    default = "2048",
                                    description = "The size of each decoded chunk, in bytes.",
                                    descriptiont = {
                                        jp = "バイト単位で復号化を行うチャンクの大きさ。",
                                        ko = "파일 조각의 크기. 바이트 단위.",
                                        pt = "O tamanho de cada pedaço decodificado, em bytes.",
                                        ru = "Размер каждого декодированного блока в байтах."
                                    },
                                    name = "buffer",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Decoder object.",
                                    descriptiont = {
                                        jp = "新規 Decoder オブジェクト。",
                                        ko = "Decoder 객체.",
                                        pt = "Um novo objeto Decoder.",
                                        ru = "Новый объект Decoder."
                                    },
                                    name = "decoder",
                                    type = "Decoder"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The filename of the file with encoded sound data.",
                                    descriptiont = {
                                        jp = "符号化された音声データを有する File のファイル名称を指定します。",
                                        ko = "사운드 파일의 이름.",
                                        pt = "O novo do arquivo com os dados do som codificados.",
                                        ru = "Имя файла с закодированными данными звука."
                                    },
                                    name = "filename",
                                    type = "string"
                                },
                                {
                                    default = "2048",
                                    description = "The size of each decoded chunk, in bytes.",
                                    descriptiont = {
                                        jp = "バイト単位で復号化を行うチャンクの大きさ。",
                                        ko = "파일 조각의 크기. 바이트 단위.",
                                        pt = "O tamanho de cada pedaço decodificado, em bytes.",
                                        ru = "Размер каждого декодированного блока в байтах."
                                    },
                                    name = "buffer",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Decoder object.",
                                    descriptiont = {
                                        jp = "新規 Decoder オブジェクト。",
                                        ko = "Decoder 객체.",
                                        pt = "Um novo objeto Decoder.",
                                        ru = "Новый объект Decoder."
                                    },
                                    name = "decoder",
                                    type = "Decoder"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates new SoundData from a file. It's also possible to create SoundData with a custom sample rate, channel and bit depth.\n\nThe sound data will be decoded to the memory in a raw format. It is recommended to create only short sounds like effects, as a 3 minute song uses 30 MB of memory this way.",
                    descriptiont = {
                        jp = "ファイルパス, File, または Decoder から SoundData を新規作成します。 サンプルレート、チャンネル、ビット深度を指定して SoundData を作成することもできます。\n\n音声データは生の形式でメモリへ復号します。この方法において 3 分の楽曲では 30 MB のメモリを使用するため、効果音のような短い音声でのみ作成を推奨します。",
                        ko = "새로운 SoundData를 생성합니다.\n\n생성자 가운데 파일 이름, File, Decoder를 인수로 취하는 것은 모두 내부적으로 Decoder를 사용합니다. 다만 사운드를 모두 디코딩해 메모리에 올려놓습니다.\n\n마지막 생성자는 샘플 레이트와 채널 등을 이용해 빈 메모리 공간을 할당합니다만 자주 사용되는 방법은 아닙니다.",
                        pt = "Cria um novo SoundData de um Decoder.\n\nExpande completamente um SoundData codificado em modo \"cru\". Faça isso somente para pequenos arquivos.",
                        ru = "Создает объект SoundData из Decoder. \n\nПолностью расширяет закодированные данные звука в исходные данные звука. Делайте это только для небольших файлов."
                    },
                    minidescriptiont = {
                        jp = "SoundData を新規作成します。",
                        ko = "새로운 SoundData를 생성합니다.",
                        pt = "Cria um novo SoundData de um Decoder.",
                        ru = "Создает объект SoundData из Decoder."
                    },
                    name = "newSoundData",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The filename of the file to load.",
                                    descriptiont = {
                                        ko = "사운드 파일의 이름.",
                                        pt = "O nome de arquivo do arquivo a ser carregado.",
                                        ru = "Имя файла для загрузки."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A new SoundData object.",
                                    descriptiont = {
                                        ko = "새로운 SoundData 객체.",
                                        pt = "Um novo objeto SoundData.",
                                        ru = "Новый объект SoundData."
                                    },
                                    name = "soundData",
                                    type = "SoundData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A File pointing to an audio file.",
                                    descriptiont = {
                                        ko = "사운드 파일."
                                    },
                                    name = "file",
                                    type = "File"
                                }
                            },
                            returns = {
                                {
                                    description = "A new SoundData object.",
                                    descriptiont = {
                                        ko = "새로운 SoundData 객체."
                                    },
                                    name = "soundData",
                                    type = "SoundData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The encoded data to decode into audio.",
                                    name = "data",
                                    type = "Data"
                                }
                            },
                            returns = {
                                {
                                    description = "A new SoundData object.",
                                    name = "soundData",
                                    type = "SoundData"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Total number of samples.",
                                    descriptiont = {
                                        jp = "合計サンプル数。",
                                        ko = "총 샘플 수.",
                                        pt = "O número total de amostras.",
                                        ru = "Общее количество сэмплов."
                                    },
                                    name = "samples",
                                    type = "number"
                                },
                                {
                                    default = "44100",
                                    description = "Number of samples per second",
                                    descriptiont = {
                                        jp = "秒ごとのサンプル数。",
                                        ko = "샘플 레이트.",
                                        pt = "Número de amostras por segundos.",
                                        ru = "Сэмплов в секунду"
                                    },
                                    name = "rate",
                                    type = "number"
                                },
                                {
                                    default = "16",
                                    description = "Bits per sample (8 or 16).",
                                    descriptiont = {
                                        jp = "ビットごとのサンプル数 (8 または 16)。",
                                        ko = "샘플 당 비트 수. 8 혹은 16.",
                                        pt = "Número de bits por amostras (8 ou 16).",
                                        ru = "Бит на сэмпл (8 или 16)."
                                    },
                                    name = "bits",
                                    type = "number"
                                },
                                {
                                    default = "2",
                                    description = "Either 1 for mono or 2 for stereo.",
                                    descriptiont = {
                                        jp = "1 でモノラル または 2 でステレオ のいずれか。",
                                        ko = "채널 수. 1은 모노, 2는 스테레오.",
                                        pt = "1 para mono, 2 para estério.",
                                        ru = "Либо 1 для моно, либо 2 для стерео."
                                    },
                                    name = "channels",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A new SoundData object.",
                                    descriptiont = {
                                        jp = "新規 SoundData オブジェクト。",
                                        ko = "새로운 SoundData 객체.",
                                        pt = "Um novo objeto SoundData, ou zero em caso de erros.",
                                        ru = "Новый объект SoundData или 0, если произошла ошибка."
                                    },
                                    name = "soundData",
                                    type = "SoundData"
                                }
                            }
                        }
                    }
                }
            },
            name = "sound",
            types = {
                {
                    constructors = {
                        "newDecoder"
                    },
                    description = "An object which can gradually decode a sound file.",
                    descriptiont = {
                        jp = "音声ファイルを段階的に復号化できるオブジェクトです。",
                        ko = "사운드 파일을 디코딩하는 객체입니다. 파일의 확장자로부터 오디오 포맷(MP3, Ogg Vorvis, 압축된 WAVE)을 추정하여 이에 대응되는 디코딩 알고리즘을 선정하고, 실제 오디오 파일이 재생되었을 때 선정한 알고리즘을 이용해 디코딩합니다.\n\n디코더는 자원을 절약하기 위해 매우 효율적으로 동작합니다. 파일을 일정한 크기로 쪼갠 후, Source에 의해 오디오가 재생될 때 재생되고 있는 부분에 맞추어 파일 조각을 읽어들입니다.",
                        pt = "Um objeto que pode decodificar gradualmente um arquivo de som.",
                        ru = "Объект, который может декодировать звуковой файл постепенно."
                    },
                    functions = {
                        {
                            description = "Returns the number of bits per sample.",
                            descriptiont = {
                                jp = "サンプルごとのビット数を返します。",
                                ko = "샘플 당 비트 수를 구합니다.",
                                pt = "Retorna o número de bits por amostra."
                            },
                            minidescriptiont = {
                                jp = "サンプルごとのビット数を返します。",
                                ko = "샘플 당 비트 수를 구합니다.",
                                pt = "Retorna o número de bits por amostra."
                            },
                            name = "getBitDepth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Either 8 or 16.",
                                            descriptiont = {
                                                jp = "8 または 16 のどちらかです。",
                                                ko = "8 혹은 16.",
                                                pt = "8 ou 16."
                                            },
                                            name = "bitDepth",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the number of channels in the stream.",
                            descriptiont = {
                                jp = "ストリームのチャンネル数を取得します。",
                                ko = "채널 수를 구합니다.",
                                pt = "Retorna o número de canais de um fluxo."
                            },
                            minidescriptiont = {
                                jp = "ストリームのチャンネル数を取得します。",
                                ko = "채널 수를 구합니다.",
                                pt = "Retorna o número de canais de um fluxo."
                            },
                            name = "getChannels",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "1 for mono, 2 for stereo.",
                                            descriptiont = {
                                                jp = "1 はモノラル、 2 はステレオ です。",
                                                ko = "1은 모노, 2는 스테레오.",
                                                pt = "1 é mono, 2 é estéreo."
                                            },
                                            name = "channels",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the duration of the sound file. It may not always be sample-accurate, and it may return -1 if the duration cannot be determined at all.",
                            descriptiont = {
                                jp = "音声ファイルの継続時間を取得します。常にサンプルは不正確であるため、持続時間を全く測定できない場合は -1 を返します。"
                            },
                            minidescriptiont = {
                                jp = "音声ファイルの継続時間を取得します。"
                            },
                            name = "getDuration",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The duration of the sound file in seconds, or -1 if it cannot be determined.",
                                            descriptiont = {
                                                jp = "音声ファイルの継続時間、または -1 ならば測定不能です。"
                                            },
                                            name = "duration",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the sample rate of the Decoder.",
                            descriptiont = {
                                jp = "Decoder のサンプル・レートを返します。",
                                ko = "샘플 레이트를 구합니다.",
                                pt = "Retorna a taxa de amostragem do Decoder."
                            },
                            minidescriptiont = {
                                jp = "Decoder のサンプル・レートを返します。",
                                ko = "샘플 레이트를 구합니다.",
                                pt = "Retorna a taxa de amostragem do Decoder."
                            },
                            name = "getSampleRate",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Number of samples per second.",
                                            descriptiont = {
                                                jp = "1 秒当たりのサンプル数。",
                                                ko = "초당 샘플 수.",
                                                pt = "Número de amostras por segundo."
                                            },
                                            name = "rate",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Um objeto que pode decodificar gradualmente um arquivo de som."
                    },
                    name = "Decoder",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "newSoundData"
                    },
                    description = "Contains raw audio samples. You can not play SoundData back directly. You must wrap a Source object around it.",
                    descriptiont = {
                        jp = "生の音声サンプルが含まれます。\n\n直接的に SoundData では再生できません。必ず Source オブジェクトへ送ってください。",
                        ko = "실제 오디오 데이터를 메모리에 가지고 있는 객체입니다.\n\n객체 생성 즉시 사운드 파일을 전부 메모리에 올립니다. 따라서 실제 재생되고 있는 위치에 따라 부분부분 메모리에 등재하는 디코더와는 달리 빠른 반응속도를 기대할 수 있습니다. 그러나 파일이 통째로 메모리에 올라가기 때문에 너무 큰 파일을 SoundData로 불러들이는 것은 메모리를 과도하게 차지할 수도 있습니다.",
                        pt = "Contém amostras de áudio bruto.\n\nVocê não pode tocar um SoundData diretamente. É necessário encapsular com um objeto Source.",
                        ru = "Содержит не обработанные аудио данные.\n\nЧтобы воспроизвести эти данные, вы должны сначала загрузить их в объект Source."
                    },
                    functions = {
                        {
                            description = "Returns the number of bits per sample.",
                            descriptiont = {
                                jp = "サンプルごとのビット数を返します。",
                                ko = "샘플 당 비트 수를 구합니다.",
                                pt = "Retorna o número de bits por amostra."
                            },
                            minidescriptiont = {
                                jp = "サンプルごとのビット数を返します。",
                                ko = "샘플 당 비트 수를 구합니다.",
                                pt = "Retorna o número de bits por amostra."
                            },
                            name = "getBitDepth",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Either 8 or 16.",
                                            descriptiont = {
                                                jp = "8 または 16 のどちらかです。",
                                                ko = "8 혹은 16.",
                                                pt = "8 ou 16."
                                            },
                                            name = "bits",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the number of channels in the stream.",
                            descriptiont = {
                                jp = "ストリームのチャンネル数を取得します。",
                                ko = "채널 수를 구합니다.",
                                pt = "Retorna o número de canais de um fluxo."
                            },
                            minidescriptiont = {
                                jp = "ストリームのチャンネル数を取得します。",
                                ko = "채널 수를 구합니다.",
                                pt = "Retorna o número de canais de um fluxo."
                            },
                            name = "getChannels",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "1 for mono, 2 for stereo.",
                                            descriptiont = {
                                                jp = "1 はモノラル、 2 はステレオ です。",
                                                ko = "1은 모노, 2는 스테레오.",
                                                pt = "1 é mono, 2 é estéreo."
                                            },
                                            name = "channels",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the duration of the sound data.",
                            descriptiont = {
                                jp = "音声データの長さを取得します。",
                                ko = "총 재생 시간을 구합니다.",
                                pt = "Obtém a duração do SoundData."
                            },
                            minidescriptiont = {
                                jp = "音声データの長さを取得します。",
                                ko = "총 재생 시간을 구합니다.",
                                pt = "Obtém a duração do SoundData."
                            },
                            name = "getDuration",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The duration of the sound data in seconds.",
                                            descriptiont = {
                                                jp = "音声データの長さを秒数で返します。",
                                                ko = "총 재생 시간(초).",
                                                pt = "A duração do SoundData em segundos."
                                            },
                                            name = "duration",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Gets the sample at the specified position.",
                            descriptiont = {
                                jp = "指定された位置のサンプルを取得します。",
                                ko = "특정 위치의 샘플을 구합니다.",
                                pt = "Obtém uma amostra de uma posição específica."
                            },
                            minidescriptiont = {
                                jp = "指定された位置のサンプルを取得します。",
                                ko = "특정 위치의 샘플을 구합니다.",
                                pt = "Obtém uma amostra de uma posição específica."
                            },
                            name = "getSample",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "An integer value specifying the position of the sample (0 points to the first sample).",
                                            descriptiont = {
                                                jp = "サンプルの位置を指定するための整数値 (0 は最初のサンプルへの位置)。",
                                                ko = "샘플의 위치(0은 첫 번째 샘플을 의미).",
                                                pt = "A posição da amostra (0 significa a primeira amostra)."
                                            },
                                            name = "i",
                                            type = "number"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The normalized sample (range -1.0 to 1.0).",
                                            descriptiont = {
                                                jp = "正規化されたサンプル(範囲は -1.0 から 1.0)。",
                                                ko = "정규화된 샘플(-1.0부터 1.0 사이).",
                                                pt = "A amostra normalizada (intervalo de -1.0 até 1.0)."
                                            },
                                            name = "sample",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the number of samples per channel of the SoundData.",
                            descriptiont = {
                                jp = "SoundData のチャンネルごとにサンプル数を返します。",
                                ko = "샘플 수를 구합니다.",
                                pt = "Retorna a contagem de amostras do SoundData."
                            },
                            minidescriptiont = {
                                jp = "SoundData のサンプル数を返します。",
                                ko = "샘플 수를 구합니다.",
                                pt = "Retorna a contagem de amostras do SoundData."
                            },
                            name = "getSampleCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Total number of samples.",
                                            descriptiont = {
                                                jp = "合計サンプル数。",
                                                ko = "총 샘플 수.",
                                                pt = "Número total de amostras."
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Returns the sample rate of the SoundData.",
                            descriptiont = {
                                jp = "SoundData のサンプル・レートを返します。",
                                ko = "샘플 레이트를 구합니다.",
                                pt = "Retorna a taxa de amostragem do SoundData."
                            },
                            minidescriptiont = {
                                jp = "SoundData のサンプル・レートを返します。",
                                ko = "샘플 레이트를 구합니다.",
                                pt = "Retorna a taxa de amostragem do SoundData."
                            },
                            name = "getSampleRate",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "Number of samples per second.",
                                            descriptiont = {
                                                jp = "1秒当たりのサンプル数。",
                                                ko = "초당 샘플 수.",
                                                pt = "Número de amostras por segundo."
                                            },
                                            name = "rate",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Sets the sample at the specified position.",
                            descriptiont = {
                                jp = "指定された位置のサンプルを設定します。",
                                ko = "특정 위치의 샘플을 설정합니다.",
                                pt = "Configura a amostragem de uma posição específica."
                            },
                            minidescriptiont = {
                                jp = "指定された位置のサンプルを設定します。",
                                ko = "특정 위치의 샘플을 설정합니다.",
                                pt = "Configura a amostragem de uma posição específica."
                            },
                            name = "setSample",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The position of the sample (0 means first sample).",
                                            descriptiont = {
                                                jp = "サンプルの位置 (0 は最初のサンプルという意味です)。",
                                                ko = "샘플의 위치(0은 첫 번째 샘플을 의미).",
                                                pt = "A posição da amostra (0 significa a primeira amostra)."
                                            },
                                            name = "i",
                                            type = "number"
                                        },
                                        {
                                            description = "A normalized sample (range -1.0 to 1.0).",
                                            descriptiont = {
                                                jp = "正規化されたサンプル(範囲は -1.0 から 1.0)。",
                                                ko = "정규화된 샘플(-1.0부터 1.0 사이).",
                                                pt = "Uma amostra normalizada (intervalo de -1.0 até 1.0)."
                                            },
                                            name = "sample",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Contém amostras de áudio bruto."
                    },
                    name = "SoundData",
                    parenttype = "Data",
                    supertypes = {
                        "Data",
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides access to information about the user's system.",
            enums = {
                {
                    constants = {
                        {
                            description = "Cannot determine power status.",
                            descriptiont = {
                                jp = "電源供給の方法を特定できません。",
                                ko = "상태를 알 수 없음."
                            },
                            name = "unknown"
                        },
                        {
                            description = "Not plugged in, running on a battery.",
                            descriptiont = {
                                jp = "電源プラグが刺さっていませんが、バッテリで動作しています。",
                                ko = "전원이 공급되고 있지 않아 배터리를 소모하는 중."
                            },
                            name = "battery"
                        },
                        {
                            description = "Plugged in, no battery available.",
                            descriptiont = {
                                jp = "電源プラグが刺さっていますが、バッテリがありません。",
                                ko = "전원이 공급되고 있긴 하나 배터리를 사용할 수 없음."
                            },
                            name = "nobattery"
                        },
                        {
                            description = "Plugged in, charging battery.",
                            descriptiont = {
                                jp = "電源プラグが刺さっており、バッテリは充電中です。",
                                ko = "전원이 공급되고 있으며 배터리 충전중."
                            },
                            name = "charging"
                        },
                        {
                            description = "Plugged in, battery is fully charged.",
                            descriptiont = {
                                jp = "電源プラグが刺さっており、バッテリは充電完了しています。",
                                ko = "전원이 공급되고 있으며 배터리가 완충되어 있음."
                            },
                            name = "charged"
                        }
                    },
                    description = "The basic state of the system's power supply.",
                    descriptiont = {
                        jp = "システムの電源供給における基本状態です。",
                        ko = "배터리를 사용하는 기기에서 간단한 전원 공급 상태를 나타냅니다."
                    },
                    minidescriptiont = {
                        jp = "システムの電源供給における基本状態です。",
                        ko = "배터리를 사용하는 기기에서 간단한 전원 공급 상태를 나타냅니다."
                    },
                    name = "PowerState"
                }
            },
            functions = {
                {
                    description = "Gets text from the clipboard.",
                    descriptiont = {
                        de = "Gibt einen Text aus der Zwischenablage zurück.",
                        jp = "クリップボードからテキストを取得します。",
                        ko = "클립보드에 저장된 텍스트를 얻어옵니다.",
                        ru = "Получает текст из буфера обмена."
                    },
                    minidescriptiont = {
                        de = "Gibt einen Text aus der Zwischenablage zurück.",
                        jp = "クリップボードからテキストを取得します。",
                        ko = "클립보드에 저장된 텍스트를 얻어옵니다.",
                        ru = "Получает текст из буфера обмена."
                    },
                    name = "getClipboardText",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The text currently held in the system's clipboard.",
                                    descriptiont = {
                                        de = "Der Text welcher sich in der Zwischenablage des Systems befindet.",
                                        jp = "システムのクリップボードが現在保持しているテキスト。",
                                        ko = "현재 클립보드에 들어있는 텍스트.",
                                        ru = "Текст который содержится в буфере обмена системы."
                                    },
                                    name = "text",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current operating system. In general, LÖVE abstracts away the need to know the current operating system, but there are a few cases where it can be useful (especially in combination with os.execute.)",
                    descriptiont = {
                        de = "Gibt das Betriebssystem aus, auf welchem LÖVE gerade ausgeführt wird. \n\nIm Allgemeinen ist es nicht wichtig ob LÖVE weiß auf welchem Betriebssystem es läuft, aber es gibt einige Fälle wo dies wichtig sein kann (hauptsächlich in Kombination mit os.execute.)",
                        jp = "現在のオペレーティングシステムを取得します。一般に、 LÖVE でオペレーティングシステムを検出する必要がある場合には抽象的過ぎますが、有用な場合が一部あります(特に os.execute との併用にて)。",
                        ko = "현재 동작중인 OS를 조사합니다. 일반적으로 LÖVE에서는 OS를 완전히 추상화하기 때문에 지금 동작하고 있는 OS를 조사할 필요는 없습니다. 그렇지만 이 정보가 유용하게 사용되는 특정한 경우가 있긴 합니다 (os.execute를 이용해 OS에 종속적인 명령어를 실행해야 할 때가 대표적인 경우겠죠).",
                        ru = "Получает текущую операционную систему. LÖVE абстрагирует необходимость знать текущую операционную систему, но есть несколько случаев, когда это может быть полезно (особенно в сочетании с os.execute.)"
                    },
                    minidescriptiont = {
                        de = "Gibt das Betriebssystem aus, auf welchem LÖVE gerade ausgeführt wird.",
                        jp = "現在のオペレーティングシステムを取得します。",
                        ko = "현재 동작중인 OS를 조사합니다.",
                        ru = "Получает текущую операционную систему."
                    },
                    name = "getOS",
                    variants = {
                        {
                            descriptiont = {
                                de = "In LÖVE Version love.system\n\nCategory:Functions\n\n{{#set:Description=Gibt das Betriebssystem aus, auf welchem LÖVE gerade ausgeführt wird.}}\n\n== Other Languages ==",
                                ru = "В LÖVE версии 0.8.0, переменная '''love._os''' типа string, содержит текущею  операционную систему."
                            },
                            returns = {
                                {
                                    description = "The current operating system. \"OS X\", \"Windows\", \"Linux\", \"Android\" or \"iOS\".",
                                    descriptiont = {
                                        de = "Das derzeitige Betriebssystem.. \"OS X\", \"Windows\", oder \"Linux\".",
                                        jp = "現在のオペレーティングシステム。 \"OS X\", \"Windows\", \"Linux\", \"Android\" または \"iOS\".",
                                        ko = "현재 동작중인 OS. \"OS X\", \"Windows\", or \"Linux\".",
                                        ru = "Текущая операционная система. \"OS X\", \"Windows\" или \"Linux\"."
                                    },
                                    name = "osString",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets information about the system's power supply.",
                    descriptiont = {
                        jp = "システムの電源供給についての情報を取得します。",
                        ko = "배터리를 사용하는 기기에서 전원 공급에 관한 정보를 조사합니다."
                    },
                    minidescriptiont = {
                        jp = "システムの電源供給についての情報を取得します。",
                        ko = "배터리를 사용하는 기기에서 전원 공급에 관한 정보를 조사합니다."
                    },
                    name = "getPowerInfo",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The basic state of the power supply.",
                                    descriptiont = {
                                        jp = "電源供給の基本状態",
                                        ko = "간단한 전원 공급 상태."
                                    },
                                    name = "state",
                                    type = "PowerState"
                                },
                                {
                                    description = "Percentage of battery life left, between 0 and 100. nil if the value can't be determined or there's no battery.",
                                    descriptiont = {
                                        jp = "充電池の残り持続時間 (0 から 100 までの間でパーセント)であり、測定値検出不能または充電池が搭載されていない場合は nil を返します。",
                                        ko = "잔여 배터리량. 0부터 100 사이의 값으로 나타냄. 배터리가 없거나 배터리의 상태를 명확히 확인할 없을 경우 nil."
                                    },
                                    name = "percent",
                                    type = "number"
                                },
                                {
                                    description = "Seconds of battery life left. nil if the value can't be determined or there's no battery.",
                                    descriptiont = {
                                        jp = "充電池の残り持続時間 (秒数) であり、測定値検出不能または充電池が搭載されていない場合は nil を返します。",
                                        ko = "잔여 배터리 시간(초). 배터리가 없거나 배터리의 상태를 명확히 확인할 없을 경우 nil."
                                    },
                                    name = "seconds",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the number of CPU cores in the system.\n\nThe number includes the threads reported if technologies such as Intel's Hyper-threading are enabled. For example, on a 4-core CPU with Hyper-threading, this function will return 8.",
                    descriptiont = {
                        jp = "システムに搭載されている CPU のコア数を取得します。",
                        ko = "시스템의 CPU 코어 수를 조사합니다."
                    },
                    minidescriptiont = {
                        jp = "システムに搭載されている CPU のコア数を取得します。",
                        ko = "시스템의 CPU 코어 수를 조사합니다."
                    },
                    name = "getProcessorCount",
                    variants = {
                        {
                            descriptiont = {
                                ko = "이 함수는 인텔의 하이퍼스레딩 기술이 적용되었을 때에 늘어난 스레드의 개수까지도 포함합니다. 예를 들어 하이퍼스레딩 기능이 있는 쿼드코어 CPU의 경우 8을 반환합니다."
                            },
                            returns = {
                                {
                                    description = "Gets the number of CPU cores in the system.",
                                    descriptiont = {
                                        jp = "CPU のコア数。",
                                        ko = "CPU 코어의 개수."
                                    },
                                    name = "cores",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Opens a URL with the user's web or file browser.",
                    descriptiont = {
                        jp = "利用者のウェブまたはファイルブラウザで URL を開きます。",
                        ko = "사용자의 웹 브라우저 또는 파일 브라우저를 통하여 URL을 엽니다."
                    },
                    minidescriptiont = {
                        jp = "利用者のウェブまたはファイルブラウザで URL を開きます。",
                        ko = "사용자의 웹 브라우저 또는 파일 브라우저를 통하여 URL을 엽니다."
                    },
                    name = "openURL",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The URL to open. Must be formatted as a proper URL.\n\nTo open a file or folder, \"file://\" must be prepended to the path.",
                                    descriptiont = {
                                        jp = "開きたい URL を指定します。必ず URL は適切な書式にしてください。",
                                        ko = "열 URL. 정확한 URL 형식이 갖추어져야 함."
                                    },
                                    name = "url",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the URL was opened successfully.",
                                    descriptiont = {
                                        jp = "URL が開かれたならば成功です。",
                                        ko = "성공적으로 열었으면 true."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Puts text in the clipboard.",
                    descriptiont = {
                        de = "Speichert Text in der Zwischenablage des Systems.",
                        jp = "クリップボードへテキストを出力します。",
                        ko = "클립보드에 텍스트를 저장합니다."
                    },
                    minidescriptiont = {
                        de = "Speichert Text in der Zwischenablage des Systems.",
                        jp = "クリップボードへテキストを出力します。",
                        ko = "클립보드에 텍스트를 저장합니다."
                    },
                    name = "setClipboardText",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new text to hold in the system's clipboard.",
                                    descriptiont = {
                                        de = "Der Text welcher an die Zwischenablage geschickt werden soll.",
                                        jp = "システムのクリップボードが新規保持するテキスト。",
                                        ko = "클립 보드에 저장할 새로운 텍스트."
                                    },
                                    name = "text",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Causes the device to vibrate, if possible. Currently this will only work on Android and iOS devices that have a built-in vibration motor.",
                    descriptiont = {
                        jp = "利用可能であれば、デバイスを振動させます。これは現在のところ内蔵振動モーターを搭載している Android また iOS 機器でのみ動作します。"
                    },
                    minidescriptiont = {
                        jp = "利用可能であれば、デバイスを振動させます。"
                    },
                    name = "vibrate",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "0.5",
                                    description = "The duration to vibrate for. If called on an iOS device, it will always vibrate for 0.5 seconds due to limitations in the iOS system APIs.",
                                    descriptiont = {
                                        jp = "振動の動作持続時間。iOS 機器で呼び出された場合は、常に iOS システムの制限で 0.5 秒間振動します。"
                                    },
                                    name = "seconds",
                                    type = "number"
                                }
                            }
                        }
                    }
                }
            },
            name = "system"
        },
        {
            description = "Allows you to work with threads.\n\nThreads are separate Lua environments, running in parallel to the main code. As their code runs separately, they can be used to compute complex operations without adversely affecting the frame rate of the main thread. However, as they are separate environments, they cannot access the variables and functions of the main thread, and communication between threads is limited.\n\nAll LOVE objects (userdata) are shared among threads so you'll only have to send their references across threads. You may run into concurrency issues if you manipulate an object on multiple threads at the same time.\n\nWhen a Thread is started, it only loads the love.thread module. Every other module has to be loaded with require.",
            functions = {
                {
                    description = "Creates or retrieves a named thread channel.",
                    descriptiont = {
                        jp = "名前ありスレッドのチャンネルを作成または検索します。",
                        ko = "이름 있는 스레드 채널을 생성하거나 얻어옵니다."
                    },
                    minidescriptiont = {
                        jp = "名前ありスレッドのチャンネルを作成または検索します。",
                        ko = "이름 있는 스레드 채널을 생성하거나 얻어옵니다."
                    },
                    name = "getChannel",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name of the channel you want to create or retrieve.",
                                    descriptiont = {
                                        jp = "作成または検索をしたいチャンネルの名前。",
                                        ko = "생성할, 혹은 받아올 채널의 이름."
                                    },
                                    name = "name",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A named channel object which can be further manipulated.",
                                    descriptiont = {
                                        jp = "Channel オブジェクトに関連づけられた名前。",
                                        ko = "채널 객체."
                                    },
                                    name = "channel",
                                    type = "Channel"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Create a new unnamed thread channel.\n\nOne use for them is to pass new unnamed channels to other threads via Channel:push",
                    descriptiont = {
                        de = "Erstellt einen neuen unbenannten Channel.\n\nUnbenannte Channel können zum Beispiel durch Channel:push über einen benannten Channel an einen anderen Thread geschickt werden.",
                        jp = "名前なしスレッドのチャンネルを新規作成します。\n\n使用方法の一つとして別のスレッドにある名前ありチャンネルから Channel:push を経由して新規の名前なしのチャンネルへメッセージを渡すことです。",
                        ko = "이름 없는 스레드 채널을 생성합니다.\n\n이름 없는 채널을 사용하는 방법중 하나는 이름있는 채널의 Channel:push를 통해 다른 스레드에게 이름없는 채널을 건네주는 것이 있습니다."
                    },
                    minidescriptiont = {
                        de = "Erstellt einen neuen unbenannten Channel.",
                        jp = "名前なしスレッドのチャンネルを新規作成します。",
                        ko = "이름 없는 스레드 채널을 생성합니다."
                    },
                    name = "newChannel",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A unnamed channel object which can be further manipulated.",
                                    descriptiont = {
                                        de = "Das neue Channel Objekt.",
                                        jp = "新規 Channel オブジェクト。",
                                        ko = "채널 객체."
                                    },
                                    name = "channel",
                                    type = "Channel"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Creates a new Thread from a File or Data object.",
                    descriptiont = {
                        de = "Erstellt einen neuen Thread aus einer Lua-Datei oder einem FileData-Objekt.",
                        jp = "Lua ファイルまたは FileData オブジェクトからスレッドを新規作成します。",
                        ko = "루아 파일이나 FileData로부터 새로운 스레드를 생성합니다.",
                        pt = "Cria um novo Thread a partir de um objeto File ou Data.",
                        ru = "Создает новый поток из объектов File или Data."
                    },
                    minidescriptiont = {
                        de = "Erstellt einen neuen Thread aus einer Lua-Datei oder einem FileData-Objekt.",
                        jp = "Lua ファイルまたは FileData オブジェクトからスレッドを新規作成します。",
                        ko = "루아 파일이나 FileData로부터 새로운 스레드를 생성합니다.",
                        pt = "Cria um novo Thread a partir de um objeto File ou Data.",
                        ru = "Создает новый поток из объектов File или Data."
                    },
                    name = "newThread",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name of the Lua File to use as source.",
                                    descriptiont = {
                                        de = "Der Name der Lua-Datei welche als Quelle für den Thread benutzt werden soll.",
                                        jp = "ソースとして使用する Lua コードが含まれた文字列を指定します。最低でも 1024 文字の長さ、または最低でも１文字の改行を含む必要があります。",
                                        ko = "루아로 짜여진 소스 코드 파일의 이름."
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Thread that has yet to be started.",
                                    descriptiont = {
                                        de = "Ein neuer Thread, welcher noch gestartet werden muss.",
                                        jp = "まだ開始されていない新規スレッド。",
                                        ko = "아직 실행되지 않은 새 스레드."
                                    },
                                    name = "thread",
                                    type = "Thread"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The FileData containing the Lua code to use as the source.",
                                    descriptiont = {
                                        de = "Das FileData-Objekt, welches den Lua-Code enthält, welcher als Quelle für den Thread genutzt werden soll.",
                                        jp = "ソースとして使用する Lua コードが含まれた FileData オブジェクトを指定します。",
                                        ko = "루아 코드를 가진 FileData."
                                    },
                                    name = "fileData",
                                    type = "FileData"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Thread that has yet to be started.",
                                    descriptiont = {
                                        de = "Ein neuer Thread, welcher noch gestartet werden muss.",
                                        jp = "まだ開始されていない新規スレッド。",
                                        ko = "아직 실행되지 않은 새 스레드."
                                    },
                                    name = "thread",
                                    type = "Thread"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "A string containing the Lua code to use as the source. It needs to either be at least 1024 characters long, or contain at least one newline.",
                                    descriptiont = {
                                        de = "Der Name der Lua-Datei welche als Quelle für den Thread benutzt werden soll.",
                                        jp = "ソースとして使用する Lua コードが含まれた文字列を指定します。最低でも 1024 文字の長さ、または最低でも１文字の改行を含む必要があります。",
                                        ko = "루아로 짜여진 소스 코드 파일의 이름."
                                    },
                                    name = "codestring",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A new Thread that has yet to be started.",
                                    descriptiont = {
                                        de = "Ein neuer Thread, welcher noch gestartet werden muss.",
                                        jp = "まだ開始されていない新規スレッド。",
                                        ko = "아직 실행되지 않은 새 스레드."
                                    },
                                    name = "thread",
                                    type = "Thread"
                                }
                            }
                        }
                    }
                }
            },
            name = "thread",
            types = {
                {
                    constructors = {
                        "newThread"
                    },
                    description = "A Thread is a chunk of code that can run in parallel with other threads. Data can be sent between different threads with Channel objects.",
                    descriptiont = {
                        de = "Ein Thread ist ein Code-Baustein, der parallel zu anderen Threads ausgeführt werden kann.",
                        jp = "Thread はコードのチャンクを別のスレッドで並列で実行します。 データは異なるスレッド間で Channel オブジェクトにより送信できます。",
                        ko = "스레드를 표현하는 타입입니다.",
                        pt = "Um Thread é um pedaço de código que pode ser executado em paralelo à outros threads.",
                        ru = "Поток - это часть кода, которая может выполняться параллельно с другими потоками."
                    },
                    functions = {
                        {
                            description = "Retrieves the error string from the thread if it produced an error.",
                            descriptiont = {
                                de = "Empfängt eine Fehlermeldung wenn in einem Thread ein Fehler aufgetreten ist.",
                                jp = "スレッドにエラーが発生している場合にスレッドからエラー文字列を回収します。",
                                ko = "스레드에서 에러가 발생되었을 경우 메시지를 리턴합니다."
                            },
                            minidescriptiont = {
                                de = "Empfängt eine Fehlermeldung wenn in einem Thread ein Fehler aufgetreten ist.",
                                jp = "スレッドからエラー文字列を回収します。",
                                ko = "스레드에서 에러가 발생되었을 경우 메시지를 리턴합니다."
                            },
                            name = "getError",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The error message.",
                                            descriptiont = {
                                                de = "Die Fehlermeldung.",
                                                jp = "エラーメッセージ",
                                                ko = "에러 메시지."
                                            },
                                            name = "message",
                                            type = "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Starts the thread.\n\nThreads can be restarted after they have completed their execution.",
                            descriptiont = {
                                jp = "スレッドを開始します。\n\nLÖVE version 0.9.0 より、実行完了後でもスレッドを再起動できるようになりました。",
                                ko = "스레드를 실행합니다.",
                                pt = "Inicia o thread."
                            },
                            minidescriptiont = {
                                jp = "スレッドを開始します。",
                                ko = "스레드를 실행합니다.",
                                pt = "Inicia o thread."
                            },
                            name = "start",
                            variants = {
                                {
                                    descriptiont = {
                                        ko = "0.9.0보다 더 오래된 버전에서는 스레드를 '''재'''실행할 수 없으니 주의하세요."
                                    }
                                },
                                {
                                    arguments = {
                                        {
                                            description = "A string, number, boolean, LÖVE object, or simple table.",
                                            descriptiont = {
                                                jp = "string, number, boolean, LÖVE のオブジェクト、または単一のテーブル。"
                                            },
                                            name = "arg1",
                                            type = "Variant"
                                        },
                                        {
                                            description = "A string, number, boolean, LÖVE object, or simple table.",
                                            descriptiont = {
                                                jp = "string, number, boolean, LÖVE のオブジェクト、または単一のテーブル。"
                                            },
                                            name = "arg2",
                                            type = "Variant"
                                        },
                                        {
                                            description = "You can continue passing values to the thread.",
                                            descriptiont = {
                                                jp = "スレッドへ値を連続的に渡すことができます。"
                                            },
                                            name = "...",
                                            type = "Variant"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Wait for a thread to finish. This call will block until the thread finishes.",
                            descriptiont = {
                                jp = "スレッドの完了まで待機します。\n\nこの呼び出しはスレッドの完了まで阻止されます。",
                                ko = "스레드가 완료되기를 기다립니다.\n\n이 함수를 호출하면 해당 스레드가 끝날 때까지 무한정 대기합니다.",
                                pt = "Aguarda o thread terminar.\n\nEsta chamada irá bloquear até que o thread termine."
                            },
                            minidescriptiont = {
                                jp = "スレッドの完了まで待機します。",
                                ko = "스레드가 완료되기를 기다립니다.",
                                pt = "Aguarda o thread terminar."
                            },
                            name = "wait",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Returns whether the thread is currently running.\n\nThreads which are not running can be (re)started with Thread:start.",
                            descriptiont = {
                                jp = "スレッドが現在実行中かどうか返します。\n\nスレッドが実行されていない場合は Thread:start にて(再)起動できます。",
                                ko = "스레드가 현재 실행중인지 확인합니다."
                            },
                            minidescriptiont = {
                                jp = "スレッドが現在実行中かどうか返します。",
                                ko = "스레드가 현재 실행중인지 확인합니다."
                            },
                            name = "isRunning",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "True if the thread is running, false otherwise.",
                                            descriptiont = {
                                                jp = "True ならばスレッドは実行中であり、それ以外は false です。",
                                                ko = "실행중이면 true."
                                            },
                                            name = "running",
                                            type = "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Um Thread representa um thread."
                    },
                    name = "Thread",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                },
                {
                    constructors = {
                        "getChannel",
                        "newChannel"
                    },
                    description = "A channel is a way to send and receive data to and from different threads.",
                    descriptiont = {
                        de = "Ein Objekt welches dazu genutzt werden kann, Daten zwischen verschiedenen Threads auszutauschen.",
                        jp = "このオブジェクトは別のスレッド間でデータの送信および受信に使用できます。",
                        ko = "서로 다른 스레드 사이에 데이터를 주고받는 데 사용되는 객체입니다.",
                        pt = "Um objeto que pose ser usado para enviar e receber dados entre diferentes threads."
                    },
                    functions = {
                        {
                            description = "Clears all the messages in the Channel queue.",
                            descriptiont = {
                                de = "Löscht alle Nachrichten in der Channel Warteschlange.",
                                jp = "チャンネルのキューにあるメッセージを全て消去します。",
                                ko = "메시지 큐를 모두 비웁니다."
                            },
                            minidescriptiont = {
                                de = "Löscht alle Nachrichten in der Channel Warteschlange.",
                                jp = "チャンネルのキューにあるメッセージを全て消去します。",
                                ko = "메시지 큐를 모두 비웁니다."
                            },
                            name = "clear",
                            variants = {
                                {}
                            }
                        },
                        {
                            description = "Retrieves the value of a Channel message and removes it from the message queue.\n\nIt waits until a message is in the queue then returns the message value.",
                            descriptiont = {
                                jp = "チャンネルメッセージの値を回収してからメッセージキューを削除します。\n\nメッセージがキューに入るまで待機を行い入ったらメッセージの値を返します。",
                                ko = "채널에 메시지가 도착할 때까지 무한정 기다린 후 메시지가 도착하면 메시지를 얻어옵니다. 얻어온 메시지는 메시지 큐에서 삭제합니다.\n\n메시지의 value 타입은 논리형, 문자열, 수치형, LÖVE의 Object를 상속받는 객체, 혹은 이들을 원소로 가지고 있는 테이블만을 지원합니다. 함수, 테이블 내의 테이블, LÖVE에서 지원하지 않는 유저데이터는 지원되지 않습니다."
                            },
                            minidescriptiont = {
                                jp = "チャンネルメッセージの値を回収するまで待機します。",
                                ko = "채널에 메시지가 도착할 때까지 무한정 기다린 후 메시지가 도착하면 메시지를 얻어옵니다."
                            },
                            name = "demand",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The contents of the message.",
                                            descriptiont = {
                                                jp = "メッセージの内容。"
                                            },
                                            name = "value",
                                            type = "Variant"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Retrieves the number of messages in the thread Channel queue.",
                            descriptiont = {
                                jp = "スレッド・チャンネルのキューにあるメッセージ個数を回収します。",
                                ko = "메시지 큐에 메시지가 몇 개나 쌓여있는지 세어봅니다."
                            },
                            minidescriptiont = {
                                jp = "スレッド・チャンネルのキューにあるメッセージ個数を回収します。",
                                ko = "메시지 큐에 메시지가 몇 개나 쌓여있는지 세어봅니다."
                            },
                            name = "getCount",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The number of messages in the queue.",
                                            descriptiont = {
                                                jp = "キューにあるメッセージの個数。",
                                                ko = "메시지 큐에 쌓인 메시지의 수."
                                            },
                                            name = "count",
                                            type = "number"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Retrieves the value of a Channel message, but leaves it in the queue.\n\nIt returns nil if there's no message in the queue.",
                            descriptiont = {
                                jp = "チャンネル・メッセージの値を回収しますが、キューには残します。\n\nnil が返ってきたときはキューにメッセージはありません。",
                                ko = "채널에서 메시지를 얻어옵니다만, 메시지 큐에서 삭제하지는 않습니다.\n\n메시지의 value 타입은 논리형, 문자열, 수치형, LÖVE의 Object를 상속받는 객체, 혹은 이들을 원소로 가지고 있는 테이블만을 지원합니다. 함수, 테이블 내의 테이블, LÖVE에서 지원하지 않는 유저데이터는 지원되지 않습니다."
                            },
                            minidescriptiont = {
                                jp = "チャンネル・メッセージの値を回収しますが、キューには残します。",
                                ko = "채널에서 메시지를 얻어옵니다만, 메시지 큐에서 삭제하지는 않습니다."
                            },
                            name = "peek",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The contents of the message.",
                                            name = "value",
                                            type = "Variant"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Executes the specified function atomically with respect to this Channel.\n\nCalling multiple methods in a row on the same Channel is often useful. However if multiple Threads are calling this Channel's methods at the same time, the different calls on each Thread might end up interleaved (e.g. one or more of the second thread's calls may happen in between the first thread's calls.)\n\nThis method avoids that issue by making sure the Thread calling the method has exclusive access to the Channel until the specified function has returned.",
                            descriptiont = {
                                jp = "このチャネルに対してアトミックに指定された関数を実行します。\n\n多くの場合、同一チャンネルで多数のメソッドを連続で呼び出すことは有用です。 \n\nしかしながら多数のスレッドが同時に本チャンネルのメソッドを呼び出す場合は、各スレッドで異なる呼び出しは交互配置されて終了してしまいます (例えば一次スレッド呼び出し間に一つ以上の二次スレッドの呼び出しが発生する場合があります)。\n\nこのメソッドは指定された関数に復帰するまでメソッドを呼び出しているスレッドがチャンネルに対する排他アクセス権を有していることを確認することで本問題を回避します。"
                            },
                            minidescriptiont = {
                                jp = "このチャネルに対してアトミックに指定された関数を実行します。"
                            },
                            name = "performAtomic",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The function to call, the form of function(channel, arg1, arg2, ...) end. The Channel is passed as the first argument to the function when it is called.",
                                            descriptiont = {
                                                jp = "function(channel, arg1, arg2, ...) end 形式による呼び出し対象の関数。呼び出し時に関数の第一引数をチャンネルに渡します。"
                                            },
                                            name = "func",
                                            type = "function"
                                        },
                                        {
                                            description = "Additional arguments that the given function will receive when it is called.",
                                            descriptiont = {
                                                jp = "指定された関数の呼び出し時に受け取る追加の引数。"
                                            },
                                            name = "arg1",
                                            type = "any"
                                        },
                                        {
                                            description = "Additional arguments that the given function will receive when it is called.",
                                            descriptiont = {
                                                jp = "指定された関数の呼び出し時に受け取る追加の引数。"
                                            },
                                            name = "...",
                                            type = "any"
                                        }
                                    },
                                    returns = {
                                        {
                                            description = "The first return value of the given function (if any.)",
                                            descriptiont = {
                                                jp = "指定された関数の第一返値 (もしあれば)。"
                                            },
                                            name = "ret1",
                                            type = "any"
                                        },
                                        {
                                            description = "Any other return values.",
                                            descriptiont = {
                                                jp = "その他の返値。"
                                            },
                                            name = "...",
                                            type = "any"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Retrieves the value of a Channel message and removes it from the message queue.\n\nIt returns nil if there are no messages in the queue.",
                            descriptiont = {
                                jp = "スレッドのキューからメッセージの値を回収および削除します。\n\nnil が返ってきたときはキューにメッセージはありません。",
                                ko = "채널에서 메시지를 얻어온 후 메시지 큐에서 메시지를 삭제합니다.\n\n메시지의 value 타입은 논리형, 문자열, 수치형, LÖVE의 Object를 상속받는 객체, 혹은 이들을 원소로 가지고 있는 테이블만을 지원합니다. 함수, 테이블 내의 테이블, LÖVE에서 지원하지 않는 유저데이터는 지원되지 않습니다."
                            },
                            minidescriptiont = {
                                jp = "チャンネル・メッセージの値を回収および削除します。",
                                ko = "채널에서 메시지를 얻어온 후 메시지 큐에서 메시지를 삭제합니다."
                            },
                            name = "pop",
                            variants = {
                                {
                                    returns = {
                                        {
                                            description = "The contents of the message.",
                                            descriptiont = {
                                                jp = "メッセージの内容。"
                                            },
                                            name = "value",
                                            type = "Variant"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Send a message to the thread Channel.\n\nSee Variant for the list of supported types.",
                            descriptiont = {
                                jp = "スレッドのチャンネルへメッセージを送信します。\n\n対応している型の一覧は Variant を参照してください。",
                                ko = "채널로 메시지를 전송합니다.\n\n메시지의 value 타입은 논리형, 문자열, 수치형, LÖVE의 Object를 상속받는 객체, 혹은 이들을 원소로 가지고 있는 테이블만을 지원합니다. 함수, 테이블 내의 테이블, LÖVE에서 지원하지 않는 유저데이터는 지원되지 않습니다."
                            },
                            minidescriptiont = {
                                jp = "スレッドのチャンネルへメッセージを送信します。",
                                ko = "채널로 메시지를 전송합니다."
                            },
                            name = "push",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The contents of the message.",
                                            descriptiont = {
                                                jp = "メッセージの内容。"
                                            },
                                            name = "value",
                                            type = "Variant"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            description = "Send a message to the thread Channel and wait for a thread to accept it.\n\nSee Variant for the list of supported types.",
                            descriptiont = {
                                jp = "スレッドのチャンネルへメッセージを送信してスレッドへ受理されるまで待機します。\n\n対応している型の一覧は Variant を参照してください。",
                                ko = "채널로 메시지를 전송한 후, 다른 스레드가 메시지를 받을 때까지 대기합니다.\n\n메시지의 value 타입은 논리형, 문자열, 수치형, LÖVE의 Object를 상속받는 객체, 혹은 이들을 원소로 가지고 있는 테이블만을 지원합니다. 함수, 테이블 내의 테이블, LÖVE에서 지원하지 않는 유저데이터는 지원되지 않습니다."
                            },
                            minidescriptiont = {
                                jp = "スレッドのチャンネルへメッセージを送信してスレッドへ受理されるまで待機します。",
                                ko = "채널로 메시지를 전송한 후, 다른 스레드가 메시지를 받을 때까지 대기합니다."
                            },
                            name = "supply",
                            variants = {
                                {
                                    arguments = {
                                        {
                                            description = "The contents of the message.",
                                            descriptiont = {
                                                jp = "メッセージの内容。"
                                            },
                                            name = "value",
                                            type = "Variant"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    minidescriptiont = {
                        pt = "Um objeto que pose ser usado para enviar e receber dados entre diferentes threads."
                    },
                    name = "Channel",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides an interface to the user's clock.",
            functions = {
                {
                    description = "Returns the average delta time (seconds per frame) over the last second.",
                    descriptiont = {
                        de = "Gibt die durchschnittliche Delta-Zeit (Sekunden pro Frame) der letzten Sekunde zurück.",
                        jp = "最近の秒間における平均デルタ時間 (１フレームあたりの秒数) を返します。",
                        ko = "최근 1초에서 평균 델타 시간(프레임당 소요 시간)을 초 단위로 구합니다.",
                        ru = "Возвращает среднее время delta (в секундах на кадр) в течение последней секунды."
                    },
                    minidescriptiont = {
                        de = "Gibt die durchschnittliche Delta-Zeit der letzten Sekunde zurück.",
                        jp = "最近の秒間における平均デルタ時間を返します。",
                        ko = "최근 1초에서 평균 델타 시간(프레임당 소요 시간)을 초 단위로 구합니다.",
                        ru = "Возвращает среднее время delta в течение последней секунды."
                    },
                    name = "getAverageDelta",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The average delta time over the last second.",
                                    descriptiont = {
                                        de = "Die durchschnittliche Delta-Zeit der letzten Sekunde.",
                                        jp = "最近の秒間における平均デルタ時間",
                                        ko = "최근 1초에서의 평균 델타 초.",
                                        ru = "Среднее время delta над последней секунды."
                                    },
                                    name = "delta",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the time between the last two frames.",
                    descriptiont = {
                        de = "Gibt die Zeit zwischen den letzten beiden Frames zurück.",
                        jp = "最近の２フレーム間における時間を返します。",
                        ko = "최근 두 프레임 간의 시간 간격(델타)을 리턴합니다.",
                        pt = "Retorna o tempo entre os dois últimos frames.",
                        ru = "Возвращает время, прошедшее между последними двумя кадрами."
                    },
                    minidescriptiont = {
                        de = "Gibt die Zeit zwischen den letzten beiden Frames zurück.",
                        jp = "最近の２フレーム間における時間を返します。",
                        ko = "최근 두 프레임 간의 시간 간격을 리턴합니다.",
                        pt = "Retorna o tempo entre os dois últimos quadros.",
                        ru = "Возвращает время, прошедшее между последними двумя кадрами."
                    },
                    name = "getDelta",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The time passed (in seconds).",
                                    descriptiont = {
                                        de = "Die Zeit die vergangen ist (in Sekunden).",
                                        jp = "経過時間 (秒単位)",
                                        ko = "시간 간격(초 단위).",
                                        pt = "O tempo que passou, em segundos.",
                                        ru = "Время в секундах."
                                    },
                                    name = "dt",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the current frames per second.",
                    descriptiont = {
                        de = "Gibt die Anzahl der aktuellen Bilder in der Sekunde (FPS) zurück.",
                        jp = "毎秒ごとに現在のフレーム数を返します。",
                        ko = "현재 FPS를 구합니다.",
                        pt = "Retorna o número atual de quadros por segundos.",
                        ru = "Возвращает текущее количество кадров в секунду."
                    },
                    minidescriptiont = {
                        de = "Gibt die Anzahl der aktuellen FPS zurück.",
                        jp = "毎秒ごとに現在のフレーム数を返します。",
                        ko = "현재 FPS를 구합니다.",
                        pt = "Retorna o número atual de quadros por segundos.",
                        ru = "Возвращает текущее количество кадров в секунду."
                    },
                    name = "getFPS",
                    variants = {
                        {
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\nfps = love.timer.getFPS( )\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The current FPS.",
                                    descriptiont = {
                                        de = "Die aktuelle Anzahl an FPS.",
                                        jp = "現在の FPS です。",
                                        ko = "현재 FPS.",
                                        pt = "O atual FPS.",
                                        ru = "Текущий FPS."
                                    },
                                    name = "fps",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the value of a timer with an unspecified starting time. This function should only be used to calculate differences between points in time, as the starting time of the timer is unknown.",
                    descriptiont = {
                        de = "Gibt die Zeit zurück, welche seit einem unbestimmten Zeitpunkt vergangen ist.\n\nDa der Startpunkt des Timers nicht bekannt ist, sollte diese Funktion nur dazu benutzt werden, die vergangene Zeit zwischen zwei Zeitpunkten zu messen.",
                        jp = "無指定の開始時間から計測したタイマーの値を返します。\n\nタイマーの起動開始時間は検出できないため、この関数は区間差を計算するためだけに使用してください。",
                        ko = "불명확한 시작 시간으로부터 현재까지의 소요 시간을 구합니다.\n\n시작 시간이 정확히 언제인지는 알 수 없습니다. 따라서 이 함수는 오직 두 시점간의 간격만을 구하는 데 사용해야 합니다.",
                        pt = "Retorna a quantidade de tempo que passou desde um instante não especificado.\n\nEsta função somente pode ser usada para calcular a diferença entre dois pontos no tempo, tão preciso quanto esse \"instante não especificado\" possa preocupar.",
                        ru = "Возвращает количество времени, прошедшее с некоторого момента в прошлом.\n\nЭта функция должна использоваться для расчета времени между временными точками только тогда, когда погрешность во времени не имеет особого значения."
                    },
                    minidescriptiont = {
                        de = "Gibt die Zeit zurück, welche seit einem unbestimmten Zeitpunkt vergangen ist.",
                        jp = "過去のある時間からの時間量を返します。",
                        ko = "불명확한 시작 시간으로부터 현재까지의 소요 시간을 구합니다.",
                        pt = "Retorna a quantidade de tempo que passou desde um instante não especificado.",
                        ru = "Возвращает количество времени, прошедшее с некоторого момента в прошлом."
                    },
                    name = "getTime",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The time in seconds.",
                                    descriptiont = {
                                        de = "Die vergangene Zeit in Sekunden.",
                                        jp = "秒単位での時刻。",
                                        ko = "소요 시간(초 단위).",
                                        pt = "O tempo, em segundos.",
                                        ru = "Время в секундах."
                                    },
                                    name = "time",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sleeps the program for the specified amount of time.",
                    descriptiont = {
                        de = "Pausiert den aktuellen Thread für die angegebene Zeitspanne.",
                        jp = "現在のスレッドを指定された時間量まで一時停止します。",
                        ko = "일정 시간동안 현재 스레드를 일시 정지합니다.",
                        pt = "Adormece o programa por uma quantidade específica de tempo.",
                        ru = "Приостанавливает программу на определенное количество времени."
                    },
                    minidescriptiont = {
                        de = "Pausiert den aktuellen Thread für die angegebene Zeitspanne.",
                        jp = "現在のスレッドを指定された時間量まで一時停止します。",
                        ko = "일정 시간동안 현재 스레드를 일시 정지합니다.",
                        pt = "Adormece o programa por uma quantidade específica de tempo.",
                        ru = "Приостанавливает программу на определенное количество времени."
                    },
                    name = "sleep",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Seconds to sleep for.",
                                    descriptiont = {
                                        de = "Die Dauer des Schlafvorgangs in Sekunden.",
                                        jp = "一時停止する秒数を指定します。",
                                        ko = "일시 정지할 시간(초 단위).",
                                        pt = "Quantidade de milisegundos para adormecer.",
                                        ru = "Количество секунд, на которые надо приостановить программу."
                                    },
                                    name = "s",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Measures the time between two frames. Calling this changes the return value of love.timer.getDelta.",
                    descriptiont = {
                        de = "Misst die Zeit zwischen zwei Frames.\n\nEin Aufruf ändert den Rückgabewert von love.timer.getDelta.",
                        jp = "２フレーム間の時間を計測します。\n\nこの関数を呼ぶと love.timer.getDelta の返値は変更されます。",
                        pt = "Mede o tempo entre dois quadros.\n\nChamando esta função muda o valor de retorno de love.timer.getDelta.",
                        ru = "Определяет время между двумя кадрами.\n\nВызов этой функции меняет возвращаемое функцией love.timer.getDelta значение."
                    },
                    minidescriptiont = {
                        de = "Misst die Zeit zwischen zwei Frames.",
                        jp = "２フレーム間の時間を計測します。",
                        pt = "Mede o tempo entre dois quadros.",
                        ru = "Определяет время между двумя кадрами."
                    },
                    name = "step",
                    variants = {
                        {}
                    }
                }
            },
            name = "timer"
        },
        {
            description = "Provides an interface to touch-screen presses.",
            functions = {
                {
                    description = "Gets the current position of the specified touch-press, in pixels.",
                    descriptiont = {
                        jp = "ピクセル単位にて、指定されたタッチ打鍵の現在位置を取得します。"
                    },
                    minidescriptiont = {
                        jp = "ピクセル単位にて、指定されたタッチ打鍵の現在位置を取得します。"
                    },
                    name = "getPosition",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The identifier of the touch-press. Use love.touch.getTouches, love.touchpressed, or love.touchmoved to obtain touch id values.",
                                    descriptiont = {
                                        jp = "タッチ打鍵の識別子です。タッチ ID 値を取得するには love.touch.getTouches, love.touchpressed, または love.touchmoved を使用します。"
                                    },
                                    name = "id",
                                    type = "light userdata"
                                }
                            },
                            returns = {
                                {
                                    description = "The position along the x-axis of the touch-press inside the window, in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位で、ウィンドウの内側のタッチ打鍵における x-軸の位置。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The position along the y-axis of the touch-press inside the window, in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位で、ウィンドウの内側のタッチ打鍵における y-軸の位置。"
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the current pressure of the specified touch-press.",
                    descriptiont = {
                        jp = "指定されたタッチ打鍵における現在の筆圧を取得します。"
                    },
                    minidescriptiont = {
                        jp = "指定されたタッチ打鍵における現在の筆圧を取得します。"
                    },
                    name = "getPressure",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The identifier of the touch-press. Use love.touch.getTouches, love.touchpressed, or love.touchmoved to obtain touch id values.",
                                    name = "id",
                                    type = "light userdata"
                                }
                            },
                            returns = {
                                {
                                    description = "The pressure of the touch-press. Most touch screens aren't pressure sensitive, in which case the pressure will be 1.",
                                    name = "pressure",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets a list of all active touch-presses.",
                    descriptiont = {
                        jp = "全ての有効なタッチ打鍵 ID 値の一覧を取得します。"
                    },
                    minidescriptiont = {
                        jp = "全ての有効なタッチ打鍵 ID 値の一覧を取得します。"
                    },
                    name = "getTouches",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A list of active touch-press id values, which can be used with love.touch.getPosition.",
                                    descriptiont = {
                                        jp = "love.touch.getPosition にて使用できる有効なタッチ打鍵 ID 値の一覧。"
                                    },
                                    name = "touches",
                                    type = "table"
                                }
                            }
                        }
                    }
                }
            },
            name = "touch"
        },
        {
            description = "This module is responsible for decoding, controlling, and streaming video files.\n\nIt can't draw the videos, see love.graphics.newVideo and Video objects for that.",
            functions = {
                {
                    description = "Creates a new VideoStream. Currently only Ogg Theora video files are supported. VideoStreams can't draw videos, see love.graphics.newVideo for that.",
                    descriptiont = {
                        jp = "VideoStream を新規作成します。現在のところ Ogg Theora 形式の動画ファイルのみ対応しています。 VideoStream は動画を描画できませんので、これを行うには love.graphics.newVideo を参照してください。"
                    },
                    minidescriptiont = {
                        jp = "VideoStream を新規作成します。"
                    },
                    name = "newVideoStream",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The file path to the Ogg Theora video file.",
                                    descriptiont = {
                                        jp = "Ogg Theora 形式の動画ファイルへのファイルパス。"
                                    },
                                    name = "filename",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "A new VideoStream.",
                                    descriptiont = {
                                        jp = "新規 VideoStream."
                                    },
                                    name = "videostream",
                                    type = "VideoStream"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The File object containing the Ogg Theora video.",
                                    descriptiont = {
                                        jp = "Ogg Theora 形式の動画を含む File オブジェクト。"
                                    },
                                    name = "file",
                                    type = "File"
                                }
                            },
                            returns = {
                                {
                                    description = "A new VideoStream.",
                                    descriptiont = {
                                        jp = "新規 VideoStream."
                                    },
                                    name = "videostream",
                                    type = "VideoStream"
                                }
                            }
                        }
                    }
                }
            },
            name = "video",
            types = {
                {
                    constructors = {
                        "newVideoStream"
                    },
                    description = "An object which decodes, streams, and controls Videos.",
                    descriptiont = {
                        jp = "Video の復号化、ストリーミング、および制御するためのオブジェクトです。",
                        ru = "Объект который декодирует, потоки и управление Video_(Русский)."
                    },
                    functions = {},
                    minidescriptiont = {},
                    name = "VideoStream",
                    parenttype = "Object",
                    supertypes = {
                        "Object"
                    }
                }
            }
        },
        {
            description = "Provides an interface for modifying and retrieving information about the program's window.",
            enums = {
                {
                    constants = {
                        {
                            description = "Sometimes known as borderless fullscreen windowed mode. A borderless screen-sized window is created which sits on top of all desktop UI elements. The window is automatically resized to match the dimensions of the desktop, and its size cannot be changed.",
                            descriptiont = {
                                de = "Auch bekannt als randloser Fenster-Vollbildmodus. Ein randloses Fenster mit der Größe des Bildschirms, welches über allen Desktop-GUI Elementen sitzt (wie z.B. der Windows-Taskleiste oder dem Dock unter Mac OS). Das Fenster hat automatisch die Größe des Desktops und kann nicht verändert werden.",
                                jp = "時に縁なしフルスクリーン・ウィンドウとしても知られています。画面の大きさに合わせた縁なしウィンドウはデスクトップにある全てのユーザインタフェース構成要素における描画領域の最全面に乗っかるような形で作成されます。ウィンドウはデスクトップの寸法と一致させるために自動的に大きさを変更しますが、利用者はウィンドウの大きさを変更できません。",
                                ko = "전체 화면 크기의 테두리 없는 윈도우를 사용하는 모드입니다. OS의 모든 GUI 요소(Windows의 작업표시줄, OS X의 독) 앞에 생성되며, 윈도우의 크기는 모니터 전체의 크기로 자동 조정됩니다. 이때 크기는 변경할 수 없습니다."
                            },
                            name = "desktop"
                        },
                        {
                            description = "Standard exclusive-fullscreen mode. Changes the display mode (actual resolution) of the monitor.",
                            descriptiont = {
                                jp = "標準の排他的フルスクリーン・モード。モニターの表示モード (実解像度) を変更します。"
                            },
                            name = "exclusive"
                        }
                    },
                    description = "Types of fullscreen modes.\n\nIn normal fullscreen mode, if a window size is used which does not match one of the monitor's supported display modes, the window will be resized to the next largest display mode.\n\nNormal fullscreen mode is sometimes avoided by users because it can cause issues in some window managers and with multi-monitor setups. In OS X it prevents switching to a different program until fullscreen mode is exited. The \"desktop\" fullscreen mode generally avoids these issues.",
                    descriptiont = {
                        de = "Die verschiedenen Vollbildmodi.",
                        jp = "フルスクリーン・モードの種類。",
                        ko = "전체 화면 모드의 종류를 나타냅니다."
                    },
                    minidescriptiont = {
                        de = "Die verschiedenen Vollbildmodi.",
                        jp = "フルスクリーン・モードの種類。",
                        ko = "전체 화면 모드의 종류를 나타냅니다."
                    },
                    name = "FullscreenType"
                },
                {
                    constants = {
                        {
                            description = "Informational dialog.",
                            descriptiont = {
                                de = "Informationsdialog.",
                                jp = "情報ダイアログ。"
                            },
                            name = "info"
                        },
                        {
                            description = "Warning dialog.",
                            descriptiont = {
                                de = "Warnungsdialog.",
                                jp = "警告ダイアログ。"
                            },
                            name = "warning"
                        },
                        {
                            description = "Error dialog.",
                            descriptiont = {
                                de = "Fehlerdialog.",
                                jp = "エラーダイアログ。"
                            },
                            name = "error"
                        }
                    },
                    description = "Types of message box dialogs. Different types may have slightly different looks.",
                    descriptiont = {
                        de = "Bestimmt die Art einer Nachrichtenbox. Das Erscheinungsbild der einzelnen Typen kann leicht abweichen.",
                        jp = "メッセージボックス・ダイアログの種類。様々な種類があり少し異なる外見があります。"
                    },
                    minidescriptiont = {
                        de = "Bestimmt die Art einer Nachrichtenbox.",
                        jp = "メッセージボックス・ダイアログの種類。"
                    },
                    name = "MessageBoxType"
                }
            },
            functions = {
                {
                    description = "Closes the window. It can be reopened with love.window.setMode.",
                    descriptiont = {
                        jp = "ウィンドウを閉じます。love.window.setMode で再び開くことができます。"
                    },
                    minidescriptiont = {
                        jp = "ウィンドウを閉じます。"
                    },
                    name = "close",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Converts a number from pixels to density-independent units.\n\nThe pixel density inside the window might be greater (or smaller) than the \"size\" of the window. For example on a retina screen in Mac OS X with the highdpi window flag enabled, the window may take up the same physical size as an 800x600 window, but the area inside the window uses 1600x1200 pixels. love.window.fromPixels(1600) would return 800 in that case.\n\nThis function converts coordinates from pixels to the size users are expecting them to display at onscreen. love.window.toPixels does the opposite. The highdpi window flag must be enabled to use the full pixel density of a Retina screen on Mac OS X and iOS. The flag currently does nothing on Windows and Linux, and on Android it is effectively always enabled.\n\nMost LÖVE functions return values and expect arguments in terms of pixels rather than density-independent units.",
                    descriptiont = {
                        jp = "数値をピクセルから密度非依存単位へ変換します。\n\nウインドウ内でピクセル密度はウィンドウの \"寸法\" より大きい (またはより小さい) 場合があります。 例えば Mac OS X において Retina スクリーン上で highdpi window フラグが有効化されているならば、ウィンドウは 800x600 のウィンドウと物理的な同一寸法を受け入れることはできますが、ウィンドウ内の領域は 1600x1200 ピクセルを使用します。その場合において love.window.fromPixels(1600) は 800 を返します。\n\nこの関数はピクセルから利用者が画面上で表示すると思われる寸法へ座標を変換します。 love.window.toPixels は逆の動作をします。 highdpi window は OS X において Retina スクリーンで全ピクセル密度を使用できるようにする必要があります。 このフラグは現在 Windows と Linux では何も処理を行いませんが、 Android では実質的に常時有効です。\n\nほとんどの LÖVE 関数における返値の値および引数は密度非依存単位ではなくピクセルの点を想定しています。"
                    },
                    minidescriptiont = {
                        jp = "数値をピクセルから密度非依存単位へ変換します。"
                    },
                    name = "fromPixels",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "A number in pixels to convert to density-independent units.",
                                    descriptiont = {
                                        jp = "密度非依存単位からピクセルへ変換するための数値。"
                                    },
                                    name = "pixelvalue",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The converted number, in density-independent units.",
                                    descriptiont = {
                                        jp = "密度非依存単位での、変換された数値。"
                                    },
                                    name = "value",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The x-axis value of a coordinate in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位での X 軸の座標値。"
                                    },
                                    name = "px",
                                    type = "number"
                                },
                                {
                                    description = "The y-axis value of a coordinate in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位での Y 軸の座標値。"
                                    },
                                    name = "py",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The converted x-axis value of the coordinate, in density-independent units.",
                                    descriptiont = {
                                        jp = "密度非依存単位での、変換された X 軸の座標値。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The converted y-axis value of the coordinate, in density-independent units.",
                                    descriptiont = {
                                        jp = "密度非依存単位での、変換された Y 軸の座標値。"
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the name of a display.",
                    descriptiont = {
                        de = "Gibt den Namen des Bildschirms zurück.",
                        jp = "ディスプレイの名称を取得します。"
                    },
                    minidescriptiont = {
                        de = "Gibt den Namen des Bildschirms zurück.",
                        jp = "ディスプレイの名称を取得します。"
                    },
                    name = "getDisplayName",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The index of the display to get the name of.",
                                    descriptiont = {
                                        de = "Der Index des Bildschirms, dessen Name zurückgegeben werden soll.",
                                        jp = "名称の取得を行うディスプレイの索引。"
                                    },
                                    name = "displayindex",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The name of the specified display.",
                                    descriptiont = {
                                        de = "Der Name des Bildschirms.",
                                        jp = "指定されたディスプレイの名称。"
                                    },
                                    name = "name",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether the window is fullscreen.",
                    descriptiont = {
                        de = "Gibt zurück, ob sich das Fenster im Vollbildmodus befindet.",
                        jp = "ウィンドウがフルスクリーン化されているか取得します。",
                        ko = "현재 전체 화면으로 동작하고 있는지 조사합니다."
                    },
                    minidescriptiont = {
                        de = "Gibt zurück, ob sich das Fenster im Vollbildmodus befindet.",
                        jp = "ウィンドウがフルスクリーン化されているか取得します。",
                        ko = "현재 전체 화면으로 동작하고 있는지 조사합니다."
                    },
                    name = "getFullscreen",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the window is fullscreen, false otherwise.",
                                    descriptiont = {
                                        de = "Wahr wenn das Fenster im Vollbildmodus ist, falsch wenn nicht.",
                                        jp = "true ならばウィンドウはフルスクリーン化されており、それ以外は false です。",
                                        ko = "전체 화면이면 true."
                                    },
                                    name = "fullscreen",
                                    type = "boolean"
                                },
                                {
                                    description = "The type of fullscreen mode used.",
                                    descriptiont = {
                                        de = "Die Art des genutzten Vollbildmodus.",
                                        jp = "使用しているフルスクリーン・モードの種類。",
                                        ko = "사용되고 있는 전체 화면 모드의 종류."
                                    },
                                    name = "fstype",
                                    type = "FullscreenType"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets a list of supported fullscreen modes.",
                    descriptiont = {
                        jp = "対応しているフルスクリーンモードの一覧を取得します。",
                        ko = "(한국어)|normal 모드에서 사용 가능한 해상도 리스트를 구합니다."
                    },
                    minidescriptiont = {
                        jp = "対応しているフルスクリーンモードの一覧を取得します。",
                        ko = "normal 모드에서 사용 가능한 해상도 리스트를 구합니다."
                    },
                    name = "getFullscreenModes",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "1",
                                    description = "The index of the display, if multiple monitors are available.",
                                    descriptiont = {
                                        jp = "マルチモニターが利用可能ならば、ディスプレイの番号を指定します。"
                                    },
                                    name = "display",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "A table of width/height pairs. (Note that this may not be in order.)",
                                    descriptiont = {
                                        jp = "幅と高さを組み合わせから成るテーブル (これの順序は未整列である場合があることに注意してください)。"
                                    },
                                    name = "modes",
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the window icon.",
                    descriptiont = {
                        de = "Gibt das Icon des Fensters zurück.",
                        jp = "ウィンドウのアイコンを取得します。",
                        ko = "윈도우 아이콘을 얻어옵니다.",
                        ru = "Получает иконку окна."
                    },
                    minidescriptiont = {
                        de = "Gibt das Icon des Fensters zurück.",
                        jp = "ウィンドウのアイコンを取得します。",
                        ko = "윈도우 아이콘을 얻어옵니다.",
                        ru = "Получает иконку окна."
                    },
                    name = "getIcon",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The window icon imagedata, or nil of no icon has been set with love.window.setIcon.",
                                    descriptiont = {
                                        de = "Das Icon als Bilddatum, oder nil wenn kein Icon bestimmt wurde.",
                                        jp = "ウィンドウのアイコンの画像データ、または nil ならばアイコンは love.window.setIcon で設定されていません。",
                                        ko = "윈도우 아이콘. love.window.setIcon으로 아이콘이 설정된 적이 없을 경우 nil을 리턴.",
                                        ru = "Иконка окна или nil если иконка не была установлена с помощью love.window.setIcon_(Русский)."
                                    },
                                    name = "imagedata",
                                    type = "ImageData"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Returns the current display mode.",
                    descriptiont = {
                        jp = "ディスプレイ・モードとウィンドウのプロパティを取得します。",
                        ko = "윈도우의 총괄적인 상태를 조사합니다."
                    },
                    minidescriptiont = {
                        jp = "ディスプレイ・モードとウィンドウのプロパティを取得します。",
                        ko = "윈도우의 총괄적인 상태를 조사합니다."
                    },
                    name = "getMode",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "Window width.",
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "Window height.",
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    description = "Table containing the window properties.",
                                    name = "flags",
                                    table = {
                                        {
                                            description = "Fullscreen (true), or windowed (false).",
                                            name = "fullscreen",
                                            type = "boolean"
                                        },
                                        {
                                            description = "The type of fullscreen mode used.",
                                            name = "fullscreentype",
                                            type = "FullscreenType"
                                        },
                                        {
                                            description = "True if the graphics framerate is synchronized with the monitor's refresh rate, false otherwise.",
                                            name = "vsync",
                                            type = "boolean"
                                        },
                                        {
                                            description = "The number of antialiasing samples used (0 if MSAA is disabled).",
                                            name = "msaa",
                                            type = "number"
                                        },
                                        {
                                            description = "True if the window is resizable in windowed mode, false otherwise.",
                                            name = "resizable",
                                            type = "boolean"
                                        },
                                        {
                                            description = "True if the window is borderless in windowed mode, false otherwise.",
                                            name = "borderless",
                                            type = "boolean"
                                        },
                                        {
                                            description = "True if the window is centered in windowed mode, false otherwise.",
                                            name = "centered",
                                            type = "boolean"
                                        },
                                        {
                                            description = "The index of the display the window is currently in, if multiple monitors are available.",
                                            name = "display",
                                            type = "number"
                                        },
                                        {
                                            description = "The minimum width of the window, if it's resizable.",
                                            name = "minwidth",
                                            type = "number"
                                        },
                                        {
                                            description = "The minimum height of the window, if it's resizable.",
                                            name = "minheight",
                                            type = "number"
                                        },
                                        {
                                            description = "True if high-dpi mode should be used on Retina displays in OS X and iOS. Does nothing on non-Retina displays. Added in 0.9.1.",
                                            name = "highdpi",
                                            type = "boolean"
                                        },
                                        {
                                            description = "The refresh rate of the screen's current display mode, in Hz. May be 0 if the value can't be determined.",
                                            name = "refreshrate",
                                            type = "number"
                                        },
                                        {
                                            description = "The x-coordinate of the window's position in its current display.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            description = "The y-coordinate of the window's position in its current display.",
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the DPI scale factor associated with the window.\n\nThe pixel density inside the window might be greater (or smaller) than the \"size\" of the window. For example on a retina screen in Mac OS X with the highdpi window flag enabled, the window may take up the same physical size as an 800x600 window, but the area inside the window uses 1600x1200 pixels. love.window.getPixelScale() would return 2.0 in that case.\n\nThe love.window.fromPixels and love.window.toPixels functions can also be used to convert between units.\n\nThe highdpi window flag must be enabled to use the full pixel density of a Retina screen on Mac OS X and iOS. The flag currently does nothing on Windows and Linux, and on Android it is effectively always enabled.",
                    descriptiont = {
                        jp = "ウィンドウに関連づけられた DPI 縮尺係数を取得します。\n\nウインドウ内でピクセル密度はウィンドウの \"寸法\" より大きい (またはより小さい) 場合があります。 例えば Mac OS X において Retina スクリーン上で highdpi window フラグが有効化されているならば、ウィンドウは 800x600 のウィンドウと物理的な同一寸法を受け入れることはできますが、ウィンドウ内の領域は 1600x1200 ピクセルを使用します。その場合 love.window.getPixelScale() は 2.0 を返します。\n\nlove.window.fromPixels および love.window.toPixels 関数は単位の相互変換にも使用することができます。\n\nhighdpi window は OS X において Retina スクリーンで全ピクセル密度を使用できるようにする必要があります。このフラグは現在 Windows と Linux では何も処理を行いませんが、 Android では実質的に常時有効です。"
                    },
                    minidescriptiont = {
                        jp = "ウィンドウに関連づけられた DPI 縮尺係数を取得します。"
                    },
                    name = "getPixelScale",
                    variants = {
                        {
                            descriptiont = {
                                jp = "love.graphics.getWidth, love.graphics.getHeight, love.mouse.getPosition, mouse イベント, love.touch.getPosition, および touch イベントは常にピクセル単位換算です。\n\n== 関連 ==\n\n* parent::love.window (日本語)\n\n* love.window.toPixels (日本語)\n\n* love.window.fromPixels (日本語)\n\n* love.window.setMode (日本語)\n\n* Config Files (日本語)\n\nCategory:Functions\n\n{{#set:Since=091}}\n\n{{#set:PrettySince=0.9.1}}\n\n{{#set:Description=ウィンドウに関連づけられた DPI 縮尺係数を取得します。}}\n\n== そのほかの言語 =="
                            },
                            returns = {
                                {
                                    description = "The pixel scale factor associated with the window.",
                                    descriptiont = {
                                        jp = "ウィンドウに関連づけられたピクセルの縮尺係数。"
                                    },
                                    name = "scale",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the position of the window on the screen.\n\nThe window position is in the coordinate space of the display it is currently in.",
                    descriptiont = {
                        de = "Gibt die Position des Fensters auf dem Bildschirm zurück.\n\nDie Position richtet sich dabei nach dem Koordinatensystem des gewählten Bildschirms.",
                        jp = "画面上にあるウィンドウの位置を取得します。\n\nウィンドウ位置は現在のディスプレイの座標空間にあります。"
                    },
                    minidescriptiont = {
                        de = "Gibt die Position des Fensters auf dem Bildschirm zurück.",
                        jp = "画面上にあるウィンドウの位置を取得します。"
                    },
                    name = "getPosition",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The x-coordinate of the window's position.",
                                    descriptiont = {
                                        de = "Die x-Koordinate des Fensters.",
                                        jp = "ウィンドウ位置の x 座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y-coordinate of the window's position.",
                                    descriptiont = {
                                        de = "Die y-Koordinate des Fensters.",
                                        jp = "ウィンドウ位置の y 座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The index of the display that the window is in.",
                                    descriptiont = {
                                        de = "Der Index des Bildschirms in dem sich das Fenster befindet.",
                                        jp = "ウィンドウがあるディスプレイの索引。"
                                    },
                                    name = "display",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the window title.",
                    descriptiont = {
                        de = "Gibt den Titel des Fensters zurück.",
                        jp = "ウィンドウのタイトルを取得します。",
                        ko = "윈도우 타이틀을 설정합니다.",
                        ru = "Получает заголовок окна."
                    },
                    minidescriptiont = {
                        de = "Gibt den Titel des Fensters zurück.",
                        jp = "ウィンドウのタイトルを取得します。",
                        ko = "윈도우 타이틀을 설정합니다.",
                        ru = "Получает заголовок окна."
                    },
                    name = "getTitle",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The current window title.",
                                    descriptiont = {
                                        de = "Der aktuelle Titel.",
                                        jp = "現在のウィンドウのタイトル",
                                        ko = "현재 윈도우 타이틀.",
                                        ru = "Заголовок окна."
                                    },
                                    name = "title",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks if the game window has keyboard focus.",
                    descriptiont = {
                        jp = "ゲームのウィンドウにキーボードのフォーカスがあるか確認します。",
                        ko = "윈도우가 키보드 포커스를 가지고 있는지 조사합니다."
                    },
                    minidescriptiont = {
                        jp = "ゲームのウィンドウにキーボードのフォーカスがあるか確認します。",
                        ko = "윈도우가 키보드 포커스를 가지고 있는지 조사합니다."
                    },
                    name = "hasFocus",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the window has the focus or false if not.",
                                    descriptiont = {
                                        jp = "true ならばウィンドウにはキーボードのフォーカスがあり、それ以外は false です。",
                                        ko = "포커스를 가지고 있으면 true."
                                    },
                                    name = "focus",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks if the game window has mouse focus.",
                    descriptiont = {
                        jp = "ゲームのウィンドウにマウスのフォーカスがあるか確認します。",
                        ko = "윈도우가 마우스 포커스를 가지고 있는지 조사합니다."
                    },
                    minidescriptiont = {
                        jp = "ゲームのウィンドウにマウスのフォーカスがあるか確認します。",
                        ko = "윈도우가 마우스 포커스를 가지고 있는지 조사합니다."
                    },
                    name = "hasMouseFocus",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the window has mouse focus or false if not.",
                                    descriptiont = {
                                        jp = "true ならばウィンドウにはマウスのフォーカスがあり、それ以外は false です。",
                                        ko = "포커스를 가지고 있으면 true."
                                    },
                                    name = "focus",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether the display is allowed to sleep while the program is running.\n\nDisplay sleep is disabled by default. Some types of input (e.g. joystick button presses) might not prevent the display from sleeping, if display sleep is allowed.",
                    descriptiont = {
                        jp = "プログラム実行中に画面の休止を有効にするかどうかを取得します。標準では画面の休止は無効です。\n\n画面の休止が有効な場合に、ある種の入力 (例えばジョイスティックのボタンが押された) では画面の休止を防止しない場合があります。"
                    },
                    minidescriptiont = {
                        jp = "プログラム実行中に画面の休止を有効にするかどうかを取得します。"
                    },
                    name = "isDisplaySleepEnabled",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if system display sleep is enabled / allowed, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばシステム画面の休止は有効 / 許可されていますが、それ以外は false です。"
                                    },
                                    name = "enabled",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets whether the Window is currently maximized.\n\nThe window can be maximized if it is not fullscreen and is resizable, and either the user has pressed the window's Maximize button or love.window.maximize has been called.",
                    descriptiont = {
                        jp = "現在のウィンドウが最大化されているかどうかを取得します。\n\n全顔面表示ではなく尺度変更可能であるならばウィンドウは最大化可能であり、その場合は利用者により最大化ボタンが押されたか、あるいは love.window.maximize が呼び出されたかのいずれかです。"
                    },
                    minidescriptiont = {
                        jp = "現在のウィンドウが最大化されているかどうかを取得します。"
                    },
                    name = "isMaximized",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the window is currently maximized in windowed mode, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならば現在のウィンドウはウインドウ表示方式で最大化されており、それ以外は false です。"
                                    },
                                    name = "maximized",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks if the window is open.",
                    descriptiont = {
                        jp = "ウインドウが開かれているかどうか確認します。"
                    },
                    minidescriptiont = {
                        jp = "ウインドウが開かれているかどうか確認します。"
                    },
                    name = "isOpen",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the window is open, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならばウインドウは開かれており、それ以外は false です。"
                                    },
                                    name = "open",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks if the game window is visible.\n\nThe window is considered visible if it's not minimized and the program isn't hidden.",
                    descriptiont = {
                        jp = "ゲームのウィンドウが表示されているか確認します。\n\nウィンドウは隠されたり最小化されていないときは表示されていると見なされます。",
                        ko = "게임 윈도우가 보이는지에 대한 여부를 조사합니다.\n\n윈도우가 최소화되거나 완전히 숨겨진 게 아니면 항상 보이는 것으로 간주합니다."
                    },
                    minidescriptiont = {
                        jp = "ゲームのウィンドウが表示されているか確認します。",
                        ko = "게임 윈도우가 보이는지에 대한 여부를 조사합니다."
                    },
                    name = "isVisible",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "True if the window is visible or false if not.",
                                    descriptiont = {
                                        jp = "True ならばウィンドウは表示されており、それ以外は false です。",
                                        ko = "윈도우 가시성."
                                    },
                                    name = "visible",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Makes the window as large as possible.\n\nThis function has no effect if the window isn't resizable, since it essentially programmatically presses the window's \"maximize\" button.",
                    descriptiont = {
                        jp = "ウィンドウを可能な限り最大化します。\n\nこの関数は本質的にプログラムでウィンドウの\"最大化\"ボタンを押すため。ウィンドウの大きさが resizable ではない場合は効果はありません。"
                    },
                    minidescriptiont = {
                        jp = "ウィンドウを可能な限り最大化します。"
                    },
                    name = "maximize",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Minimizes the window to the system's task bar / dock.",
                    descriptiont = {
                        de = "Minimiert das Fenster in die Task Bar / das Dock.",
                        jp = "ウィンドウをシステムのタスクバー / ドックへ最小化します。"
                    },
                    minidescriptiont = {
                        de = "Minimiert das Fenster in die Task Bar / das Dock.",
                        jp = "ウィンドウをシステムのタスクバー / ドックへ最小化します。"
                    },
                    name = "minimize",
                    variants = {
                        {}
                    }
                },
                {
                    description = "Causes the window to request the attention of the user if it is not in the foreground.\n\nIn Windows the taskbar icon will flash, and in OS X the dock icon will bounce.",
                    descriptiont = {
                        jp = "ウィンドウがフォアグラウンドではない場合に利用者へ注意を促します。\n\nWindows ではタスクバーのアイコンは点滅し、 OS X ではドックのアイコンは弾みます。"
                    },
                    minidescriptiont = {
                        jp = "ウィンドウがフォアグラウンドではない場合に利用者へ注意を促します。"
                    },
                    name = "requestAttention",
                    variants = {
                        {
                            arguments = {
                                {
                                    default = "false",
                                    description = "Whether to continuously request attention until the window becomes active, or to do it only once.",
                                    descriptiont = {
                                        jp = "ウィンドウがアクティブになるまで絶えず注意を促すか、あるいは一度だけ注意を促すかどうか。"
                                    },
                                    name = "continuous",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets whether the display is allowed to sleep while the program is running.\n\nDisplay sleep is disabled by default. Some types of input (e.g. joystick button presses) might not prevent the display from sleeping, if display sleep is allowed.",
                    descriptiont = {
                        jp = "プログラム実行中に画面の休止を有効にするかどうかを設定します。標準では画面の休止は無効です。\n\n画面の休止が有効な場合に、ある種の入力 (例えばジョイスティックのボタンが押された) では画面の休止を防止しない場合があります。"
                    },
                    minidescriptiont = {
                        jp = "プログラム実行中に画面の休止を有効にするかどうかを設定します。"
                    },
                    name = "setDisplaySleepEnabled",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "True to enable system display sleep, false to disable it.",
                                    descriptiont = {
                                        jp = "true ならばシステム画面の休止を有効化しますが、それ以外は false です。"
                                    },
                                    name = "enable",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Enters or exits fullscreen. The display to use when entering fullscreen is chosen based on which display the window is currently in, if multiple monitors are connected.\n\nIf fullscreen mode is entered and the window size doesn't match one of the monitor's display modes (in normal fullscreen mode) or the window size doesn't match the desktop size (in 'desktop' fullscreen mode), the window will be resized appropriately. The window will revert back to its original size again when fullscreen mode is exited using this function.",
                    descriptiont = {
                        jp = "フルスクリーンへ入るか出ます。複数のモニターが接続されているとき、フルスクリーンに入るために使用するディスプレイの選択は現在のウィンドウが表示されているディスプレイであるかによります。",
                        ko = "전체 화면 모드로 진입하거나 빠져 나옵니다. 다중 모니터 환경일 경우 현재 모니터가 위치한 모니터에서 전체 화면 모드로 진입합니다."
                    },
                    minidescriptiont = {
                        jp = "フルスクリーンへ入るか出ます。",
                        ko = "전체 화면 모드로 진입하거나 빠져 나옵니다."
                    },
                    name = "setFullscreen",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Whether to enter or exit fullscreen mode.",
                                    descriptiont = {
                                        jp = "フルスクリーン・モードへ入るか出るかどうか。",
                                        ko = "전체 화면에 진입할지 빠져 나갈지 결정."
                                    },
                                    name = "fullscreen",
                                    type = "boolean"
                                }
                            },
                            returns = {
                                {
                                    description = "True if successful, false otherwise.",
                                    descriptiont = {
                                        jp = "True ならば成功であり、それ以外は false です。",
                                        ko = "성공하면 true."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "Whether to enter or exit fullscreen mode.",
                                    descriptiont = {
                                        jp = "フルスクリーン・モードへ入るか出るかどうか。",
                                        ko = "전체 화면에 진입할지 빠져 나갈지 결정."
                                    },
                                    name = "fullscreen",
                                    type = "boolean"
                                },
                                {
                                    description = "The type of fullscreen mode to use.",
                                    descriptiont = {
                                        jp = "使用するフルスクリーン・モードの種類。",
                                        ko = "전체 화면 모드 종류."
                                    },
                                    name = "fstype",
                                    type = "FullscreenType"
                                }
                            },
                            descriptiont = {
                                ko = "normal 전체 화면 모드로 진입할 때 현재 윈도우의 크기를 모니터가 지원하지 못할 경우, desktop 모드에서 윈도우의 크기가 모니터와 일치하지 않는 경우 윈도우의 크기는 적당한 값으로 재조정하면서 전체 화면에 진입합니다. 전체 화면 모드에서 이 함수를 다시 사용하면 원래 윈도우 크기로 되돌아올 수 있습니다. 자세한 정보는 FullscreenType을 참조하세요.\n\n== 예제 ==\n\ndesktop 전체 화면 모드로 설정합니다.\n\n&lt;source lang=\"lua\"&gt;\n\nfunction love.load()\n\n    love.window.setFullscreen(true, \"desktop\")\n\nend\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "True if successful, false otherwise.",
                                    descriptiont = {
                                        jp = "true ならば成功であり、それ以外は false です。",
                                        ko = "성공하면 true."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the window icon until the game is quit. Not all operating systems support very large icon images.",
                    descriptiont = {
                        jp = "ウィンドウのアイコンをゲームの終了まで設定します。全てのオペレーティングシステムが非常に大きいアイコンの画像に対応しているわけではありません。",
                        ko = "게임이 종료될 때까지 사용할 윈도우 아이콘을 설정합니다. 일부 OS에서는 큰 크기의 아이콘을 지원하지 않습니다.",
                        ru = "Устанавлевает иконку окна. Не все ОС поддерживают большие картинки."
                    },
                    minidescriptiont = {
                        jp = "ウィンドウのアイコンを設定します。",
                        ko = "윈도우 아이콘을 설정합니다.",
                        ru = "Устанавлевает иконку окна."
                    },
                    name = "setIcon",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The window icon image.",
                                    descriptiont = {
                                        jp = "ウィンドウのアイコン画像。",
                                        ko = "윈도우 아이콘 이미지",
                                        ru = "Картинка которая будет установлена в качестве иконки."
                                    },
                                    name = "imagedata",
                                    type = "ImageData"
                                }
                            },
                            returns = {
                                {
                                    description = "Whether the icon has been set successfully.",
                                    descriptiont = {
                                        jp = "アイコンの設定が成功したかどうか。",
                                        ko = "아이콘이 성공적으로 설정되었는지 여부.",
                                        ru = "True если иконка была установлена, иначе false."
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the display mode and properties of the window.\n\nIf width or height is 0, setMode will use the width and height of the desktop.\n\nChanging the display mode may have side effects: for example, canvases will be cleared and values sent to shaders with Shader:send will be erased. Make sure to save the contents of canvases beforehand or re-draw to them afterward if you need to.",
                    descriptiont = {
                        jp = "ディスプレイ・モードとウィンドウのプロパティを設定します。\n\n幅または高さに 0 を指定したとき setMode はデスクトップの幅と高さを使用します。\n\nディスプレイ・モードの変更には場合により副作用があります: 例えば、キャンバスは消去されて値はシェーダーである Shader:send へ送られた後に消去されます。事前にキャンバスの内容を保存しておくか必要であれば後で再描画を行ってください。",
                        ko = "윈도우의 총괄적인 상태를 변경합니다.\n\n모니터 전체의 크기로 너비나 높이를 변경하려면 이들의 값을 0으로 설정하세요.\n\n이 함수를 사용할 경우 Canvas가 초기화되는 둥 여러가지 부수 효과가 발생할 수도 있습니다. 해당 데이터에 중요한 정보가 담겨 있다면 보존해 두어야 합니다."
                    },
                    minidescriptiont = {
                        jp = "ディスプレイ・モードとウィンドウのプロパティを設定します。",
                        ko = "윈도우의 총괄적인 상태를 변경합니다."
                    },
                    name = "setMode",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "Display width.",
                                    name = "width",
                                    type = "number"
                                },
                                {
                                    description = "Display height.",
                                    name = "height",
                                    type = "number"
                                },
                                {
                                    description = "The flags table with the options:",
                                    name = "flags",
                                    table = {
                                        {
                                            default = "false",
                                            description = "Fullscreen (true), or windowed (false).",
                                            name = "fullscreen",
                                            type = "boolean"
                                        },
                                        {
                                            default = "\"desktop\"",
                                            description = "The type of fullscreen to use. This defaults to \"normal\" in 0.9.2 and older.",
                                            name = "fullscreentype",
                                            type = "FullscreenType"
                                        },
                                        {
                                            default = "true",
                                            description = "True if LÖVE should wait for vsync, false otherwise.",
                                            name = "vsync",
                                            type = "boolean"
                                        },
                                        {
                                            default = "0",
                                            description = "The number of antialiasing samples.",
                                            name = "msaa",
                                            type = "number"
                                        },
                                        {
                                            default = "false",
                                            description = "True if the window should be resizable in windowed mode, false otherwise.",
                                            name = "resizable",
                                            type = "boolean"
                                        },
                                        {
                                            default = "false",
                                            description = "True if the window should be borderless in windowed mode, false otherwise.",
                                            name = "borderless",
                                            type = "boolean"
                                        },
                                        {
                                            default = "true",
                                            description = "True if the window should be centered in windowed mode, false otherwise.",
                                            name = "centered",
                                            type = "boolean"
                                        },
                                        {
                                            default = "1",
                                            description = "The index of the display to show the window in, if multiple monitors are available.",
                                            name = "display",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "The minimum width of the window, if it's resizable. Cannot be less than 1.",
                                            name = "minwidth",
                                            type = "number"
                                        },
                                        {
                                            default = "1",
                                            description = "The minimum height of the window, if it's resizable. Cannot be less than 1.",
                                            name = "minheight",
                                            type = "number"
                                        },
                                        {
                                            default = "false",
                                            description = "True if high-dpi mode should be used on Retina displays in OS X. Does nothing on non-Retina displays.",
                                            name = "highdpi",
                                            type = "boolean"
                                        },
                                        {
                                            default = "nil",
                                            description = "The x-coordinate of the window's position in the specified display.",
                                            name = "x",
                                            type = "number"
                                        },
                                        {
                                            default = "nil",
                                            description = "The y-coordinate of the window's position in the specified display.",
                                            name = "y",
                                            type = "number"
                                        }
                                    },
                                    type = "table"
                                }
                            },
                            returns = {
                                {
                                    description = "True if successful, false otherwise.",
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the position of the window on the screen.\n\nThe window position is in the coordinate space of the specified display.",
                    descriptiont = {
                        de = "Bestimmt die Position des Fensters auf dem Bildschirm.\n\nDie Position richtet sich dabei nach dem Koordinatensystem des gewählten Bildschirms.",
                        jp = "画面上にあるウィンドウの位置を設定します。\n\nウィンドウ位置は指定されたディスプレイの座標空間にあります。"
                    },
                    minidescriptiont = {
                        de = "Bestimmt die Position des Fensters auf dem Bildschirm.",
                        jp = "画面上にあるウィンドウの位置を設定します。"
                    },
                    name = "setPosition",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The x-coordinate of the window's position.",
                                    descriptiont = {
                                        de = "Die x-Koordinate des Fensters.",
                                        jp = "ウィンドウ位置の x 座標。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y-coordinate of the window's position.",
                                    descriptiont = {
                                        de = "Die y-Koordinate des Fensters.",
                                        jp = "ウィンドウ位置の y 座標。"
                                    },
                                    name = "y",
                                    type = "number"
                                },
                                {
                                    description = "The index of the display that the new window position is relative to.",
                                    descriptiont = {
                                        de = "Der Index des Bildschirms nach welchem sich die Fensterpositionierung richten soll.",
                                        jp = "ウィンドウがあるディスプレイの索引。"
                                    },
                                    name = "display",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Sets the window title.",
                    descriptiont = {
                        de = "Bestimmt den Titel des Programmfensters.",
                        jp = "ウィンドウのタイトルを設定します。",
                        ko = "윈도우 타이틀을 설정합니다.",
                        ru = "Устанавливает заголовок окна."
                    },
                    minidescriptiont = {
                        de = "Bestimmt den Titel des Programmfensters.",
                        jp = "ウィンドウのタイトルを設定します。",
                        ko = "윈도우 타이틀을 설정합니다.",
                        ru = "Устанавливает заголовок окна."
                    },
                    name = "setTitle",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The new window title.",
                                    descriptiont = {
                                        de = "Der neue Titel.",
                                        jp = "新しいウィンドウのタイトル。",
                                        ko = "새 윈도우 타이틀.",
                                        ru = "Новый заголовок окна."
                                    },
                                    name = "title",
                                    type = "string"
                                }
                            },
                            descriptiont = {
                                de = "Der Fenstertitel kann auch bequem in der Konfigurationsdatei eingestellt werden."
                            }
                        }
                    }
                },
                {
                    description = "Displays a message box dialog above the love window. The message box contains a title, optional text, and buttons.",
                    descriptiont = {
                        jp = "LOVE ウィンドウの上へメッセージボックスを表示します。メッセージボックスはタイトル、選択制のテキストおよびボタンを内包しています。"
                    },
                    minidescriptiont = {
                        jp = "LOVE ウィンドウの上へメッセージボックスを表示します。"
                    },
                    name = "showMessageBox",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The title of the message box.",
                                    descriptiont = {
                                        jp = "メッセージボックスのタイトル。"
                                    },
                                    name = "title",
                                    type = "string"
                                },
                                {
                                    description = "The text inside the message box.",
                                    descriptiont = {
                                        jp = "メッセージボックスの内側にあるテキスト。"
                                    },
                                    name = "message",
                                    type = "string"
                                },
                                {
                                    default = "\"info\"",
                                    description = "The type of the message box.",
                                    descriptiont = {
                                        jp = "メッセージボックスの種類。"
                                    },
                                    name = "type",
                                    type = "MessageBoxType"
                                },
                                {
                                    default = "true",
                                    description = "Whether the message box should be attached to the love window or free-floating.",
                                    descriptiont = {
                                        jp = "メッセージボックスを LOVE ウィンドウへ貼り付けるかまたは自由に動かせるかどうか。"
                                    },
                                    name = "attachtowindow",
                                    type = "boolean"
                                }
                            },
                            descriptiont = {
                                jp = "単一の 'OK' ボタンがある単純なメッセージボックス。"
                            },
                            returns = {
                                {
                                    description = "Whether the message box was successfully displayed.",
                                    descriptiont = {
                                        jp = "メッセージボックスの表示が成功したかどうか。"
                                    },
                                    name = "success",
                                    type = "boolean"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The title of the message box.",
                                    descriptiont = {
                                        jp = "メッセージボックスのタイトル。"
                                    },
                                    name = "title",
                                    type = "string"
                                },
                                {
                                    description = "The text inside the message box.",
                                    descriptiont = {
                                        jp = "メッセージボックスの内側にあるテキスト。"
                                    },
                                    name = "message",
                                    type = "string"
                                },
                                {
                                    description = "A table containing a list of button names to show. The table can also contain the fields enterbutton and escapebutton, which should be the index of the default button to use when the user presses 'enter' or 'escape', respectively.",
                                    descriptiont = {
                                        jp = "表示するボタン名称の一覧を内包するテーブルです。さらにテーブルには enterbutton および escapebutton フィールドも内包することができ、それぞれ、利用者が 'enter' または 'escape' を押したときに使用する標準ボタンの索引である必要があります。"
                                    },
                                    name = "buttonlist",
                                    type = "table"
                                },
                                {
                                    default = "\"info\"",
                                    description = "The type of the message box.",
                                    descriptiont = {
                                        jp = "メッセージボックスの種類。"
                                    },
                                    name = "type",
                                    type = "MessageBoxType"
                                },
                                {
                                    default = "true",
                                    description = "Whether the message box should be attached to the love window or free-floating.",
                                    descriptiont = {
                                        jp = "メッセージボックスを LOVE ウィンドウへ貼り付けるかまたは自由に動かせるかどうか。"
                                    },
                                    name = "attachtowindow",
                                    type = "boolean"
                                }
                            },
                            descriptiont = {
                                jp = "カスタマイズされたボタンの一覧があるメッセージボックスを表示します。"
                            },
                            returns = {
                                {
                                    description = "The index of the button pressed by the user. May be 0 if the message box dialog was closed without pressing a button.",
                                    descriptiont = {
                                        jp = "利用者により押されたボタンの索引。ボタンを押さずにメッセージボックスのダイアログが閉じられた場合は 0 である場合があります。"
                                    },
                                    name = "pressedbutton",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Converts a number from density-independent units to pixels.\n\nThe pixel density inside the window might be greater (or smaller) than the \"size\" of the window. For example on a retina screen in Mac OS X with the highdpi window flag enabled, the window may take up the same physical size as an 800x600 window, but the area inside the window uses 1600x1200 pixels. love.window.toPixels(800) would return 1600 in that case.\n\nThis is used to convert coordinates from the size users are expecting them to display at onscreen to pixels. love.window.fromPixels does the opposite. The highdpi window flag must be enabled to use the full pixel density of a Retina screen on Mac OS X and iOS. The flag currently does nothing on Windows and Linux, and on Android it is effectively always enabled.\n\nMost LÖVE functions return values and expect arguments in terms of pixels rather than density-independent units.",
                    descriptiont = {
                        jp = "数値を密度非依存単位からピクセルへ変換します。\n\nウインドウ内でピクセル密度はウィンドウの \"寸法\" より大きい (またはより小さい) 場合があります。 例えば Mac OS X において Retina スクリーン上で highdpi window フラグが有効化されているならば、ウィンドウは 800x600 のウィンドウと物理的な同一寸法を受け入れることはできますが、ウィンドウ内の領域は 1600x1200 ピクセルを使用します。その場合において love.window.toPixels(800) は 1600 を返します。\n\nこれは利用者が画面上で表示すると思われる寸法からピクセルへ座標を変換するために使用されます。 love.window.fromPixels は逆の動作をします。 highdpi window は OS X において Retina スクリーンで全ピクセル密度を使用できるようにする必要があります。 このフラグは現在 Windows と Linux では何も処理を行いませんが、 Android では実質的に常時有効です。\n\nほとんどの LÖVE 関数における返値の値および引数は密度非依存単位ではなくピクセルの点を想定しています。"
                    },
                    minidescriptiont = {
                        jp = "数値を密度非依存単位からピクセルへ変換します。"
                    },
                    name = "toPixels",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "A number in density-independent units to convert to pixels.",
                                    descriptiont = {
                                        jp = "ピクセルから密度非依存単位へ変換するための数値。"
                                    },
                                    name = "value",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The converted number, in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位での、変換された数値。"
                                    },
                                    name = "pixelvalue",
                                    type = "number"
                                }
                            }
                        },
                        {
                            arguments = {
                                {
                                    description = "The x-axis value of a coordinate in density-independent units to convert to pixels.",
                                    descriptiont = {
                                        jp = "密度非依存単位からピクセルへ変換するための X 軸の座標値。"
                                    },
                                    name = "x",
                                    type = "number"
                                },
                                {
                                    description = "The y-axis value of a coordinate in density-independent units to convert to pixels.",
                                    descriptiont = {
                                        jp = "密度非依存単位からピクセルへ変換するための Y 軸の座標値。"
                                    },
                                    name = "y",
                                    type = "number"
                                }
                            },
                            returns = {
                                {
                                    description = "The converted x-axis value of the coordinate, in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位での、変換された X 軸の座標値。"
                                    },
                                    name = "px",
                                    type = "number"
                                },
                                {
                                    description = "The converted y-axis value of the coordinate, in pixels.",
                                    descriptiont = {
                                        jp = "ピクセル単位での、変換された Y 軸の座標値。"
                                    },
                                    name = "py",
                                    type = "number"
                                }
                            }
                        }
                    }
                }
            },
            name = "window"
        }
    },
    types = {
        {
            description = "The superclass of all data.",
            descriptiont = {
                de = "Die Superklasse aller Datentypen.",
                jp = "全てのデータにおける上位クラスです。",
                ko = "모든 데이터 타입의 최상위 타입입니다.",
                pt = "A superclasse de todos os dados.",
                ru = "Базовый класс данных."
            },
            functions = {
                {
                    description = "Gets a pointer to the Data.",
                    descriptiont = {
                        de = "Gibt einen Zeiger auf das Datum zurück. Kann zusammen mit Bibliotheken wie LuaJITs FFI verwendet werden.",
                        jp = "Data のポインタを取得します。LuaJIT の FFI といったライブラリと一緒に使用できます。",
                        ko = "데이터의 포인터를 얻어옵니다. LuaJIT의 FFI과 같은 라이브러리에서 유용하게 사용될 수 있습니다.",
                        pt = "Obtém um ponteiro para o dado. Pode ser usada com bibliotecas, como o FFI do LuaJIT.",
                        ru = "Получает указатель на данные."
                    },
                    minidescriptiont = {
                        de = "Gibt einen Zeiger auf das Datum zurück.",
                        jp = "Data のポインタを取得します。",
                        ko = "데이터의 포인터를 얻어옵니다.",
                        pt = "Obtém um ponteiro para o dado.",
                        ru = "Получает указатель на данные."
                    },
                    name = "getPointer",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "A raw pointer to the Data.",
                                    descriptiont = {
                                        de = "Ein roher Zeiger auf das Datum.",
                                        jp = "Data の生ポインタ。",
                                        ko = "데이터를 가리키는 포인터.",
                                        pt = "Um ponteiro bruto para o dado."
                                    },
                                    name = "pointer",
                                    type = "light userdata"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the size of the Data.",
                    descriptiont = {
                        de = "Gibt die Größe des Datums in Bytes zurück.",
                        jp = "Data の大きさをバイトで取得します。",
                        ko = "데이터의 크기를 구합니다.",
                        pt = "Obtém o tamanho do dado em bytes.",
                        ru = "Получает размер данных."
                    },
                    minidescriptiont = {
                        de = "Gibt die Größe des Datums in Bytes zurück.",
                        jp = "Data の大きさをバイトで取得します。",
                        ko = "데이터의 크기를 구합니다.",
                        pt = "Obtém o tamanho do dado em bytes.",
                        ru = "Получает размер данных."
                    },
                    name = "getSize",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The size of the Data in bytes.",
                                    descriptiont = {
                                        de = "Die Größe des Datums in Bytes.",
                                        jp = "バイトでの Data の大きさ。",
                                        ko = "바이트 단위로 계산된 데이터의 크기.",
                                        pt = "O tamanho do dado em bytes.",
                                        ru = "Размер данных в байтах."
                                    },
                                    name = "size",
                                    type = "number"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Gets the full Data as a string.",
                    descriptiont = {
                        de = "Gibt das gesamte Datum als Zeichenkette zurück.",
                        jp = "完全な Data を文字列形式で取得します。",
                        ko = "모든 데이터를 문자열로 반환합니다.",
                        pt = "Obtém o dado todo como um string."
                    },
                    minidescriptiont = {
                        de = "Gibt das gesamte Datum als Zeichenkette zurück.",
                        jp = "完全な Data を文字列形式で取得します。",
                        ko = "모든 데이터를 문자열로 반환합니다.",
                        pt = "Obtém o dado todo como um string."
                    },
                    name = "getString",
                    variants = {
                        {
                            returns = {
                                {
                                    description = "The raw data.",
                                    descriptiont = {
                                        de = "Das unbearbeitete Datum.",
                                        jp = "生の Data",
                                        ko = "순수한 데이터.",
                                        pt = "O dado bruto."
                                    },
                                    name = "data",
                                    type = "string"
                                }
                            }
                        }
                    }
                }
            },
            minidescriptiont = {
                pt = "A superclasse de todos os dados."
            },
            name = "Data",
            parenttype = "Object",
            subtypes = {
                "CompressedData",
                "CompressedImageData",
                "FileData",
                "FontData",
                "GlyphData",
                "ImageData",
                "SoundData"
            },
            supertypes = {
                "Object"
            }
        },
        {
            description = "Superclass for all things that can be drawn on screen. This is an abstract type that can't be created directly.",
            descriptiont = {
                de = "Die Superklasse für alle Dinge, die auf den Bildschirm gezeichnet werden können. Es handelt sich hierbei um einen abstrakten Typen und kann daher nicht direkt erstellt werden.",
                jp = "画面へ描画可能な全てのものに対しての上位型です。この抽象型は直接の作成できません。",
                pt = "Superclasse para tudo que pode ser desenhado na tela. Este é um tipo abstrato que não pode ser diretamente criado.",
                ru = "Базовый класс для всех объектов, которые могут быть отображены на экране. Это абстрактный тип, объекты которого не могут быть созданы напрямую."
            },
            minidescriptiont = {
                pt = "Superclasse para tudo que pode ser desenhado na tela."
            },
            name = "Drawable",
            parenttype = "Object",
            subtypes = {
                "Canvas",
                "Image",
                "Mesh",
                "ParticleSystem",
                "SpriteBatch",
                "Text",
                "Texture",
                "Video"
            },
            supertypes = {
                "Object"
            }
        },
        {
            description = "The superclass of all LÖVE types.",
            descriptiont = {
                de = "Die Superklasse aller LÖVE-Typen.",
                jp = "全ての LÖVE 型における上位クラスです。",
                ko = "LÖVE의 최상위 타입입니다.",
                pt = "A superclasse de todos os tipos do LÖVE.",
                ru = "Базовый класс для всех типов LÖVE."
            },
            functions = {
                {
                    description = "Gets the type of the object as a string.",
                    descriptiont = {
                        de = "Gibt den Typ des Objekts als String zurück.",
                        jp = "オブジェクトの種類を文字列形式で取得します。",
                        ko = "객체의 타입을 문자열로 리턴합니다.",
                        pt = "Obtém o tipo do objeto como um string.",
                        ru = "Получает строку с названием типа объекта."
                    },
                    minidescriptiont = {
                        de = "Gibt den Typ des Objekts als String zurück.",
                        jp = "オブジェクトの種類を文字列形式で取得します。",
                        ko = "객체의 타입을 문자열로 리턴합니다.",
                        pt = "Obtém o tipo do objeto como um string.",
                        ru = "Получает строку с названием типа объекта."
                    },
                    name = "type",
                    variants = {
                        {
                            descriptiont = {
                                de = "=== Überblick ===\n\n&lt;source lang=\"lua\"&gt;\n\ntype = Object:type()\n\n&lt;/source&gt;"
                            },
                            returns = {
                                {
                                    description = "The type as a string.",
                                    descriptiont = {
                                        de = "Der Typ als String.",
                                        jp = "種類を文字列形式で返します。",
                                        ko = "타입의 이름.",
                                        pt = "O tipo como um string.",
                                        ru = "Строка, содержащая тип."
                                    },
                                    name = "type",
                                    type = "string"
                                }
                            }
                        }
                    }
                },
                {
                    description = "Checks whether an object is of a certain type. If the object has the type with the specified name in its hierarchy, this function will return true.",
                    descriptiont = {
                        de = "Überprüft, ob ein Objekt einem bestimmten Typen angehört. Wenn das Objekt den Typ mit dem angegebenen Namen in seiner Hierarchie beinhaltet, gibt diese Funktion den Wert true zurück.",
                        jp = "オブジェクトが特定の種類かどうか確認します。指定された名称のオブジェクトが階層に属している種類ならば、この関数は true を返します。",
                        ko = "객체가 특정 타입인지 검사합니다. 객체가 검사하려는 타입과 같은 타입이거나 상위 타입일 때 이 함수는 true를 리턴합니다.",
                        pt = "Verifica se um objeto é de um certo tipo. Se a função tem o tipo com o nome especificado em sua hierarquia, esta função retornará verdadeiro.",
                        ru = "Проверят, является ли объект определенным типом. Если объект содержит тип с указанным именем в своей иерархии, эта функция вернет истину."
                    },
                    minidescriptiont = {
                        de = "Überprüft ob ein Objekt einem bestimmten Datentypen angehört.",
                        jp = "オブジェクトが特定の種類かどうか確認します。",
                        ko = "객체가 특정 타입인지 검사합니다.",
                        pt = "Verifica se um objeto é de um certo tipo.",
                        ru = "Проверят, является ли объект определенным типом."
                    },
                    name = "typeOf",
                    variants = {
                        {
                            arguments = {
                                {
                                    description = "The name of the type to check for.",
                                    descriptiont = {
                                        jp = "種類を確認をしたいオブジェクトの名称。",
                                        ko = "검사하려는 타입의 이름.",
                                        pt = "O nome do tipo a ser verificado.",
                                        ru = "Название типа, на соответствие которому надо проверить объект."
                                    },
                                    name = "name",
                                    type = "string"
                                }
                            },
                            returns = {
                                {
                                    description = "True if the object is of the specified type, false otherwise.",
                                    descriptiont = {
                                        jp = "True ならばオブジェクトは指定された種類であり、それ以外は false です。",
                                        ko = "해당되면 true, 아니면 false를 리턴.",
                                        pt = "Verdadeiro se o objeto for do tipo especificado; se não, falso.",
                                        ru = "True, если объект соответствует этому типу, иначе false."
                                    },
                                    name = "b",
                                    type = "boolean"
                                }
                            }
                        }
                    }
                }
            },
            minidescriptiont = {
                pt = "A superclasse de todos os tipos do LÖVE."
            },
            name = "Object",
            subtypes = {
                "BezierCurve",
                "Body",
                "Canvas",
                "ChainShape",
                "Channel",
                "CircleShape",
                "CompressedData",
                "CompressedImageData",
                "Contact",
                "Cursor",
                "Data",
                "Decoder",
                "DistanceJoint",
                "Drawable",
                "EdgeShape",
                "File",
                "FileData",
                "Fixture",
                "Font",
                "FontData",
                "FrictionJoint",
                "GearJoint",
                "GlyphData",
                "Image",
                "ImageData",
                "Joint",
                "Joystick",
                "Mesh",
                "MotorJoint",
                "MouseJoint",
                "ParticleSystem",
                "PixelEffect",
                "PolygonShape",
                "PrismaticJoint",
                "PulleyJoint",
                "Quad",
                "RandomGenerator",
                "Rasterizer",
                "RevoluteJoint",
                "RopeJoint",
                "Shader",
                "Shape",
                "SoundData",
                "Source",
                "SpriteBatch",
                "Text",
                "Texture",
                "Thread",
                "Video",
                "VideoStream",
                "WeldJoint",
                "WheelJoint",
                "World"
            }
        }
    },
    version = "0.10.2"
}